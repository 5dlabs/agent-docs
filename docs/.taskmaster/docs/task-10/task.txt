# Task ID: 9
# Title: Implement Solana Query Tool
# Status: pending
# Dependencies: 6, 7
# Priority: medium
# Description: Create the solana_query tool for querying Solana blockchain platform documentation including architecture diagrams and ZK cryptography content.
# Details:
Implement SolanaQueryTool with support for multiple content formats (markdown, PDF, BOB diagrams, MSC charts). Add specialized handling for technical diagrams and cryptography documentation. Parse Solana-specific metadata (category, format, section, complexity, topic). Implement context-aware result presentation. Support cross-referenced documentation linking. Add special handling for PDF content extraction. Register in MCP server with comprehensive tool definition.

# Test Strategy:
Test queries across different content types, validate PDF and diagram content retrieval, test metadata filtering by complexity and topic, verify cross-reference resolution, and ensure proper formatting of technical content.

# Subtasks:
## 1. Create SolanaQueryTool struct implementation [pending]
### Dependencies: None
### Description: Implement the SolanaQueryTool struct following the established pattern in tools.rs with database pool and embedding client dependencies
### Details:
Create a new SolanaQueryTool struct in crates/mcp/src/tools.rs with db_pool and embedding_client fields. Implement a new() constructor that initializes the embedding client and accepts a DatabasePool. Follow the exact pattern used in RustQueryTool for consistency with the existing codebase architecture.

## 2. Implement Solana-specific semantic search with metadata filtering [pending]
### Dependencies: 9.1
### Description: Add semantic_search method to SolanaQueryTool with support for querying Solana documents and filtering by metadata fields like format, complexity, and topic
### Details:
Implement semantic_search method that queries documents where doc_type='solana'. Parse and utilize Solana-specific metadata including category (architecture-diagrams, sequence-diagrams, zk-cryptography), format (markdown, pdf, bob, msc), section, complexity, and topic fields. Add proper pgvector similarity search using the <=> operator. Support result ranking with relevance scores and handle different content formats appropriately.

## 3. Add specialized content formatting for technical diagrams and PDFs [pending]
### Dependencies: 9.2
### Description: Implement content formatting logic that handles BOB diagrams, MSC charts, and PDF metadata with context-aware presentation
### Details:
Create formatting logic that detects content type from metadata and applies appropriate formatting. For BOB/MSC diagrams, preserve ASCII art structure and add descriptive headers. For PDF documents, display metadata summary with file location, size, and content description. For markdown content, format with proper headers and code blocks. Include cross-reference links when available in metadata.

## 4. Implement Tool trait for SolanaQueryTool with MCP definition [pending]
### Dependencies: 9.3
### Description: Implement the Tool trait with comprehensive tool definition and execute method for MCP integration
### Details:
Implement the Tool trait's definition() method returning JSON with tool name 'solana_query', description mentioning Solana blockchain documentation including architecture diagrams and ZK cryptography. Define inputSchema with query (string), limit (integer 1-20), format filter (optional string: markdown/pdf/bob/msc), and complexity filter (optional string). Implement execute() method that validates parameters, calls semantic_search, and returns formatted results.

## 5. Register SolanaQueryTool in MCP handler [pending]
### Dependencies: 9.4
### Description: Add SolanaQueryTool registration to McpHandler::new() method to make it available through the MCP server
### Details:
In crates/mcp/src/handlers.rs, modify McpHandler::new() to instantiate SolanaQueryTool using the provided db_pool. Register the tool in the tools HashMap with key 'solana_query'. Ensure proper error handling during tool initialization. Update any relevant documentation or comments to reflect the new tool availability.

