name: Build and Push Server (Prebuilt Binary)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag to publish (e.g., v0.1.0)'
        required: false
        type: string
  push:
    branches:
      - main
      - feature/**
      - feat/**
      - fix/**
      - hotfix/**

env:
  REGISTRY: ghcr.io
  IMAGE_BASE: ${{ github.repository }}

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      short_sha: ${{ steps.version.outputs.short_sha }}
    steps:
      - uses: actions/checkout@v4
      - id: version
        run: |
          if [ -n "${{ inputs.tag }}" ]; then
            VERSION="${{ inputs.tag }}"
          else
            VERSION="latest"
          fi
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

  build-binary:
    needs: [version]
    runs-on: [k8s-runner]
    steps:
      - uses: actions/checkout@v4
      - name: Cache Rust build
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> target
      - name: Setup Rust (stable)
        run: |
          rustup default stable
          rustup update stable
          rustc --version
          cargo --version
      - name: Build server binary (release)
        env:
          CARGO_INCREMENTAL: "0"
          CARGO_NET_GIT_FETCH_WITH_CLI: "true"
          CARGO_REGISTRIES_CRATES_IO_PROTOCOL: "sparse"
          CARGO_TARGET_DIR: "target"
        run: |
          cargo build --release --bin http_server
          mkdir -p build
          cp target/release/http_server build/http_server
          ls -lh build/http_server
      - name: Upload prebuilt binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-binary
          path: build/http_server

  build-and-push-image:
    needs: [version, build-binary]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Download prebuilt binary
        uses: actions/download-artifact@v4
        with:
          name: server-binary
          path: build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./infra/images/server/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/server:${{ needs.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/server:${{ needs.version.outputs.short_sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1


