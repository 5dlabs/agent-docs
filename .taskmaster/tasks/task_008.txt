# Task ID: 8
# Title: Blockchain Documentation Query Tools
# Status: pending
# Dependencies: 1, 6
# Priority: medium
# Description: Implement query tools for blockchain documentation: solana_query, birdeye_query, meteora_query, and raydium_query.
# Details:
1. Create parsers for each blockchain documentation type
2. Implement 'solana_query' for Solana blockchain documentation
   - Parse Solana docs with special handling for code examples and APIs
3. Implement 'birdeye_query' for BirdEye blockchain API docs
   - Focus on API endpoint documentation and parameters
4. Implement 'meteora_query' for Meteora DEX documentation
   - Include liquidity pool and trading functionality
5. Implement 'raydium_query' for Raydium DEX documentation
   - Parse AMM and farming documentation

Technologies:
- Use specialized parsers for each documentation format
- Store blockchain-specific metadata in JSONB fields
- Implement context-aware chunking for blockchain terminology
- Consider domain-specific embeddings fine-tuning
- Use pgvector's HNSW index for efficient similarity search
- Implement terminology normalization across platforms

# Test Strategy:
1. Test with domain-specific queries for each blockchain platform
2. Verify technical accuracy of returned information
3. Test cross-referencing between different blockchain docs
4. Validate handling of blockchain-specific terminology
5. Test with both beginner and advanced technical queries
6. Verify API documentation is correctly parsed and searchable
