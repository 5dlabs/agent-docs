# Task ID: 5
# Title: Rust Crate Management Tools
# Status: pending
# Dependencies: 1, 4
# Priority: medium
# Description: Implement the management tools for Rust crates: add_rust_crate, remove_rust_crate, list_rust_crates, and check_rust_status.
# Details:
1. Implement 'add_rust_crate' tool for adding new Rust crates
   - Accept crate name and version parameters
   - Fetch documentation from docs.rs
   - Process and embed documentation content
   - Store in the database
2. Implement 'remove_rust_crate' tool
   - Safely remove crate data without affecting other documentation
3. Implement 'list_rust_crates' tool
   - Return formatted list of available crates with versions
4. Implement 'check_rust_status' tool
   - Show processing status for crates being added

Technologies:
- Use reqwest 0.11+ for HTTP requests to docs.rs
- Implement async processing for embedding generation
- Use OpenAI embeddings API with batching
- Implement proper transaction handling for database operations
- Use background job processing for long-running tasks
- Consider tokio 1.25+ for async runtime

# Test Strategy:
1. Test adding various crates of different sizes
2. Verify removal doesn't affect other documentation
3. Test listing functionality with different filter parameters
4. Verify status reporting accuracy during processing
5. Test concurrent operations for race conditions
6. Validate error handling for network issues and API limits
