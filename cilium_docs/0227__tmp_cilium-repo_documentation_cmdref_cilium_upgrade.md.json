{
  "url": "file:///tmp/cilium-repo/Documentation/cmdref/cilium_upgrade.md",
  "content": "cilium upgrade \n Upgrade a Cilium installation a Kubernetes cluster using Helm \n Synopsis \n Upgrade a Cilium installation in a Kubernetes cluster using Helm \n Examples: \n Upgrade Cilium to the latest version, using existing parameters \n $ cilium upgrade \n Upgrade Cilium to the latest version and also set cluster name and ID\nto prepare for multi-cluster capabilities. \n $ cilium upgrade --set cluster.id=1 --set cluster.name=cluster1 \n cilium upgrade [flags]\n \n Options \n       --chart-directory string    Helm chart directory\n      --datapath-mode string      Datapath mode to use { tunnel | native | aws-eni | gke | azure | aks-byocni } (default: autodetected).\n      --dry-run                   Write resources to be installed to stdout without actually installing them\n      --dry-run-helm-values       Write non-default Helm values to stdout; without performing the actual upgrade\n  -h, --help                      help for upgrade\n      --history-max int           limit the maximum number of revisions saved per release. Use 0 for no limit (default 10)\n      --list-versions             List all the available versions without actually installing\n      --nodes-without-cilium      Configure the affinities to avoid scheduling Cilium components on nodes labeled with cilium.io/no-schedule. It is assumed that the infrastructure has set up routing on these nodes to provide connectivity within the Cilium cluster.\n      --repository string         Helm chart repository to download Cilium charts from (default \"https://helm.cilium.io\")\n      --reset-then-reuse-values   When upgrading, reset the values to the ones built into the chart, apply the last release's values and merge in any overrides from the command line via --set and -f. If '--reset-values' or '--reuse-values' is specified, this is ignored (default true)\n      --reset-values              When upgrading, reset the helm values to the ones built into the chart\n      --reuse-values              When upgrading, reuse the helm values from the latest release unless any overrides from are set from other flags. This option takes precedence over HelmResetValues\n      --set stringArray           Set helm values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)\n      --set-file stringArray      Set helm values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)\n      --set-string stringArray    Set helm STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)\n  -f, --values strings            Specify helm values in a YAML file or a URL (can specify multiple)\n      --version string            Cilium version to install (default \"v1.18.1\")\n      --wait                      Wait for helm install to finish\n      --wait-duration duration    Maximum time to wait for status (default 5m0s)\n \n Options inherited from parent commands \n       --as string                  Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray       Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --context string             Kubernetes configuration context\n      --helm-release-name string   Helm release name (default \"cilium\")\n      --kubeconfig string          Path to the kubeconfig file\n  -n, --namespace string           Namespace Cilium is running in (default \"kube-system\")\n \n SEE ALSO \n \n cilium \t - Cilium provides eBPF-based Networking, Security, and Observability for Kubernetes",
  "item_type": "markdown",
  "module_path": "/tmp/cilium-repo/Documentation/cmdref/cilium_upgrade.md",
  "extracted_at": "2025-09-03T01:13:28.921684Z"
}