{
  "url": "file:///tmp/cilium-repo/Documentation/network/kubernetes/concepts.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n********\nConcepts\n********\n\n.. _k8s_concepts_deployment:\n\nDeployment\n==========\n\nThe configuration of a standard Cilium Kubernetes deployment consists of\nseveral Kubernetes resources:\n\n* A ``DaemonSet`` resource:  describes the Cilium pod that is deployed to each\n  Kubernetes node.  This pod runs the cilium-agent and associated daemons. The\n  configuration of this DaemonSet includes the image tag indicating the exact\n  version of the Cilium docker container (e.g., v1.0.0) and command-line\n  options passed to the cilium-agent.\n\n* A ``ConfigMap`` resource:  describes common configuration values that are\n  passed to the cilium-agent, such as the kvstore endpoint and credentials,\n  enabling/disabling debug mode, etc.\n\n* ``ServiceAccount``, ``ClusterRole``, and ``ClusterRoleBindings`` resources:\n  the identity and permissions used by cilium-agent to access the Kubernetes\n  API server when Kubernetes RBAC is enabled.\n\n* A ``Secret`` resource: describes the credentials used to access the etcd kvstore,\n  if required.\n\nNetworking For Existing Pods\n============================\n\nIn case pods were already running before the Cilium :term:`DaemonSet` was deployed,\nthese pods will still be connected using the previous networking plugin\naccording to the CNI configuration. A typical example for this is the\n``kube-dns`` service which runs in the ``kube-system`` namespace by default.\n\nA simple way to change networking for such existing pods is to rely on the fact\nthat Kubernetes automatically restarts pods in a Deployment if they are\ndeleted, so we can simply delete the original kube-dns pod and the replacement\npod started immediately after will have networking managed by Cilium.  In a\nproduction deployment, this step could be performed as a rolling update of\nkube-dns pods to avoid downtime of the DNS service.\n\n.. code-block:: shell-session\n\n        $ kubectl --namespace kube-system delete pods -l k8s-app=kube-dns\n        pod \"kube-dns-268032401-t57r2\" deleted\n\nRunning ``kubectl get pods`` will show you that Kubernetes started a new set of\n``kube-dns`` pods while at the same time terminating the old pods:\n\n.. code-block:: shell-session\n\n        $ kubectl --namespace kube-system get pods\n        NAME                          READY     STATUS        RESTARTS   AGE\n        cilium-5074s                  1/1       Running       0          58m\n        kube-addon-manager-minikube   1/1       Running       0          59m\n        kube-dns-268032401-j0vml      3/3       Running       0          9s\n        kube-dns-268032401-t57r2      3/3       Terminating   0          57m\n\n\nDefault Ingress Allow from Local Host\n=====================================\n\nKubernetes has functionality to indicate to users the current health of their\napplications via `Liveness Probes and Readiness Probes <https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/>`_.\nIn order for ``kubelet`` to run these health checks for each pod, by default,\nCilium will always allow all ingress traffic from the local host to each pod. \n \n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/kubernetes/concepts.rst",
  "extracted_at": "2025-09-03T01:13:29.236826Z"
}