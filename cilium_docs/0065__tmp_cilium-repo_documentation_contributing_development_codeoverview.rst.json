{
  "url": "file:///tmp/cilium-repo/Documentation/contributing/development/codeoverview.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _code_overview:\n\nCode Overview\n=============\n\nThis section provides an overview of the Cilium & Hubble source code directory\nstructure. It is useful to get an initial overview on where to find what.\n\nHigh-level\n----------\n\nTop-level directories `github.com/cilium/cilium <https://github.com/cilium/cilium>`_:\n\napi\n  The Cilium & Hubble API definition.\n\nbpf\n  The eBPF datapath code\n\nbugtool\n  CLI for collecting agent & system information for bug reporting\n\ncilium\n  Cilium CLI client\n\ncontrib, tools\n  Additional tooling and resources used for development\n\ndaemon\n  The cilium-agent running on each node\n\nexamples\n  Various example resources and manifests. Typically require to be modified\n  before usage is possible.\n\nhubble-relay\n  Hubble Relay server\n\ninstall\n  Helm deployment manifests for all components\n\npkg\n  Common Go packages shared between all components\n\noperator\n  Operator responsible for centralized tasks which do not require to be\n  performed on each node.\n\nplugins\n  Plugins to integrate with Kubernetes and Docker\n\ntest\n  End-to-end integration tests run in the :ref:`testsuite-legacy`.\n\nCilium\n------\n\napi/v1/openapi.yaml\n  API specification of the Cilium API. Used for code generation.\n\napi/v1/models/\n  Go code generated from openapi.yaml representing all API resources\n\nbpf\n  The eBPF datapath code\n\ncilium\n  Cilium CLI client\n\ncilium-health\n  Cilium cluster connectivity CLI client\n\ndaemon\n  cilium-agent specific code\n\nplugins/cilium-cni\n  The CNI plugin to integrate with Kubernetes\n\nplugins/cilium-docker\n  The Docker integration plugin\n\nHubble\n------\n\nThe server-side code of Hubble is integrated into the Cilium repository. The\nHubble CLI can be found in the separate repository `github.com/cilium/hubble\n<https://github.com/cilium/hubble>`_. The Hubble UI can be found in the\nseparate repository `github.com/cilium/hubble-ui\n<https://github.com/cilium/hubble-ui>`_.\n\napi/v1/external, api/v1/flow, api/v1/observer, api/v1/peer, api/v1/relay\n  API specifications of the Hubble APIs.\n\nhubble-relay\n  Hubble Relay agent\n\npkg/hubble\n  All Hubble specific code\n\npkg/hubble/container\n  Ring buffer implementation\n\npkg/hubble/filters\n  Flow filtering capabilities\n\npkg/hubble/metrics\n  Metrics plugins providing Prometheus based on Hubble's visibility\n\npkg/hubble/observe\n  Layer running on top of the Cilium datapath monitoring, feeding the metrics\n  and ring buffer.\n\npkg/hubble/parser\n  Network flow parsers\n\npkg/hubble/peer\n  Peer service implementation\n\npkg/hubble/relay\n  Hubble Relay service implementation\n\npkg/hubble/server\n  The server providing the API for the Hubble client and UI\n\nImportant common packages\n-------------------------\n\npkg/allocator\n  Security identity allocation\n\npkg/bpf\n  Abstraction layer to interact with the eBPF runtime\n\npkg/client\n  Go client to access Cilium API\n\npkg/clustermesh\n  Multi-cluster implementation including control plane and global services\n\npkg/controller\n  Base controller implementation for any background operation that requires\n  retries or interval-based invocation.\n\npkg/datapath\n  Abstraction layer for datapath interaction\n\npkg/defaults\n  All default values\n\npkg/elf\n  ELF abstraction library for the eBPF loader\n\npkg/endpoint\n  Abstraction of a Cilium endpoint, representing all workloads.\n\npkg/endpointmanager\n  Manager of all endpoints\n\npkg/envoy\n  Envoy proxy interactions\n\npkg/fqdn\n  FQDN proxy and FQDN policy implementation\n\npkg/health\n  Network connectivity health checking\n\npkg/hive\n  A dependency injection framework for modular composition of applications\n\npkg/identity\n  Representation of a security identity for workloads\n\npkg/ipam\n  IP address management\n\npkg/ipcache\n  Global cache mapping IPs to endpoints and security identities\n\npkg/k8s\n  All interactions with Kubernetes\n\npkg/kvstore\n  Key-value store abstraction layer with backends for etcd\n\npkg/labels\n  Base metadata type to describe all label/metadata requirements for workload\n  identity specification and policy matching.\n\npkg/loadbalancer\n  Control plane for load-balancing functionality\n\npkg/maps\n  eBPF map representations\n\npkg/metrics\n  Prometheus metrics implementation\n\npkg/monitor\n  eBPF datapath monitoring abstraction\n\npkg/node\n  Representation of a network node\n\npkg/option\n  All available configuration options\n\npkg/policy\n  Policy enforcement specification & implementation\n\npkg/proxy\n  Layer 7 proxy abstraction\n\npkg/trigger\n  Implementation of trigger functionality to implement event-driven\n  functionality\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/contributing/development/codeoverview.rst",
  "extracted_at": "2025-09-03T00:53:44.761610Z"
}