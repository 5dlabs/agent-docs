{
  "url": "file:///tmp/cilium-repo/Documentation/_api/v1/flow/README.md",
  "content": "Protocol Documentation \n \n Table of Contents \n \n \n flow/flow.proto \n \n \n AgentEvent \n \n \n AgentEventUnknown \n \n \n CiliumEventType \n \n \n DNS \n \n \n DebugEvent \n \n \n Endpoint \n \n \n EndpointRegenNotification \n \n \n EndpointUpdateNotification \n \n \n Ethernet \n \n \n EventTypeFilter \n \n \n FileInfo \n \n \n Flow \n \n \n FlowFilter \n \n \n FlowFilter.Experimental \n \n \n HTTP \n \n \n HTTPHeader \n \n \n ICMPv4 \n \n \n ICMPv6 \n \n \n IP \n \n \n IPCacheNotification \n \n \n Kafka \n \n \n Layer4 \n \n \n Layer7 \n \n \n LostEvent \n \n \n NetworkInterface \n \n \n Policy \n \n \n PolicyUpdateNotification \n \n \n SCTP \n \n \n Service \n \n \n ServiceDeleteNotification \n \n \n ServiceUpsertNotification \n \n \n ServiceUpsertNotificationAddr \n \n \n TCP \n \n \n TCPFlags \n \n \n TimeNotification \n \n \n TraceContext \n \n \n TraceParent \n \n \n Tunnel \n \n \n UDP \n \n \n Workload \n \n \n AgentEventType \n \n \n AuthType \n \n \n DebugCapturePoint \n \n \n DebugEventType \n \n \n DropReason \n \n \n EventType \n \n \n FlowType \n \n \n IPVersion \n \n \n L7FlowType \n \n \n LostEventSource \n \n \n SocketTranslationPoint \n \n \n TraceObservationPoint \n \n \n TraceReason \n \n \n TrafficDirection \n \n \n Tunnel.Protocol \n \n \n Verdict \n \n \n \n \n Scalar Value Types \n \n \n \n Top \n flow/flow.proto \n \n AgentEvent \n Field Type Label Description \n type AgentEventType \n unknown AgentEventUnknown \n agent_start TimeNotification \n policy_update PolicyUpdateNotification used for POLICY_UPDATED and POLICY_DELETED \n endpoint_regenerate EndpointRegenNotification used for ENDPOINT_REGENERATE_SUCCESS and ENDPOINT_REGENERATE_FAILURE \n endpoint_update EndpointUpdateNotification used for ENDPOINT_CREATED and ENDPOINT_DELETED \n ipcache_update IPCacheNotification used for IPCACHE_UPSERTED and IPCACHE_DELETED \n service_upsert ServiceUpsertNotification Deprecated. \n service_delete ServiceDeleteNotification Deprecated. \n \n \n AgentEventUnknown \n Field Type Label Description \n type string \n notification string \n \n \n CiliumEventType \n CiliumEventType from which the flow originated. \n Field Type Label Description \n type int32 type of event the flow originated from, i.e. github.com/cilium/cilium/pkg/monitor/api.MessageType* \n sub_type int32 sub_type may indicate more details depending on type, e.g. - github.com/cilium/cilium/pkg/monitor/api.Trace* - github.com/cilium/cilium/pkg/monitor/api.Drop* - github.com/cilium/cilium/pkg/monitor/api.DbgCapture* \n \n \n DNS \n DNS flow. This is basically directly mapped from Cilium's  LogRecordDNS : \n Field Type Label Description \n query string DNS name that's being looked up: e.g. \"isovalent.com.\" \n ips string repeated List of IP addresses in the DNS response. \n ttl uint32 TTL in the DNS response. \n cnames string repeated List of CNames in the DNS response. \n observation_source string Corresponds to DNSDataSource defined in: https://github.com/cilium/cilium/blob/04f3889d627774f79e56d14ddbc165b3169e2d01/pkg/proxy/accesslog/record.go#L253 \n rcode uint32 Return code of the DNS request defined in: https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-6 \n qtypes string repeated String representation of qtypes defined in: https://tools.ietf.org/html/rfc1035#section-3.2.3 \n rrtypes string repeated String representation of rrtypes defined in: https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4 \n \n \n DebugEvent \n Field Type Label Description \n type DebugEventType \n source Endpoint \n hash google.protobuf.UInt32Value \n arg1 google.protobuf.UInt32Value \n arg2 google.protobuf.UInt32Value \n arg3 google.protobuf.UInt32Value \n message string \n cpu google.protobuf.Int32Value \n \n \n Endpoint \n Field Type Label Description \n ID uint32 \n identity uint32 \n cluster_name string \n namespace string \n labels string repeated labels in  foo=bar  format. \n pod_name string \n workloads Workload repeated \n \n \n EndpointRegenNotification \n Field Type Label Description \n id uint64 \n labels string repeated \n error string \n \n \n EndpointUpdateNotification \n Field Type Label Description \n id uint64 \n labels string repeated \n error string \n pod_name string \n namespace string \n \n \n Ethernet \n Field Type Label Description \n source string \n destination string \n \n \n EventTypeFilter \n EventTypeFilter is a filter describing a particular event type. \n Field Type Label Description \n type int32 type is the primary flow type as defined by: github.com/cilium/cilium/pkg/monitor/api.MessageType* \n match_sub_type bool match_sub_type is set to true when matching on the sub_type should be done. This flag is required as 0 is a valid sub_type. \n sub_type int32 sub_type is the secondary type, e.g. - github.com/cilium/cilium/pkg/monitor/api.Trace* \n \n \n FileInfo \n Field Type Label Description \n name string \n line uint32 \n \n \n Flow \n Field Type Label Description \n time google.protobuf.Timestamp \n uuid string uuid is a universally unique identifier for this flow. \n verdict Verdict \n drop_reason uint32 Deprecated.  only applicable to Verdict = DROPPED. deprecated in favor of drop_reason_desc. \n auth_type AuthType auth_type is the authentication type specified for the flow in Cilium Network Policy. Only set on policy verdict events. \n ethernet Ethernet l2 \n IP IP l3 \n l4 Layer4 l4 \n tunnel Tunnel \n source Endpoint \n destination Endpoint \n Type FlowType \n node_name string NodeName is the name of the node from which this Flow was captured. \n node_labels string repeated node labels in  foo=bar  format. \n source_names string repeated all names the source IP can have. \n destination_names string repeated all names the destination IP can have. \n l7 Layer7 L7 information. This field is set if and only if FlowType is L7. \n reply bool Deprecated.  Deprecated. This suffers from false negatives due to protobuf not being able to distinguish between the value being false or it being absent. Please use is_reply instead. \n event_type CiliumEventType EventType of the originating Cilium event \n source_service Service source_service contains the service name of the source \n destination_service Service destination_service contains the service name of the destination \n traffic_direction TrafficDirection traffic_direction of the connection, e.g. ingress or egress \n policy_match_type uint32 policy_match_type is only applicable to the cilium event type PolicyVerdict https://github.com/cilium/cilium/blob/e831859b5cc336c6d964a6d35bbd34d1840e21b9/pkg/monitor/datapath_policy.go#L50 \n trace_observation_point TraceObservationPoint Only applicable to cilium trace notifications, blank for other types. \n trace_reason TraceReason Cilium datapath trace reason info. \n file FileInfo Cilium datapath filename and line number. Currently only applicable when Verdict = DROPPED. \n drop_reason_desc DropReason only applicable to Verdict = DROPPED. \n is_reply google.protobuf.BoolValue is_reply indicates that this was a packet (L4) or message (L7) in the reply direction. May be absent (in which case it is unknown whether it is a reply or not). \n debug_capture_point DebugCapturePoint Only applicable to cilium debug capture events, blank for other types \n interface NetworkInterface interface is the network interface on which this flow was observed \n proxy_port uint32 proxy_port indicates the port of the proxy to which the flow was forwarded \n trace_context TraceContext trace_context contains information about a trace related to the flow, if any. \n sock_xlate_point SocketTranslationPoint sock_xlate_point is the socket translation point. Only applicable to TraceSock notifications, blank for other types \n socket_cookie uint64 socket_cookie is the Linux kernel socket cookie for this flow. Only applicable to TraceSock notifications, zero for other types \n cgroup_id uint64 cgroup_id of the process which emitted this event. Only applicable to TraceSock notifications, zero for other types \n Summary string Deprecated.  This is a temporary workaround to support summary field for pb.Flow without duplicating logic from the old parser. This field will be removed once we fully migrate to the new parser. \n extensions google.protobuf.Any extensions can be used to add arbitrary additional metadata to flows. This can be used to extend functionality for other Hubble compatible APIs, or experiment with new functionality without needing to change the public API. \n egress_allowed_by Policy repeated The CiliumNetworkPolicies allowing the egress of the flow. \n ingress_allowed_by Policy repeated The CiliumNetworkPolicies allowing the ingress of the flow. \n egress_denied_by Policy repeated The CiliumNetworkPolicies denying the egress of the flow. \n ingress_denied_by Policy repeated The CiliumNetworkPolicies denying the ingress of the flow. \n policy_log string repeated The set of Log values for policies that matched this flow. If no matched policies have an explicit log value configured, this list is empty. Duplicate values are elided; each entry is unique. \n \n \n FlowFilter \n FlowFilter represent an individual flow filter. All fields are optional. If\nmultiple fields are set, then all fields must match for the filter to match. \n Field Type Label Description \n uuid string repeated uuid filters by a list of flow uuids. \n source_ip string repeated source_ip filters by a list of source ips. Each of the source ips can be specified as an exact match (e.g. \"1.1.1.1\") or as a CIDR range (e.g. \"1.1.1.0/24\"). \n source_ip_xlated string repeated source_ip_xlated filters by a list IPs. Each of the IPs can be specified as an exact match (e.g. \"1.1.1.1\") or as a CIDR range (e.g. \"1.1.1.0/24\"). \n source_pod string repeated source_pod filters by a list of source pod name prefixes, optionally within a given namespace (e.g. \"xwing\", \"kube-system/coredns-\"). The pod name can be omitted to only filter by namespace (e.g. \"kube-system/\") or the namespace can be omitted to filter for pods in any namespace (e.g. \"/xwing\") \n source_fqdn string repeated source_fqdn filters by a list of source fully qualified domain names \n source_label string repeated source_labels filters on a list of source label selectors. Selectors support the full Kubernetes label selector syntax. \n source_service string repeated source_service filters on a list of source service names. This field supports the same syntax as the source_pod field. \n source_workload Workload repeated source_workload filters by a list of source workload. \n source_cluster_name string repeated source_cluster_name filters by a list of source cluster names. \n destination_ip string repeated destination_ip filters by a list of destination ips. Each of the destination ips can be specified as an exact match (e.g. \"1.1.1.1\") or as a CIDR range (e.g. \"1.1.1.0/24\"). \n destination_pod string repeated destination_pod filters by a list of destination pod names \n destination_fqdn string repeated destination_fqdn filters by a list of destination fully qualified domain names \n destination_label string repeated destination_label filters on a list of destination label selectors \n destination_service string repeated destination_service filters on a list of destination service names \n destination_workload Workload repeated destination_workload filters by a list of destination workload. \n destination_cluster_name string repeated destination_cluster_name filters by a list of destination cluster names. \n traffic_direction TrafficDirection repeated traffic_direction filters flow by direction of the connection, e.g. ingress or egress. \n verdict Verdict repeated only return Flows that were classified with a particular verdict. \n drop_reason_desc DropReason repeated only applicable to Verdict = DROPPED (e.g. \"POLICY_DENIED\", \"UNSUPPORTED_L3_PROTOCOL\") \n interface NetworkInterface repeated interface is the network interface on which this flow was observed. \n event_type EventTypeFilter repeated event_type is the list of event types to filter on \n http_status_code string repeated http_status_code is a list of string prefixes (e.g. \"4+\", \"404\", \"5+\") to filter on the HTTP status code \n protocol string repeated protocol filters flows by L4 or L7 protocol, e.g. (e.g. \"tcp\", \"http\") \n source_port string repeated source_port filters flows by L4 source port \n destination_port string repeated destination_port filters flows by L4 destination port \n reply bool repeated reply filters flows based on the direction of the flow. \n dns_query string repeated dns_query filters L7 DNS flows by query patterns (RE2 regex), e.g. 'kube.*local'. \n source_identity uint32 repeated source_identity filters by the security identity of the source endpoint. \n destination_identity uint32 repeated destination_identity filters by the security identity of the destination endpoint. \n http_method string repeated GET, POST, PUT, etc. methods. This type of field is well suited for an enum but every single existing place is using a string already. \n http_path string repeated http_path is a list of regular expressions to filter on the HTTP path. \n http_url string repeated http_url is a list of regular expressions to filter on the HTTP URL. \n http_header HTTPHeader repeated http_header is a list of key:value pairs to filter on the HTTP headers. \n tcp_flags TCPFlags repeated tcp_flags filters flows based on TCP header flags \n node_name string repeated node_name is a list of patterns to filter on the node name, e.g. \"k8s*\", \"test-cluster/*.domain.com\", \"cluster-name/\" etc. \n node_labels string repeated node_labels filters on a list of node label selectors. Selectors support the full Kubernetes label selector syntax. \n ip_version IPVersion repeated filter based on IP version (ipv4 or ipv6) \n trace_id string repeated trace_id filters flows by trace ID \n experimental FlowFilter.Experimental experimental contains filters that are not stable yet. Support for experimental features is always optional and subject to change. \n \n \n FlowFilter.Experimental \n Experimental contains filters that are not stable yet. Support for\nexperimental features is always optional and subject to change. \n Field Type Label Description \n cel_expression string repeated cel_expression takes a common expression language (CEL) expression returning a boolean to determine if the filter matched or not. You can use the  _flow  variable to access fields on the flow using the flow.Flow protobuf field names. See https://github.com/google/cel-spec/blob/v0.14.0/doc/intro.md#introduction for more details on CEL and accessing the protobuf fields in CEL. Using CEL has performance cost compared to other filters, so prefer using non-CEL filters when possible, and try to specify CEL filters last in the list of FlowFilters. \n \n \n HTTP \n L7 information for HTTP flows. It corresponds to Cilium's  accesslog.LogRecordHTTP  type. \n Field Type Label Description \n code uint32 \n method string \n url string \n protocol string \n headers HTTPHeader repeated \n \n \n HTTPHeader \n Field Type Label Description \n key string \n value string \n \n \n ICMPv4 \n Field Type Label Description \n type uint32 \n code uint32 \n \n \n ICMPv6 \n Field Type Label Description \n type uint32 \n code uint32 \n \n \n IP \n Field Type Label Description \n source string \n source_xlated string source_xlated is the post-translation source IP when the flow was SNATed. When \"source_xlated\" is set, the \"source\" field is populated with the pre-translation source IP address. \n destination string \n ipVersion IPVersion \n encrypted bool This field indicates whether the TraceReasonEncryptMask is set or not. https://github.com/cilium/cilium/blob/ba0ed147bd5bb342f67b1794c2ad13c6e99d5236/pkg/monitor/datapath_trace.go#L27 \n \n \n IPCacheNotification \n Field Type Label Description \n cidr string \n identity uint32 \n old_identity google.protobuf.UInt32Value \n host_ip string \n old_host_ip string \n encrypt_key uint32 \n namespace string \n pod_name string \n \n \n Kafka \n L7 information for Kafka flows. It corresponds to Cilium's  accesslog.LogRecordKafka  type. \n Field Type Label Description \n error_code int32 \n api_version int32 \n api_key string \n correlation_id int32 \n topic string \n \n \n Layer4 \n Field Type Label Description \n TCP TCP \n UDP UDP \n ICMPv4 ICMPv4 ICMP is technically not L4, but mutually exclusive with the above \n ICMPv6 ICMPv6 \n SCTP SCTP \n \n \n Layer7 \n Message for L7 flow, which roughly corresponds to Cilium's accesslog  LogRecord : \n Field Type Label Description \n type L7FlowType \n latency_ns uint64 Latency of the response \n dns DNS \n http HTTP \n kafka Kafka \n \n \n LostEvent \n LostEvent is a message which notifies consumers about a loss of events\nthat happened before the events were captured by Hubble. \n Field Type Label Description \n source LostEventSource source is the location where events got lost. \n num_events_lost uint64 num_events_lost is the number of events that haven been lost at source. \n cpu google.protobuf.Int32Value cpu on which the event was lost if the source of lost events is PERF_EVENT_RING_BUFFER. \n \n \n NetworkInterface \n Field Type Label Description \n index uint32 \n name string \n \n \n Policy \n Field Type Label Description \n name string \n namespace string \n labels string repeated \n revision uint64 \n kind string \n \n \n PolicyUpdateNotification \n Field Type Label Description \n labels string repeated \n revision uint64 \n rule_count int64 \n \n \n SCTP \n Field Type Label Description \n source_port uint32 \n destination_port uint32 \n \n \n Service \n Field Type Label Description \n name string \n namespace string \n \n \n ServiceDeleteNotification \n Field Type Label Description \n id uint32 \n \n \n ServiceUpsertNotification \n Field Type Label Description \n id uint32 \n frontend_address ServiceUpsertNotificationAddr \n backend_addresses ServiceUpsertNotificationAddr repeated \n type string \n traffic_policy string Deprecated. \n name string \n namespace string \n ext_traffic_policy string \n int_traffic_policy string \n \n \n ServiceUpsertNotificationAddr \n Field Type Label Description \n ip string \n port uint32 \n \n \n TCP \n Field Type Label Description \n source_port uint32 \n destination_port uint32 \n flags TCPFlags \n \n \n TCPFlags \n Field Type Label Description \n FIN bool \n SYN bool \n RST bool \n PSH bool \n ACK bool \n URG bool \n ECE bool \n CWR bool \n NS bool \n \n \n TimeNotification \n Field Type Label Description \n time google.protobuf.Timestamp \n \n \n TraceContext \n TraceContext contains trace context propagation data, i.e. information about a\ndistributed trace.\nFor more information about trace context, check the  W3C Trace Context specification . \n Field Type Label Description \n parent TraceParent parent identifies the incoming request in a tracing system. \n \n \n TraceParent \n TraceParent identifies the incoming request in a tracing system. \n Field Type Label Description \n trace_id string trace_id is a unique value that identifies a trace. It is a byte array represented as a hex string. \n \n \n Tunnel \n Field Type Label Description \n protocol Tunnel.Protocol \n IP IP \n l4 Layer4 \n \n \n UDP \n Field Type Label Description \n source_port uint32 \n destination_port uint32 \n \n \n Workload \n Field Type Label Description \n name string \n kind string \n \n \n AgentEventType \n AgentEventType is the type of agent event. These values are shared with type\nAgentNotification in pkg/monitor/api/types.go. \n Name Number Description \n AGENT_EVENT_UNKNOWN 0 \n AGENT_STARTED 2 \n POLICY_UPDATED 3 \n POLICY_DELETED 4 \n ENDPOINT_REGENERATE_SUCCESS 5 \n ENDPOINT_REGENERATE_FAILURE 6 \n ENDPOINT_CREATED 7 \n ENDPOINT_DELETED 8 \n IPCACHE_UPSERTED 9 \n IPCACHE_DELETED 10 \n SERVICE_UPSERTED 11 \n SERVICE_DELETED 12 \n \n \n AuthType \n These types correspond to definitions in pkg/policy/l4.go. \n Name Number Description \n DISABLED 0 \n SPIRE 1 \n TEST_ALWAYS_FAIL 2 \n \n \n DebugCapturePoint \n These values are shared with pkg/monitor/api/datapath_debug.go and bpf/lib/dbg.h. \n Name Number Description \n DBG_CAPTURE_POINT_UNKNOWN 0 \n DBG_CAPTURE_DELIVERY 4 \n DBG_CAPTURE_FROM_LB 5 \n DBG_CAPTURE_AFTER_V46 6 \n DBG_CAPTURE_AFTER_V64 7 \n DBG_CAPTURE_PROXY_PRE 8 \n DBG_CAPTURE_PROXY_POST 9 \n DBG_CAPTURE_SNAT_PRE 10 \n DBG_CAPTURE_SNAT_POST 11 \n \n \n DebugEventType \n These values are shared with pkg/monitor/api/datapath_debug.go and bpf/lib/dbg.h. \n Name Number Description \n DBG_EVENT_UNKNOWN 0 \n DBG_GENERIC 1 \n DBG_LOCAL_DELIVERY 2 \n DBG_ENCAP 3 \n DBG_LXC_FOUND 4 \n DBG_POLICY_DENIED 5 \n DBG_CT_LOOKUP 6 \n DBG_CT_LOOKUP_REV 7 \n DBG_CT_MATCH 8 \n DBG_CT_CREATED 9 \n DBG_CT_CREATED2 10 \n DBG_ICMP6_HANDLE 11 \n DBG_ICMP6_REQUEST 12 \n DBG_ICMP6_NS 13 \n DBG_ICMP6_TIME_EXCEEDED 14 \n DBG_CT_VERDICT 15 \n DBG_DECAP 16 \n DBG_PORT_MAP 17 \n DBG_ERROR_RET 18 \n DBG_TO_HOST 19 \n DBG_TO_STACK 20 \n DBG_PKT_HASH 21 \n DBG_LB6_LOOKUP_FRONTEND 22 \n DBG_LB6_LOOKUP_FRONTEND_FAIL 23 \n DBG_LB6_LOOKUP_BACKEND_SLOT 24 \n DBG_LB6_LOOKUP_BACKEND_SLOT_SUCCESS 25 \n DBG_LB6_LOOKUP_BACKEND_SLOT_V2_FAIL 26 \n DBG_LB6_LOOKUP_BACKEND_FAIL 27 \n DBG_LB6_REVERSE_NAT_LOOKUP 28 \n DBG_LB6_REVERSE_NAT 29 \n DBG_LB4_LOOKUP_FRONTEND 30 \n DBG_LB4_LOOKUP_FRONTEND_FAIL 31 \n DBG_LB4_LOOKUP_BACKEND_SLOT 32 \n DBG_LB4_LOOKUP_BACKEND_SLOT_SUCCESS 33 \n DBG_LB4_LOOKUP_BACKEND_SLOT_V2_FAIL 34 \n DBG_LB4_LOOKUP_BACKEND_FAIL 35 \n DBG_LB4_REVERSE_NAT_LOOKUP 36 \n DBG_LB4_REVERSE_NAT 37 \n DBG_LB4_LOOPBACK_SNAT 38 \n DBG_LB4_LOOPBACK_SNAT_REV 39 \n DBG_CT_LOOKUP4 40 \n DBG_RR_BACKEND_SLOT_SEL 41 \n DBG_REV_PROXY_LOOKUP 42 \n DBG_REV_PROXY_FOUND 43 \n DBG_REV_PROXY_UPDATE 44 \n DBG_L4_POLICY 45 \n DBG_NETDEV_IN_CLUSTER 46 \n DBG_NETDEV_ENCAP4 47 \n DBG_CT_LOOKUP4_1 48 \n DBG_CT_LOOKUP4_2 49 \n DBG_CT_CREATED4 50 \n DBG_CT_LOOKUP6_1 51 \n DBG_CT_LOOKUP6_2 52 \n DBG_CT_CREATED6 53 \n DBG_SKIP_PROXY 54 \n DBG_L4_CREATE 55 \n DBG_IP_ID_MAP_FAILED4 56 \n DBG_IP_ID_MAP_FAILED6 57 \n DBG_IP_ID_MAP_SUCCEED4 58 \n DBG_IP_ID_MAP_SUCCEED6 59 \n DBG_LB_STALE_CT 60 \n DBG_INHERIT_IDENTITY 61 \n DBG_SK_LOOKUP4 62 \n DBG_SK_LOOKUP6 63 \n DBG_SK_ASSIGN 64 \n DBG_L7_LB 65 \n DBG_SKIP_POLICY 66 \n \n \n DropReason \n These values are shared with pkg/monitor/api/drop.go and bpf/lib/common.h.\nNote that non-drop reasons (i.e. values less than api.DropMin) are not used\nhere. \n Name Number Description \n DROP_REASON_UNKNOWN 0 non-drop reasons \n INVALID_SOURCE_MAC 130 drop reasons \n INVALID_DESTINATION_MAC 131 \n INVALID_SOURCE_IP 132 \n POLICY_DENIED 133 \n INVALID_PACKET_DROPPED 134 \n CT_TRUNCATED_OR_INVALID_HEADER 135 \n CT_MISSING_TCP_ACK_FLAG 136 \n CT_UNKNOWN_L4_PROTOCOL 137 \n CT_CANNOT_CREATE_ENTRY_FROM_PACKET 138 \n UNSUPPORTED_L3_PROTOCOL 139 \n MISSED_TAIL_CALL 140 \n ERROR_WRITING_TO_PACKET 141 \n UNKNOWN_L4_PROTOCOL 142 \n UNKNOWN_ICMPV4_CODE 143 \n UNKNOWN_ICMPV4_TYPE 144 \n UNKNOWN_ICMPV6_CODE 145 \n UNKNOWN_ICMPV6_TYPE 146 \n ERROR_RETRIEVING_TUNNEL_KEY 147 \n ERROR_RETRIEVING_TUNNEL_OPTIONS 148 \n INVALID_GENEVE_OPTION 149 \n UNKNOWN_L3_TARGET_ADDRESS 150 \n STALE_OR_UNROUTABLE_IP 151 \n NO_MATCHING_LOCAL_CONTAINER_FOUND 152 \n ERROR_WHILE_CORRECTING_L3_CHECKSUM 153 \n ERROR_WHILE_CORRECTING_L4_CHECKSUM 154 \n CT_MAP_INSERTION_FAILED 155 \n INVALID_IPV6_EXTENSION_HEADER 156 \n IP_FRAGMENTATION_NOT_SUPPORTED 157 \n SERVICE_BACKEND_NOT_FOUND 158 \n NO_TUNNEL_OR_ENCAPSULATION_ENDPOINT 160 \n FAILED_TO_INSERT_INTO_PROXYMAP 161 \n REACHED_EDT_RATE_LIMITING_DROP_HORIZON 162 \n UNKNOWN_CONNECTION_TRACKING_STATE 163 \n LOCAL_HOST_IS_UNREACHABLE 164 \n NO_CONFIGURATION_AVAILABLE_TO_PERFORM_POLICY_DECISION 165 \n UNSUPPORTED_L2_PROTOCOL 166 \n NO_MAPPING_FOR_NAT_MASQUERADE 167 \n UNSUPPORTED_PROTOCOL_FOR_NAT_MASQUERADE 168 \n FIB_LOOKUP_FAILED 169 \n ENCAPSULATION_TRAFFIC_IS_PROHIBITED 170 \n INVALID_IDENTITY 171 \n UNKNOWN_SENDER 172 \n NAT_NOT_NEEDED 173 \n IS_A_CLUSTERIP 174 \n FIRST_LOGICAL_DATAGRAM_FRAGMENT_NOT_FOUND 175 \n FORBIDDEN_ICMPV6_MESSAGE 176 \n DENIED_BY_LB_SRC_RANGE_CHECK 177 \n SOCKET_LOOKUP_FAILED 178 \n SOCKET_ASSIGN_FAILED 179 \n PROXY_REDIRECTION_NOT_SUPPORTED_FOR_PROTOCOL 180 \n POLICY_DENY 181 \n VLAN_FILTERED 182 \n INVALID_VNI 183 \n INVALID_TC_BUFFER 184 \n NO_SID 185 \n MISSING_SRV6_STATE 186 \n NAT46 187 \n NAT64 188 \n AUTH_REQUIRED 189 \n CT_NO_MAP_FOUND 190 \n SNAT_NO_MAP_FOUND 191 \n INVALID_CLUSTER_ID 192 \n UNSUPPORTED_PROTOCOL_FOR_DSR_ENCAP 193 \n NO_EGRESS_GATEWAY 194 \n UNENCRYPTED_TRAFFIC 195 \n TTL_EXCEEDED 196 \n NO_NODE_ID 197 \n DROP_RATE_LIMITED 198 \n IGMP_HANDLED 199 \n IGMP_SUBSCRIBED 200 \n MULTICAST_HANDLED 201 \n DROP_HOST_NOT_READY 202 A BPF program wants to tail call into bpf_host, but the host datapath hasn't been loaded yet. \n DROP_EP_NOT_READY 203 A BPF program wants to tail call some endpoint's policy program in cilium_call_policy, but the program is not available. \n DROP_NO_EGRESS_IP 204 An Egress Gateway node matched a packet against an Egress Gateway policy that didn't select a valid Egress IP. \n DROP_PUNT_PROXY 205 Punt packet to a user space proxy. \n \n \n EventType \n EventType are constants are based on the ones from <linux/perf_event.h>. \n Name Number Description \n UNKNOWN 0 \n EventSample 9 EventSample is equivalent to PERF_RECORD_SAMPLE. \n RecordLost 2 RecordLost is equivalent to PERF_RECORD_LOST. \n \n \n FlowType \n Name Number Description \n UNKNOWN_TYPE 0 \n L3_L4 1 not sure about the underscore here, but  L34  also reads strange \n L7 2 \n SOCK 3 \n \n \n IPVersion \n Name Number Description \n IP_NOT_USED 0 \n IPv4 1 \n IPv6 2 \n \n \n L7FlowType \n This enum corresponds to Cilium's L7 accesslog  FlowType : \n Name Number Description \n UNKNOWN_L7_TYPE 0 \n REQUEST 1 \n RESPONSE 2 \n SAMPLE 3 \n \n \n LostEventSource \n Name Number Description \n UNKNOWN_LOST_EVENT_SOURCE 0 \n PERF_EVENT_RING_BUFFER 1 PERF_EVENT_RING_BUFFER indicates that events were dropped in the BPF perf event ring buffer, indicating that userspace agent did not keep up with the events produced by the datapath. \n OBSERVER_EVENTS_QUEUE 2 OBSERVER_EVENTS_QUEUE indicates that events were dropped because the Hubble events queue was full, indicating that the Hubble observer did not keep up. \n HUBBLE_RING_BUFFER 3 HUBBLE_RING_BUFFER indicates that the event was dropped because it could not be read from Hubble's ring buffer in time before being overwritten. \n \n \n SocketTranslationPoint \n This mirrors enum xlate_point in bpf/lib/trace_sock.h \n Name Number Description \n SOCK_XLATE_POINT_UNKNOWN 0 \n SOCK_XLATE_POINT_PRE_DIRECTION_FWD 1 Pre service translation \n SOCK_XLATE_POINT_POST_DIRECTION_FWD 2 Post service translation \n SOCK_XLATE_POINT_PRE_DIRECTION_REV 3 Pre reverse service translation \n SOCK_XLATE_POINT_POST_DIRECTION_REV 4 Post reverse service translation \n \n \n TraceObservationPoint \n Name Number Description \n UNKNOWN_POINT 0 Cilium treats 0 as TO_LXC, but its's something we should work to remove. This is intentionally set as unknown, so proto API can guarantee the observation point is always going to be present on trace events. \n TO_PROXY 1 TO_PROXY indicates network packets are transmitted towards the l7 proxy. \n TO_HOST 2 TO_HOST indicates network packets are transmitted towards the host namespace. \n TO_STACK 3 TO_STACK indicates network packets are transmitted towards the Linux kernel network stack on host machine. \n TO_OVERLAY 4 TO_OVERLAY indicates network packets are transmitted towards the tunnel device. \n TO_ENDPOINT 101 TO_ENDPOINT indicates network packets are transmitted towards endpoints (containers). \n FROM_ENDPOINT 5 FROM_ENDPOINT indicates network packets were received from endpoints (containers). \n FROM_PROXY 6 FROM_PROXY indicates network packets were received from the l7 proxy. \n FROM_HOST 7 FROM_HOST indicates network packets were received from the host namespace. \n FROM_STACK 8 FROM_STACK indicates network packets were received from the Linux kernel network stack on host machine. \n FROM_OVERLAY 9 FROM_OVERLAY indicates network packets were received from the tunnel device. \n FROM_NETWORK 10 FROM_NETWORK indicates network packets were received from native devices. \n TO_NETWORK 11 TO_NETWORK indicates network packets are transmitted towards native devices. \n FROM_CRYPTO 12 FROM_CRYPTO indicates network packets were received from the crypto process for decryption. \n TO_CRYPTO 13 TO_CRYPTO indicates network packets are transmitted towards the crypto process for encryption. \n \n \n TraceReason \n Name Number Description \n TRACE_REASON_UNKNOWN 0 \n NEW 1 \n ESTABLISHED 2 \n REPLY 3 \n RELATED 4 \n REOPENED 5 \n SRV6_ENCAP 6 \n SRV6_DECAP 7 \n ENCRYPT_OVERLAY 8 \n \n \n TrafficDirection \n Name Number Description \n TRAFFIC_DIRECTION_UNKNOWN 0 \n INGRESS 1 \n EGRESS 2 \n \n \n Tunnel.Protocol \n Name Number Description \n UNKNOWN 0 \n VXLAN 1 \n GENEVE 2 \n \n \n Verdict \n Name Number Description \n VERDICT_UNKNOWN 0 UNKNOWN is used if there is no verdict for this flow event \n FORWARDED 1 FORWARDED is used for flow events where the trace point has forwarded this packet or connection to the next processing entity. \n DROPPED 2 DROPPED is used for flow events where the connection or packet has been dropped (e.g. due to a malformed packet, it being rejected by a network policy etc). The exact drop reason may be found in drop_reason_desc. \n ERROR 3 ERROR is used for flow events where an error occurred during processing \n AUDIT 4 AUDIT is used on policy verdict events in policy audit mode, to denominate flows that would have been dropped by policy if audit mode was turned off \n REDIRECTED 5 REDIRECTED is used for flow events which have been redirected to the proxy \n TRACED 6 TRACED is used for flow events which have been observed at a trace point, but no particular verdict has been reached yet \n TRANSLATED 7 TRANSLATED is used for flow events where an address has been translated \n \n Scalar Value Types \n .proto Type Notes C++ Java Python Go C# PHP Ruby \n  double double double float float64 double float Float \n  float float float float float32 float float Float \n  int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) \n  int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum \n  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) \n  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) \n  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) \n  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum \n  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) \n  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum \n  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) \n  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum \n  bool bool boolean boolean bool bool boolean TrueClass/FalseClass \n  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) \n  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)",
  "item_type": "markdown",
  "module_path": "/tmp/cilium-repo/Documentation/_api/v1/flow/README.md",
  "extracted_at": "2025-09-03T01:13:29.299496Z"
}