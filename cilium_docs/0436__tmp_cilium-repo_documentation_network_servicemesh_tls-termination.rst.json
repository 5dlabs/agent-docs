{
  "url": "file:///tmp/cilium-repo/Documentation/network/servicemesh/tls-termination.rst",
  "content": ".. only:: not (epub or latex or html) \n WARNING: You are looking at unreleased Cilium documentation.\nPlease use the official rendered version released here:\nhttps://docs.cilium.io\n \n .. _gs_ingress_tls: \n \n Ingress Example with TLS Termination \n \n This example builds on the HTTP and gRPC ingress examples, adding TLS\ntermination. \n .. literalinclude:: ../../../examples/kubernetes/servicemesh/tls-ingress.yaml\n:language: yaml \n .. include:: tls-cert.rst \n Deploy the Ingress \n The Ingress configuration for this demo provides the same routing as those demos\nbut with the addition of TLS termination. \n .. tabs:: \n .. group-tab:: Self-signed Certificate\n\n    .. parsed-literal::\n\n        $ kubectl apply -f \\ |SCM_WEB|\\/examples/kubernetes/servicemesh/tls-ingress.yaml\n\n.. group-tab:: cert-manager\n\n    .. parsed-literal::\n\n        $ kubectl apply -f \\ |SCM_WEB|\\/examples/kubernetes/servicemesh/tls-ingress.yaml\n\n    To tell cert-manager that this Ingress needs a certificate, annotate the\n    Ingress with the name of the CA issuer we previously created:\n\n    .. code-block:: shell-session\n\n        $ kubectl annotate ingress tls-ingress cert-manager.io/issuer=ca-issuer\n\n    This creates a Certificate object along with a Secret containing the TLS\n    certificate.\n\n    .. code-block:: shell-session\n\n        $ kubectl get certificate,secret demo-cert\n        NAME                                    READY   SECRET      AGE\n        certificate.cert-manager.io/demo-cert   True    demo-cert   33m\n        NAME               TYPE                DATA   AGE\n        secret/demo-cert   kubernetes.io/tls   3      33m\n \n External IP address will be shown up in Ingress \n .. code-block:: shell-session \n $ kubectl get ingress\nNAME          CLASS    HOSTS                                            ADDRESS        PORTS     AGE\ntls-ingress   cilium   hipstershop.cilium.rocks,bookinfo.cilium.rocks   35.195.24.75   80, 443   6m5s\n \n In this Ingress configuration, the host names  hipstershop.cilium.rocks  and\n bookinfo.cilium.rocks  are specified in the path routing rules. The client\nneeds to specify which host it wants to access. This can be achieved by\nediting your local ``/etc/hosts``` file. (You will almost certainly need to be\nsuperuser to edit this file.) Add entries using the IP address\nassigned to the ingress service, so your file looks something like this: \n .. code-block:: shell-session \n $ sudo perl -ni -e 'print if !/\\.cilium\\.rocks$/d' /etc/hosts; sudo tee -a /etc/hosts \\\n  <<<\"$(kubectl get ing tls-ingress -o=jsonpath='{.status.loadBalancer.ingress[0].ip}') bookinfo.cilium.rocks hipstershop.cilium.rocks\"\n \n Make HTTPS Requests \n .. tabs:: \n .. group-tab:: Self-signed Certificate\n\n    By specifying the CA's certificate on a curl request, you can say that you trust certificates\n    signed by that CA.\n\n    .. code-block:: shell-session\n\n        $ curl --cacert minica.pem -v https://bookinfo.cilium.rocks/details/1\n\n    If you prefer, instead of supplying the CA you can specify ``-k`` to tell the\n    curl client not to validate the server's certificate. Without either, you\n    will get an error that the certificate was signed by an unknown authority.\n\n    Specifying -v on the curl request, you can see that the TLS handshake took\n    place successfully.\n\n    Similarly you can specify the CA on a gRPC request like this:\n\n    .. code-block:: shell-session\n\n        # Download demo.proto file if you have not done before\n        $ curl -o demo.proto https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/protos/demo.proto\n        $ grpcurl -proto ./demo.proto -cacert minica.pem hipstershop.cilium.rocks:443 hipstershop.ProductCatalogService/ListProducts\n\n.. group-tab:: cert-manager\n\n    .. code-block:: shell-session\n\n        $ curl https://bookinfo.cilium.rocks/details/1\n\n    Similarly you can specify the CA on a gRPC request like this:\n\n    .. code-block:: shell-session\n\n        grpcurl -proto ./demo.proto -cacert minica.pem hipstershop.cilium.rocks:443 hipstershop.ProductCatalogService/ListProducts\n \n .. Note:: \n See the gRPC Ingress example if you don't already have the ``demo.proto`` file downloaded.\n \n You can also visit https://bookinfo.cilium.rocks in your browser. The browser\nmight warn you that the certificate authority is unknown but if you proceed past\nthis, you should see the bookstore application home page. \n Note that requests will time out if you don't specify  https:// .",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/servicemesh/tls-termination.rst",
  "extracted_at": "2025-09-03T01:13:29.139278Z"
}