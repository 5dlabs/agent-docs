{
  "url": "file:///tmp/cilium-repo/Documentation/network/servicemesh/l7-traffic-management.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _gs_l7_traffic_management:\n\n***************************\nL7-Aware Traffic Management\n***************************\n\nCilium provides a way to control L7 traffic via CRDs (e.g. CiliumEnvoyConfig\nand CiliumClusterwideEnvoyConfig).\n\nPrerequisites\n#############\n\n* Cilium must be configured with the kube-proxy replacement, using\n  ``kubeProxyReplacement=true``. For more information, see :ref:`kube-proxy\n  replacement <kubeproxy-free>`.\n\nCaveats\n#######\n\n* ``CiliumEnvoyConfig`` resources have only minimal validation performed, and\n  do not have a defined conflict resolution behavior. This means that if you\n  create multiple CECs that modify the same parts of Envoy's config, the results\n  may be unpredictable.\n* In addition to this minimal validation, ``CiliumEnvoyConfig`` has minimal\n  feedback to the user about the correctness of the configuration. So in the\n  event a CEC does produce an undesirable outcome, troubleshooting will require\n  inspecting the Envoy config and logs, rather than being able to look at the\n  ``CiliumEnvoyConfig`` in question.\n* ``CiliumEnvoyConfig`` is used by Cilium's Ingress and Gateway API support to\n  direct traffic through the per-node Envoy proxies. If you create CECs that\n  conflict with or modify the autogenerated config, results may be unpredictable.\n  Be very careful using CECs for these use cases. The above risks are managed\n  by ensuring that all config generated by Cilium is semantically valid, as far\n  as possible.\n* If you create a ``CiliumEnvoyConfig`` resource directly (ie, not via the\n  Cilium Ingress or Gateway API controllers), if the CEC is intended to manage\n  E/W traffic, set the annotation ``cec.cilium.io/use-original-source-address: \"false\"``.\n  Otherwise, Envoy will bind the sockets for the upstream connection pools to\n  the original source address/port. This may cause 5-tuple collisions when pods\n  send multiple requests over the same pipelined HTTP/1.1 or HTTP/2 connection.\n  (The Cilium agent assumes all CECs with parentRefs pointing to the Cilium\n  Ingress or Gateway API controllers have annotation\n  ``cec.cilium.io/use-original-source-address`` set to ``\"false\"``, but all other CECs\n  are assumed to have this annotation set to ``\"true\"``.)\n\n.. include:: installation.rst\n\nSupported Envoy API Versions\n============================\n\nAs of now only the Envoy API v3 is supported.\n\nSupported Envoy Extension Resource Types\n========================================\n\nEnvoy extensions are resource types that may or may not be built in to\nan Envoy build. The standard types referred to in Envoy documentation,\nsuch as ``type.googleapis.com/envoy.config.listener.v3.Listener``, and\n``type.googleapis.com/envoy.config.route.v3.RouteConfiguration``, are\nalways available.\n\nCilium nodes deploy an Envoy image to support Cilium HTTP policy\nenforcement and observability. This build of Envoy has been optimized\nfor the needs of the Cilium Agent and does not contain many of the\nEnvoy extensions available in the Envoy code base.\n\nTo see which Envoy extensions are available, please have a look at\nthe `Envoy extensions configuration\nfile <https://github.com/cilium/proxy/blob/main/envoy_build_config/extensions_build_config.bzl>`_.\nOnly the extensions that have not been commented out with ``#`` are\nbuilt in to the Cilium Envoy image. We will evolve the list of built-in\nextensions based on user feedback.\n\nExamples\n########\n\nPlease refer to one of the below examples on how to use and leverage\nCilium's Ingress features:\n\n.. toctree::\n   :maxdepth: 1\n   :glob:\n\n   envoy-custom-listener\n   envoy-traffic-management\n   envoy-circuit-breaker\n   envoy-load-balancing\n   envoy-traffic-shifting\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/servicemesh/l7-traffic-management.rst",
  "extracted_at": "2025-09-03T01:13:29.145859Z"
}