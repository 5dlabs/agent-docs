{
  "url": "file:///tmp/cilium-repo/Documentation/security/policy/lifecycle.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _endpoint_lifecycle:\n.. _Endpoint Lifecycle:\n\nEndpoint Lifecycle\n==================\n\nThis section specifies the lifecycle of Cilium endpoints.\n\nEvery endpoint in Cilium is in one of the following states:\n\n* ``restoring``: The endpoint was started before Cilium started, and\n  Cilium is restoring its networking configuration.\n* ``waiting-for-identity``: Cilium is allocating a unique identity for\n  the endpoint.\n* ``waiting-to-regenerate``: The endpoint received an identity and is\n  waiting for its networking configuration to be (re)generated.\n* ``regenerating``: The endpoint's networking configuration is being\n  (re)generated. This includes programming eBPF for that endpoint.\n* ``ready``: The endpoint's networking configuration has been\n  successfully (re)generated.\n* ``disconnecting``: The endpoint is being deleted.\n* ``disconnected``: The endpoint has been deleted.\n\n.. image:: ../../images/cilium-endpoint-lifecycle.png\n   :scale: 50 %\n   :align: center\n\nThe state of an endpoint can be queried using the ``cilium-dbg endpoint\nlist`` and ``cilium-dbg endpoint get`` CLI commands.\n\nWhile an endpoint is running, it transitions between the\n``waiting-for-identity``, ``waiting-to-regenerate``, ``regenerating``,\nand ``ready`` states.  A transition into the ``waiting-for-identity``\nstate indicates that the endpoint changed its identity.  A transition\ninto the ``waiting-to-regenerate`` or ``regenerating`` state indicates\nthat the policy to be enforced on the endpoint has changed because of\na change in identity, policy, or configuration.\n\nAn endpoint transitions into the ``disconnecting`` state when it is\nbeing deleted, regardless of its current state.\n\n.. _init_identity:\n\nInit Identity\n-------------\n\nIn some situations, Cilium can't determine the labels of an endpoint\nimmediately when the endpoint is created, and therefore can't allocate an\nidentity for the endpoint at that point.  Until the endpoint's labels are\nknown, Cilium temporarily associates a special single label ``reserved:init``\nto the endpoint. When the endpoint's labels become known, Cilium then replaces\nthat special label with the endpoint's labels and allocates a proper identity\nto the endpoint.\n\nThis may occur during endpoint creation in the following cases:\n\n* Running Cilium with docker via libnetwork\n* With Kubernetes when the Kubernetes API server is not available\n* In etcd mode when the corresponding kvstore is not available\n\nTo allow traffic to/from endpoints while they are initializing, you\ncan create policy rules that select the ``reserved:init`` label,\nand/or rules that allow traffic to/from the special ``init`` entity.\n\nFor instance, writing a rule that allows all initializing endpoints to\nreceive connections from the host and to perform DNS queries may be\ndone as follows:\n\n.. literalinclude:: ../../../examples/policies/l4/init.yaml\n    :language: yaml\n\nLikewise, writing a rule that allows an endpoint to receive DNS\nqueries from initializing endpoints may be done as follows:\n\n.. literalinclude:: ../../../examples/policies/l4/from_init.yaml\n  :language: yaml\n\nIf any ingress (resp. egress) policy rules selects the\n``reserved:init`` label, all ingress (resp. egress) traffic to\n(resp. from) initializing endpoints that is not explicitly allowed by\nthose rules will be dropped.  Otherwise, if the policy enforcement\nmode is ``never`` or ``default``, all ingress (resp. egress) traffic\nis allowed to (resp. from) initializing endpoints.  Otherwise, all\ningress (resp. egress) traffic is dropped.\n\n\n.. _lockdown_mode:\n\nLockdown Mode\n-------------\n\nIf the Cilium agent option ``enable-lockdown-endpoint-on-policy-overflow``\nis set to \"true\" Cilium will put an endpoint into \"lockdown\" if the policy\nmap cannot accommodate all of the required policy map entries required\n(that is, the policy map for the endpoint is overflowing). Cilium will put\nthe endpoint out of \"lockdown\" when it detects that the policy map is no\nlonger overflowing. When an endpoint is locked down all network traffic,\nboth egress and ingress, will be dropped. Cilium will log a warning that\nthe endpoint has been locked down.\n\nIf this option is enabled, cluster operators should closely monitor the\nmetric the bpf map pressure metric of the ``cilium_policy_*`` maps. See\n`Policymap pressure and overflow`_ for more details. They can use this metric\nto create an alert for increased memory pressure on the policy map as well\nas alert for a lockdown if ``enable-lockdown-endpoint-on-policy-overflow``\nis set to \"true\" (any ``bpf_map_pressure`` above a value of ``1.0``).\n\n.. _Policymap pressure and overflow: /operations/troubleshooting.html#policymap-pressure-and-overflow\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/security/policy/lifecycle.rst",
  "extracted_at": "2025-09-03T00:53:44.711379Z"
}