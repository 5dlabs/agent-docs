{
  "url": "file:///tmp/cilium-repo/Documentation/network/kubernetes/compatibility.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _k8scompatibility:\n\n************************\nKubernetes Compatibility\n************************\n\nCilium is compatible with multiple Kubernetes API Groups. Some are deprecated\nor beta, and may only be available in specific versions of Kubernetes.\n\nAll Kubernetes versions listed are e2e tested and guaranteed to be compatible\nwith Cilium. Older and newer Kubernetes versions, while not listed, will depend\non the forward / backward compatibility offered by Kubernetes.\n\n+------------------------+---------------------------+----------------------------------+\n| k8s Version            | k8s NetworkPolicy API     | CiliumNetworkPolicy              |\n+------------------------+---------------------------+----------------------------------+\n|                        |                           | ``cilium.io/v2`` has a           |\n| 1.30, 1.31, 1.32, 1.33 | * `networking.k8s.io/v1`_ | :term:`CustomResourceDefinition` |\n+------------------------+---------------------------+----------------------------------+\n\nAs a general rule, Cilium aims to run e2e tests using the latest build from the\ndevelopment branch against currently supported Kubernetes versions defined in\n`Kubernetes Patch Releases <https://kubernetes.io/releases/patch-releases/>`_\npage.\n\nOnce a release branch gets created from the development branch, Cilium typically\ndoes not change the Kubernetes versions it uses to run e2e tests for the entire\nmaintenance period of that particular release.\n\nAdditionally, Cilium runs e2e tests against various cloud providers' managed\nKubernetes offerings using multiple Kubernetes versions. See the following links\nfor the current test matrix for each cloud provider:\n\n- :git-tree:`AKS <.github/actions/azure/k8s-versions.yaml>`\n- :git-tree:`EKS <.github/actions/eks/k8s-versions.yaml>`\n- :git-tree:`GKE <.github/actions/gke/k8s-versions.yaml>`\n\nCilium CRD schema validation\n============================\n\nCilium uses a CRD for its Network Policies in Kubernetes. This CRD might have\nchanges in its schema validation, which allows it to verify the correctness of\na Cilium Clusterwide Network Policy (CCNP) or a Cilium Network Policy (CNP).\n\nThe CRD itself has an annotation, ``io.cilium.k8s.crd.schema.version``, with the\nschema definition version. By default, Cilium automatically updates the CRD, and\nits validation, with a newer one.\n\nThe following table lists all Cilium versions and their expected schema\nvalidation version:\n\n.. include:: compatibility-table.rst\n\n.. _networking.k8s.io/v1: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#networkpolicy-v1-networking-k8s-io\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/kubernetes/compatibility.rst",
  "extracted_at": "2025-09-03T01:13:29.243703Z"
}