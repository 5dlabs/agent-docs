{
  "url": "file:///tmp/cilium-repo/Documentation/network/kubernetes/intro.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _k8s_intro:\n\n************\nIntroduction\n************\n\nWhat does Cilium provide in your Kubernetes Cluster?\n====================================================\n\nThe following functionality is provided as you run Cilium in your Kubernetes\ncluster:\n\n* :term:`CNI` plugin support to provide pod_connectivity_ with\n  `multi_host_networking`.\n* Identity based implementation of the `NetworkPolicy` resource to isolate :term:`pod<Pod>`\n  to pod connectivity on Layer 3 and 4.\n* An extension to NetworkPolicy in the form of a :term:`CustomResourceDefinition`\n  which extends policy control to add:\n\n  * Layer 7 policy enforcement on ingress and egress for the following\n    application protocols:\n\n    * HTTP\n    * Kafka\n  * Egress support for CIDRs to secure access to external services\n  * Enforcement to external headless services to automatically restrict to the\n    set of Kubernetes endpoints configured for a service.\n* ClusterIP implementation to provide distributed load-balancing for pod to pod\n  traffic.\n* Fully compatible with existing kube-proxy model\n\n.. admonition:: Video\n :class: attention\n\n  If you'd like to learn more about Kubernetes networking and Cilium, check out `eCHO episode 99: Explain Kubernetes Networking and Cilium to Network Engineers <https://www.youtube.com/watch?v=kMPKzb_kW68>`__.\n\n.. _pod_connectivity:\n\nPod-to-Pod Connectivity\n=======================\n\nIn Kubernetes, containers are deployed within units referred to as :term:`Pods<Pod>`, which\ninclude one or more containers reachable via a single IP address.  With Cilium,\neach Pod gets an IP address from the node prefix of the Linux node running the\nPod. See :ref:`address_management` for additional details. In the absence of any\nnetwork security policies, all Pods can reach each other.\n\nPod IP addresses are typically local to the Kubernetes cluster. If pods need to\nreach services outside the cluster as a client, the network traffic is\nautomatically masqueraded as it leaves the node.\n\nService Load-balancing\n======================\n\nKubernetes has developed the Services abstraction which provides the user the\nability to load balance network traffic to different pods. This abstraction\nallows the pods reaching out to other pods by a single IP address, a virtual IP\naddress, without knowing all the pods that are running that particular service.\n\nWithout Cilium, kube-proxy is installed on every node, watches for endpoints\nand services addition and removal on the kube-master which allows it to apply\nthe necessary enforcement on iptables. Thus, the received and sent traffic from\nand to the pods are properly routed to the node and port serving for that\nservice. For more information you can check out the kubernetes user guide for\n`Services <https://kubernetes.io/docs/concepts/services-networking/service/>`_.\n\nWhen implementing ClusterIP, Cilium acts on the same principles as kube-proxy,\nit watches for services addition or removal, but instead of doing the\nenforcement on the iptables, it updates eBPF map entries on each node. For more\ninformation, see the `Pull Request\n<https://github.com/cilium/cilium/pull/109>`__.\n\nFurther Reading\n===============\n\nThe Kubernetes documentation contains more background on the `Kubernetes\nNetworking Model\n<https://kubernetes.io/docs/concepts/cluster-administration/networking/>`_ and\n`Kubernetes Network Plugins\n<https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/>`_.\n\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/kubernetes/intro.rst",
  "extracted_at": "2025-09-03T01:13:29.237216Z"
}