{
  "url": "file:///tmp/cilium-repo/Documentation/kvstore.rst",
  "content": "Key-Value Store\n###############\n\nCilium uses an external key-value store to exchange information across multiple\nCilium instances:\n\nLayout\n======\n\nAll data is stored under a common key prefix:\n\n===================== ====================\nPrefix                Description\n===================== ====================\n``cilium/``           All keys share this common prefix.\n``cilium/state/``     State stored by agents, data is automatically recreated on removal or corruption.\n===================== ====================\n\n\nCluster Nodes\n-------------\n\nEvery agent will register itself as a node in the kvstore and make the\nfollowing information available to other agents:\n\n- Name\n- IP addresses of the node\n- Health checking IP addresses\n- Allocation range of endpoints on the node\n\n============================================================ ====================\nKey                                                          Value\n============================================================ ====================\n``cilium/state/nodes/v1/<cluster>/<node>``                   node.Node_\n============================================================ ====================\n\n.. _node.Node: https://pkg.go.dev/github.com/cilium/cilium/pkg/node/types#Node\n\nAll node keys are attached to a lease owned by the agent of the respective\nnode.\n\n\nServices\n--------\n\nAll Kubernetes services are mirrored into the kvstore by the Cilium operator. This is\nrequired to implement multi cluster service discovery.\n\n============================================================= ====================\nKey                                                           Value\n============================================================= ====================\n``cilium/state/services/v1/<cluster>/<namespace>/<service>``  serviceStore.ClusterService_\n============================================================= ====================\n\n.. _serviceStore.ClusterService: https://pkg.go.dev/github.com/cilium/cilium/pkg/clustermesh/store#ClusterService\n\nIdentities\n----------\n\nAny time a new endpoint is started on a Cilium node, it will determine whether\nthe labels for the endpoint are unique and allocate an identity for that set of\nlabels. These identities are only meaningful within the local cluster.\n\n============================================================= ====================\nKey                                                           Value\n============================================================= ====================\n``cilium/state/identities/v1/id/<identity>``                  labels.LabelArray_\n``cilium/state/identities/v1/value/<labels>/<node>``          identity.NumericIdentity_\n============================================================= ====================\n\n.. _identity.NumericIdentity: https://pkg.go.dev/github.com/cilium/cilium/pkg/identity#NumericIdentity\n.. _labels.LabelArray: https://pkg.go.dev/github.com/cilium/cilium/pkg/labels#LabelArray\n\nEndpoints\n---------\n\nAll endpoint IPs and corresponding identities are mirrored to the kvstore by\nthe agent on the node where the endpoint is launched, to allow peer nodes to\nconfigure egress policies to endpoints backed by these IPs.\n\n============================================================= ====================\nKey                                                           Value\n============================================================= ====================\n``cilium/state/ip/v1/<cluster>/<ip>``                         identity.IPIdentityPair_\n============================================================= ====================\n\n.. _identity.IPIdentityPair: https://pkg.go.dev/github.com/cilium/cilium/pkg/identity#IPIdentityPair\n\nCiliumNetworkPolicyNodeStatus\n-----------------------------\n\nIf handover to Kubernetes is enabled, then each ``cilium-agent`` will propagate\nthe  state of whether it has realized a given CNP to the key-value store instead\nof directly writing to ``kube-apiserver``. ``cilium-operator`` will listen for \nupdates to this prefix from the key-value store, and will be the sole updater\nof statuses for CNPs in the cluster.\n\n================================================================ ====================\nKey                                                              Value\n================================================================ ====================\n``cilium/state/cnpstatuses/v2/<UID>/<namespace>/<name>/<node>``  k8s.CNPNSWithMeta_\n================================================================ ====================\n\n.. _k8s.CNPNSWithMeta: https://pkg.go.dev/github.com/cilium/cilium/pkg/k8s#CNPNSWithMeta\n\nHeartbeat\n---------\n\nThe heartbeat key is periodically updated by the operator to contain the\ncurrent time and date. It is used by agents to validate that kvstore updates\ncan be received.\n\n====================== ======================\nKey                    Value\n====================== ======================\n``cilium/.heartbeat``  Current time and date\n====================== ======================\n\n.. _kvstore_leases:\n\nLeases\n======\n\nWith a few exceptions, all keys in the key-value store are owned by a\nparticular agent running on a node. All such keys have a lease attached. The\nlease is renewed automatically. When the lease expires, the key is removed from\nthe key-value store. This guarantees that keys are removed from the key-value\nstore in the event that an agent dies on a particular and never reappears.\n\nThe lease lifetime is set to 15 minutes. The exact expiration behavior is\ndependent on the kvstore implementation but the expiration typically occurs\nafter double the lease lifetime.\n\nIn addition to regular entry leases, all locks in the key-value store are\nowned by a particular agent running on the node with a separate \"lock lease\"\nattached. The lock lease has a default lifetime of 25 seconds.\n\n=============================================================== ================ ========================================\nKey                                                             Lease Timeout    Default expiry\n=============================================================== ================ ========================================\n``cilium/.initlock/<random>/<lease-ID>``                        LockLeaseTTL_    25 seconds\n``cilium/.heartbeat``                                           KVstoreLeaseTTL  15 minutes\n``cilium/state/cnpstatuses/v2/<UID>/<namespace>/<name>/<node>`` KVstoreLeaseTTL_ 15 minutes\n``cilium/state/identities/v1/id/<identity>``                    None             Garbage collected by ``cilium-operator``\n``cilium/state/identities/v1/value/<labels>/<node>``            KVstoreLeaseTTL_ 15 minutes\n``cilium/state/ip/v1/<cluster>/<ip>``                           KVstoreLeaseTTL_ 15 minutes\n``cilium/state/nodes/v1/<cluster>/<node>``                      KVstoreLeaseTTL_ 15 minutes\n``cilium/state/services/v1/<cluster>/<namespace>/<service>``    KVstoreLeaseTTL_ 15 minutes\n=============================================================== ================ ========================================\n\n.. _LockLeaseTTL: https://pkg.go.dev/github.com/cilium/cilium/pkg/defaults?tab=doc#LockLeaseTTL\n.. _KVstoreLeaseTTL: https://pkg.go.dev/github.com/cilium/cilium/pkg/defaults?tab=doc#KVstoreLeaseTTL\n\nCaveats and Limitations\n=======================\n\nIf you manually remove and recreate kvstore state when IPSec transparent\nencryption is enabled, then that may cause permanent connectivity disruption\nfor pods managed by Cilium. Refer to :ref:`xfrm_state_staling_in_cilium` for\nfurther details.\n\nDebugging\n=========\n\nThe contents stored in the kvstore can be queued and manipulate using the\n``cilium kvstore`` command. For additional details, see the command reference.\n\nExample:\n\n.. code-block:: shell-session\n\n    $ cilium kvstore get --recursive cilium/state/nodes/\n    cilium/state/nodes/v1/default/runtime1 => {\"Name\":\"runtime1\",\"IPAddresses\":[{\"AddressType\":\"InternalIP\",\"IP\":\"10.0.2.15\"}],\"IPv4AllocCIDR\":{\"IP\":\"10.11.0.0\",\"Mask\":\"//8AAA==\"},\"IPv6AllocCIDR\":{\"IP\":\"f00d::a0f:0:0:0\",\"Mask\":\"//////////////////8AAA==\"},\"IPv4HealthIP\":\"\",\"IPv6HealthIP\":\"\"}\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/kvstore.rst",
  "extracted_at": "2025-09-03T01:13:29.360438Z"
}