{
  "url": "file:///tmp/cilium-repo/Documentation/configuration/per-node-config.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _per-node-configuration:\n\n**********************\nPer-node configuration\n**********************\n\nThe Cilium agent process (a.k.a. DaemonSet) supports setting configuration\non a per-node basis. This allows overriding :ref:`cilium-config-configmap`\nfor a node or set of nodes. It is managed by CiliumNodeConfig objects.\n\nThis feature is useful for:\n\n- Gradually rolling out changes.\n- Selectively enabling features that require specific hardware:\n\n    * :ref:`XDP acceleration`\n    * :ref:`ipv6_big_tcp`\n\nCiliumNodeConfig objects\n------------------------\n\nA CiliumNodeConfig object allows for overriding ConfigMap / Agent arguments.\nIt consists of a set of fields and a label selector. The label selector\ndefines to which nodes the configuration applies. As is the standard with\nKubernetes, an empty LabelSelector (e.g. ``{}``) selects all nodes.\n\n.. note::\n    Creating or modifying a CiliumNodeConfig will not cause changes to take effect\n    until pods are deleted and re-created (or their node is restarted).\n\n\nExample: selective XDP enablement\n---------------------------------\n\nTo enable :ref:`XDP acceleration` only on nodes with necessary\nhardware, one would label the relevant nodes and override their configuration.\n\n.. code-block:: yaml\n\n    apiVersion: cilium.io/v2\n    kind: CiliumNodeConfig\n    metadata:\n      namespace: kube-system\n      name: enable-xdp\n    spec:\n      nodeSelector:\n        matchLabels:\n          io.cilium.xdp-offload: \"true\"\n      defaults:\n        bpf-lb-acceleration: native\n\nExample: KubeProxyReplacement Rollout\n-------------------------------------\n\nTo roll out :ref:`kube-proxy replacement <kubeproxy-free>` in a gradual manner,\nyou may also wish to use the CiliumNodeConfig feature. This will label all migrated\nnodes with ``io.cilium.migration/kube-proxy-replacement: true``\n\n.. warning::\n\n    You must have installed Cilium with the Helm values ``k8sServiceHost`` and\n    ``k8sServicePort``. Otherwise, Cilium will not be able to reach the Kubernetes\n    APIServer after kube-proxy is uninstalled.\n\n    You can apply these two values to a running cluster via ``helm upgrade``.\n\n#. Patch kube-proxy to only run on unmigrated nodes.\n\n    .. code-block:: shell-session\n\n        kubectl -n kube-system patch daemonset kube-proxy --patch '{\"spec\": {\"template\": {\"spec\": {\"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchExpressions\": [{\"key\": \"io.cilium.migration/kube-proxy-replacement\", \"operator\": \"NotIn\", \"values\": [\"true\"]}]}]}}}}}}}'\n\n#. Configure Cilium to use kube-proxy replacement on migrated nodes\n\n    .. code-block:: shell-session\n\n        cat <<EOF | kubectl apply --server-side -f -\n        apiVersion: cilium.io/v2\n        kind: CiliumNodeConfig\n        metadata:\n          namespace: kube-system\n          name: kube-proxy-replacement\n        spec:\n          nodeSelector:\n            matchLabels:\n              io.cilium.migration/kube-proxy-replacement: \"true\"\n          defaults:\n            kube-proxy-replacement: \"true\"\n            kube-proxy-replacement-healthz-bind-address: \"'0.0.0.0:10256'\"\n\n        EOF\n\n#. Select a node to migrate. Optionally, cordon and drain that node:\n\n    .. code-block:: shell-session\n\n        export NODE=kind-worker\n        kubectl label node $NODE --overwrite 'io.cilium.migration/kube-proxy-replacement=true'\n        kubectl cordon $NODE\n\n#. Delete Cilium DaemonSet to reload configuration:\n\n    .. code-block:: shell-session\n\n        kubectl -n kube-system delete pod -l k8s-app=cilium --field-selector spec.nodeName=$NODE\n\n#. Ensure Cilium has the correct configuration:\n\n    .. code-block:: shell-session\n\n        kubectl -n kube-system exec $(kubectl -n kube-system get pod -l k8s-app=cilium --field-selector spec.nodeName=$NODE -o name) -c cilium-agent -- \\\n            cilium config get kube-proxy-replacement\n        true\n\n#. Uncordon node\n\n    .. code-block:: shell-session\n\n        kubectl uncordon $NODE\n\n#. Cleanup: set default to kube-proxy-replacement:\n\n    .. code-block:: shell-session\n\n        cilium config set --restart=false kube-proxy-replacement true\n        cilium config set --restart=false kube-proxy-replacement-healthz-bind-address '0.0.0.0:10256'\n        kubectl -n kube-system delete ciliumnodeconfig kube-proxy-replacement\n\n#. Cleanup: delete kube-proxy daemonset, unlabel nodes\n\n    .. code-block:: shell-session\n\n        kubectl -n kube-system delete daemonset kube-proxy\n        kubectl label node --all --overwrite 'io.cilium.migration/kube-proxy-replacement-'\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/configuration/per-node-config.rst",
  "extracted_at": "2025-09-03T00:53:44.691252Z"
}