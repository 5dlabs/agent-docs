{
  "url": "file:///tmp/cilium-repo/Documentation/network/servicemesh/tls-cert.rst",
  "content": "Create TLS Certificate and Private Key\n======================================\n\n.. tabs::\n\n    .. group-tab:: Self-signed Certificate\n\n        For demonstration purposes we will use a TLS certificate signed by a made-up,\n        `self-signed <https://cert-manager.io/docs/faq/terminology/#what-does-self-signed-mean-is-my-ca-self-signed>`_\n        certificate authority (CA). One easy way to do this is with `mkcert <https://github.com/FiloSottile/mkcert>`_.\n        We want a certificate that will validate ``bookinfo.cilium.rocks`` and\n        ``hipstershop.cilium.rocks``, as these are the host names used in this example.\n\n        .. code-block:: shell-session\n\n            $ mkcert bookinfo.cilium.rocks hispter.cilium.rocks\n            Note: the local CA is not installed in the system trust store.\n            Run \"mkcert -install\" for certificates to be trusted automatically ‚ö†Ô∏è\n\n            Created a new certificate valid for the following names üìú\n             - \"bookinfo.cilium.rocks\"\n             - \"hispter.cilium.rocks\"\n\n            The certificate is at \"./bookinfo.cilium.rocks+1.pem\" and the key at \"./bookinfo.cilium.rocks+1-key.pem\" ‚úÖ\n\n            It will expire on 29 November 2026 üóì\n\n        Create a Kubernetes secret with this demo key and certificate:\n\n        .. code-block:: shell-session\n\n            $ kubectl create secret tls demo-cert --key=bookinfo.cilium.rocks+1-key.pem --cert=bookinfo.cilium.rocks+1.pem\n\n    .. group-tab:: cert-manager\n\n        Let us install cert-manager:\n\n        .. code-block:: shell-session\n\n            $ helm repo add jetstack https://charts.jetstack.io\n            $ helm install cert-manager jetstack/cert-manager --version v1.16.2 \\\n                --namespace cert-manager \\\n                --set crds.enabled=true \\\n                --create-namespace \\\n                --set config.apiVersion=\"controller.config.cert-manager.io/v1alpha1\" \\\n                --set config.kind=\"ControllerConfiguration\" \\\n                --set config.enableGatewayAPI=true\n\n        Now, create a CA Issuer:\n\n        .. parsed-literal::\n\n            $ kubectl apply -f \\ |SCM_WEB|\\/examples/kubernetes/servicemesh/ca-issuer.yaml\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/servicemesh/tls-cert.rst",
  "extracted_at": "2025-09-03T01:13:29.146107Z"
}