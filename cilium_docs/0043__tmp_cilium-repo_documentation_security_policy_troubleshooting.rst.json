{
  "url": "file:///tmp/cilium-repo/Documentation/security/policy/troubleshooting.rst",
  "content": ".. only:: not (epub or latex or html) \n WARNING: You are looking at unreleased Cilium documentation.\nPlease use the official rendered version released here:\nhttps://docs.cilium.io\n \n .. _policy_troubleshooting: \n \n Troubleshooting \n \n Policy Rule to Endpoint Mapping \n To determine which policy rules are currently in effect for an endpoint the\ndata from  cilium-dbg endpoint list  and  cilium-dbg endpoint get  can be paired\nwith the data from  cilium-dbg policy get .  cilium-dbg endpoint get  will list the\nlabels of each rule that applies to an endpoint. The list of labels can be\npassed to  cilium-dbg policy get  to show that exact source policy.  Note that\nrules that have no labels cannot be fetched alone (a no label  cilium-dbg policy get  returns the complete policy on the node). Rules with the same labels will\nbe returned together. \n In the above example, for one of the  deathstar  pods the endpoint id is 568. We can print all policies applied to it with: \n .. code-block:: shell-session \n $ # Get a shell on the Cilium pod\n\n$ kubectl exec -ti cilium-88k78 -n kube-system -- /bin/bash\n\n$ # print out the ingress labels\n$ # clean up the data\n$ # fetch each policy via each set of labels\n$ # (Note that while the structure is \"...l4.ingress...\", it reflects all L3, L4 and L7 policy.\n\n$ cilium-dbg endpoint get 568 -o jsonpath='{range ..status.policy.realized.l4.ingress[*].derived-from-rules}{@}{\"\\n\"}{end}'|tr -d '][' | xargs -I{} bash -c 'echo \"Labels: {}\"; cilium-dbg policy get {}'\nLabels: k8s:io.cilium.k8s.policy.name=rule1 k8s:io.cilium.k8s.policy.namespace=default\n[\n  {\n    \"endpointSelector\": {\n      \"matchLabels\": {\n        \"any:class\": \"deathstar\",\n        \"any:org\": \"empire\",\n        \"k8s:io.kubernetes.pod.namespace\": \"default\"\n      }\n    },\n    \"ingress\": [\n      {\n        \"fromEndpoints\": [\n          {\n            \"matchLabels\": {\n              \"any:org\": \"empire\",\n              \"k8s:io.kubernetes.pod.namespace\": \"default\"\n            }\n          }\n        ],\n        \"toPorts\": [\n          {\n            \"ports\": [\n              {\n                \"port\": \"80\",\n                \"protocol\": \"TCP\"\n              }\n            ],\n            \"rules\": {\n              \"http\": [\n                {\n                  \"path\": \"/v1/request-landing\",\n                  \"method\": \"POST\"\n                }\n              ]\n            }\n          }\n        ]\n      }\n    ],\n    \"labels\": [\n      {\n        \"key\": \"io.cilium.k8s.policy.name\",\n        \"value\": \"rule1\",\n        \"source\": \"k8s\"\n      },\n      {\n        \"key\": \"io.cilium.k8s.policy.namespace\",\n        \"value\": \"default\",\n        \"source\": \"k8s\"\n      }\n    ]\n  }\n]\nRevision: 217\n\n\n$ # repeat for egress\n$ cilium-dbg endpoint get 568 -o jsonpath='{range ..status.policy.realized.l4.egress[*].derived-from-rules}{@}{\"\\n\"}{end}' | tr -d '][' | xargs -I{} bash -c 'echo \"Labels: {}\"; cilium-dbg policy get {}'\n \n Troubleshooting  toFQDNs  rules \n The effect of  toFQDNs  may change long after a policy is applied, as DNS\ndata changes. This can make it difficult to debug unexpectedly blocked\nconnections, or transient failures. Cilium provides CLI tools to introspect\nthe state of applying FQDN policy in multiple layers of the daemon: \n #.  cilium-dbg policy get  should show the FQDN policy that was imported: \n .. code-block:: json \n   {\n    \"endpointSelector\": {\n      \"matchLabels\": {\n        \"any:class\": \"mediabot\",\n        \"any:org\": \"empire\",\n        \"k8s:io.kubernetes.pod.namespace\": \"default\"\n      }\n    },\n    \"egress\": [\n      {\n        \"toFQDNs\": [\n          {\n            \"matchName\": \"api.github.com\"\n          }\n        ]\n      },\n      {\n        \"toEndpoints\": [\n          {\n            \"matchLabels\": {\n              \"k8s:io.kubernetes.pod.namespace\": \"kube-system\",\n              \"k8s:k8s-app\": \"kube-dns\"\n            }\n          }\n        ],\n        \"toPorts\": [\n          {\n            \"ports\": [\n              {\n                \"port\": \"53\",\n                \"protocol\": \"ANY\"\n              }\n            ],\n            \"rules\": {\n              \"dns\": [\n                {\n                  \"matchPattern\": \"*\"\n                }\n              ]\n            }\n          }\n        ]\n      }\n    ],\n    \"labels\": [\n      {\n        \"key\": \"io.cilium.k8s.policy.derived-from\",\n        \"value\": \"CiliumNetworkPolicy\",\n        \"source\": \"k8s\"\n      },\n      {\n        \"key\": \"io.cilium.k8s.policy.name\",\n        \"value\": \"fqdn\",\n        \"source\": \"k8s\"\n      },\n      {\n        \"key\": \"io.cilium.k8s.policy.namespace\",\n        \"value\": \"default\",\n        \"source\": \"k8s\"\n      },\n      {\n        \"key\": \"io.cilium.k8s.policy.uid\",\n        \"value\": \"f213c6b2-c87b-449c-a66c-e19a288062ba\",\n        \"source\": \"k8s\"\n      }\n    ]\n  }\n \n #. After making a DNS request, the FQDN to IP mapping should be available via\n cilium-dbg fqdn cache list : \n .. code-block:: shell-session \n   # cilium-dbg fqdn cache list\n  Endpoint   Source   FQDN                  TTL    ExpirationTime             IPs\n  725        lookup   api.github.com.       3600   2023-02-10T18:16:05.842Z   140.82.121.6\n  725        lookup   support.github.com.   3600   2023-02-10T18:16:09.371Z   185.199.111.133,185.199.109.133,185.199.110.133,185.199.108.133\n \n #. If the traffic is allowed, then these IPs should have corresponding local identities via\n cilium-dbg ip list | grep <IP> : \n .. code-block:: shell-session \n   # cilium-dbg ip list | grep -A 1 140.82.121.6\n  140.82.121.6/32                 fqdn:api.github.com\n                                  reserved:world\n \n Monitoring  toFQDNs  identity usage \n When using  toFQDNs  selectors, every IP observed by a matching DNS lookup\nwill be labeled with that selector. As a DNS name might be matched by multiple\nselectors, and because an IP might map to multiple names, an IP might be labeled\nby multiple selectors. As with regular cluster identities, every unique combination\nof labels will allocate its own numeric security identity. This can lead to many\ndifferent identities being allocated, as described in :ref: identity-relevant-labels . \n To detect potential identity exhaustion for  toFQDNs  identities, the number\nallocated FQDN identities can be monitored using the  identity_label_sources{type=\"fqdn\"} \nmetric. As a comparative reference the  fqdn_selectors  metric monitors the number\nof registered  toFQDNs  selectors. For more details on metrics, please\nrefer to :ref: metrics .",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/security/policy/troubleshooting.rst",
  "extracted_at": "2025-09-03T00:53:44.713135Z"
}