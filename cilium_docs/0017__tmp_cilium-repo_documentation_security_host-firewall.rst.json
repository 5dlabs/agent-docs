{
  "url": "file:///tmp/cilium-repo/Documentation/security/host-firewall.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _host_firewall:\n\n*************\nHost Firewall\n*************\n\nThis document serves as an introduction to Cilium's host firewall, to enforce\nsecurity policies for Kubernetes nodes.\n\n.. admonition:: Video\n  :class: attention\n\n  You can also watch a video of Cilium's host firewall in action on\n  `eCHO Episode 40: Cilium Host Firewall <https://www.youtube.com/watch?v=GLLLcz398K0&t=288s>`__.\n\nEnable the Host Firewall in Cilium\n==================================\n\n.. include:: /installation/k8s-install-download-release.rst\n\nDeploy Cilium release via Helm:\n\n.. parsed-literal::\n\n    helm install cilium |CHART_RELEASE|        \\\\\n      --namespace kube-system                  \\\\\n      --set hostFirewall.enabled=true          \\\\\n      --set devices='{ethX,ethY}'\n\nThe ``devices`` flag refers to the network devices Cilium is configured on,\nsuch as ``eth0``. If you omit this option, Cilium auto-detects what interfaces\nthe host firewall applies to. The resulting interfaces are shown in the\noutput of the ``cilium-dbg status`` command:\n\n.. code-block:: shell-session\n\n    $ kubectl exec -n kube-system ds/cilium -- \\\n         cilium-dbg status | grep 'Host firewall'\n\nAt this point, the Cilium-managed nodes are ready to enforce network policies.\n\n\nAttach a Label to the Node\n==========================\n\nIn this guide, host policies only apply to nodes with the label\n``node-access=ssh``. Therefore, you first need to attach this label to a node\nin the cluster:\n\n.. code-block:: shell-session\n\n    $ export NODE_NAME=k8s1\n    $ kubectl label node $NODE_NAME node-access=ssh\n    node/k8s1 labeled\n\n\nEnable Policy Audit Mode for the Host Endpoint\n==============================================\n\n`HostPolicies` enforce access control over connectivity to and from nodes.\nParticular care must be taken to ensure that when host policies are imported,\nCilium does not block access to the nodes or break the cluster's normal\nbehavior (for example by blocking communication with ``kube-apiserver``).\n\nTo avoid such issues, switch the host firewall in audit mode and validate the\nimpact of host policies before enforcing them.\n\n.. warning::\n\n   When Policy Audit Mode is enabled, no network policy is enforced so this\n   setting is not recommended for production deployment.\n\nEnable and check status for the Policy Audit Mode on the host endpoint for a\ngiven node with the following commands:\n\n.. code-block:: shell-session\n\n    $ CILIUM_NAMESPACE=kube-system\n    $ CILIUM_POD_NAME=$(kubectl -n $CILIUM_NAMESPACE get pods -l \"k8s-app=cilium\" -o jsonpath=\"{.items[?(@.spec.nodeName=='$NODE_NAME')].metadata.name}\")\n    $ alias kexec=\"kubectl -n $CILIUM_NAMESPACE exec $CILIUM_POD_NAME --\"\n    $ HOST_EP_ID=$(kexec cilium-dbg endpoint list -o jsonpath='{[?(@.status.identity.id==1)].id}')\n    $ kexec cilium-dbg status | grep 'Host firewall'\n    Host firewall:           Enabled   [eth0]\n    $ kexec cilium-dbg endpoint config $HOST_EP_ID PolicyAuditMode=Enabled\n    Endpoint 3353 configuration updated successfully\n    $ kexec cilium-dbg endpoint config $HOST_EP_ID | grep PolicyAuditMode\n    PolicyAuditMode        : Enabled\n\n\nApply a Host Network Policy\n===========================\n\n:ref:`HostPolicies` match on node labels using a :ref:`NodeSelector` to\nidentify the nodes to which the policies applies. They apply only to the host\nnamespace, including host-networking pods. They don't apply to communications\nbetween pods or between pods and the outside of the cluster, except if those\npods are host-networking pods.\n\nThe following policy applies to all nodes with the ``node-access=ssh`` label.\nIt allows communications from outside the cluster only for TCP/22 and for ICMP\n(ping) echo requests. All communications from the cluster to the hosts are\nallowed.\n\n.. literalinclude:: ../../examples/policies/host/demo-host-policy.yaml\n     :language: yaml\n\nTo apply this policy, run:\n\n.. parsed-literal::\n\n    $ kubectl create -f \\ |SCM_WEB|\\/examples/policies/host/demo-host-policy.yaml\n    ciliumclusterwidenetworkpolicy.cilium.io/demo-host-policy created\n\nThe host is represented as a special endpoint, with label ``reserved:host``, in\nthe output of command ``cilium-dbg endpoint list``. Use this command to inspect\nthe status of host policies:\n\n.. code-block:: shell-session\n\n    $ kexec cilium-dbg endpoint list\n    ENDPOINT   POLICY (ingress)   POLICY (egress)   IDENTITY   LABELS (source:key[=value])                       IPv6                 IPv4           STATUS\n               ENFORCEMENT        ENFORCEMENT\n    266        Disabled           Disabled          104        k8s:io.cilium.k8s.policy.cluster=default          f00d::a0b:0:0:ef4e   10.16.172.63   ready\n                                                               k8s:io.cilium.k8s.policy.serviceaccount=coredns\n                                                               k8s:io.kubernetes.pod.namespace=kube-system\n                                                               k8s:k8s-app=kube-dns\n    1687       Disabled (Audit)   Disabled          1          k8s:node-access=ssh                                                                   ready\n                                                               reserved:host\n    3362       Disabled           Disabled          4          reserved:health                                   f00d::a0b:0:0:49cf   10.16.87.66    ready\n\nIn this example, one can observe that policy enforcement on the host endpoint\nis in audit mode for ingress traffic, and disabled for egress traffic.\n\n\nAdjust the Host Policy to Your Environment\n==========================================\n\nAs long as the host endpoint runs in audit mode, communications disallowed by\nthe policy are not dropped. Nevertheless, they are reported by ``cilium-dbg\nmonitor``, as ``action audit``. With these reports, the audit mode allows you\nto adjust the host policy to your environment in order to avoid unexpected\nconnection breakages.\n\n.. code-block:: shell-session\n\n    $ kexec cilium-dbg monitor -t policy-verdict --related-to $HOST_EP_ID\n    Policy verdict log: flow 0x0 local EP ID 1687, remote ID 6, proto 1, ingress, action allow, match L3-Only, 192.168.60.12 -> 192.168.60.11 EchoRequest\n    Policy verdict log: flow 0x0 local EP ID 1687, remote ID 6, proto 6, ingress, action allow, match L3-Only, 192.168.60.12:37278 -> 192.168.60.11:2379 tcp SYN\n    Policy verdict log: flow 0x0 local EP ID 1687, remote ID 2, proto 6, ingress, action audit, match none, 10.0.2.2:47500 -> 10.0.2.15:6443 tcp SYN\n\nFor details on deriving the network policies from the output of ``cilium\nmonitor``, refer to `observe_policy_verdicts` and `create_network_policy` in\nthe `policy_verdicts` guide.\n\nNote that `Entities based` rules are convenient when combined with host\npolicies, for example to allow communication to entire classes of destinations,\nsuch as all remotes nodes (``remote-node``) or the entire cluster\n(``cluster``).\n\n.. warning::\n\n    Make sure that none of the communications required to access the cluster or\n    for the cluster to work properly are denied. Ensure they all appear as\n    ``action allow`` before disabling the audit mode.\n\n.. _disable_policy_audit_mode:\n\nDisable Policy Audit Mode\n=========================\n\nOnce you are confident all required communications to the host from outside the\ncluster are allowed, disable the policy audit mode to enforce the host policy:\n\n.. code-block:: shell-session\n\n    $ kexec cilium-dbg endpoint config $HOST_EP_ID PolicyAuditMode=Disabled\n    Endpoint 3353 configuration updated successfully\n\nIngress host policies should now appear as enforced:\n\n.. code-block:: shell-session\n\n    $ kexec cilium-dbg endpoint list\n    ENDPOINT   POLICY (ingress)   POLICY (egress)   IDENTITY   LABELS (source:key[=value])                       IPv6                 IPv4           STATUS\n               ENFORCEMENT        ENFORCEMENT\n    266        Disabled           Disabled          104        k8s:io.cilium.k8s.policy.cluster=default          f00d::a0b:0:0:ef4e   10.16.172.63   ready\n                                                               k8s:io.cilium.k8s.policy.serviceaccount=coredns\n                                                               k8s:io.kubernetes.pod.namespace=kube-system\n                                                               k8s:k8s-app=kube-dns\n    1687       Enabled            Disabled          1          k8s:node-access=ssh                                                                   ready\n                                                               reserved:host\n    3362       Disabled           Disabled          4          reserved:health                                   f00d::a0b:0:0:49cf   10.16.87.66    ready\n\n\nCommunications that are not explicitly allowed by the host policy are now\ndropped:\n\n.. code-block:: shell-session\n\n    $ kexec cilium-dbg monitor -t policy-verdict --related-to $HOST_EP_ID\n    Policy verdict log: flow 0x0 local EP ID 1687, remote ID 2, proto 6, ingress, action deny, match none, 10.0.2.2:49038 -> 10.0.2.15:21 tcp SYN\n\n\nClean up\n========\n\n.. code-block:: shell-session\n\n   $ kubectl delete ccnp demo-host-policy\n   $ kubectl label node $NODE_NAME node-access-\n\nFurther Reading\n===============\n\nRead the documentation on :ref:`HostPolicies` for additional details on how to\nuse the policies. In particular, refer to the :ref:`Troubleshooting Host\nPolicies <troubleshooting_host_policies>` subsection to understand how to debug\nissues with Host Policies, or to the section on :ref:`Host Policies known\nissues <host_policies_known_issues>` to understand the current limitations of\nthe feature.\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/security/host-firewall.rst",
  "extracted_at": "2025-09-03T01:13:28.731681Z"
}