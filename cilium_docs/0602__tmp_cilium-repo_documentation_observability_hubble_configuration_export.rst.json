{
  "url": "file:///tmp/cilium-repo/Documentation/observability/hubble/configuration/export.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n***************************\nConfiguring Hubble exporter\n***************************\n\n**Hubble Exporter** is a feature of ``cilium-agent`` that lets you write\nHubble flows to a file for later consumption as logs. Hubble Exporter supports file\nrotation, size limits, filters, and field masks.\n\nPrerequisites\n=============\n\n.. include:: /installation/k8s-install-download-release.rst\n\nBasic Configuration\n===================\n\nSetup\n-----\n\n**Hubble Exporter** is enabled with Config Map property. It is disabled\nuntil you set a file path value for ``hubble-export-file-path``.\n\nYou can use helm to install cilium with hubble exporter enabled:\n\n.. parsed-literal::\n\n   helm install cilium |CHART_RELEASE| \\\\\n      --set hubble.enabled=true \\\\\n      --set hubble.export.static.enabled=true \\\\\n      --set hubble.export.static.filePath=/var/run/cilium/hubble/events.log\n\nWait for ``cilium`` pod to become ready:\n\n.. code-block:: shell-session\n\n    kubectl -n kube-system rollout status ds/cilium\n\nVerify that flow logs are stored in target files:\n\n.. code-block:: shell-session\n\n    kubectl -n kube-system exec ds/cilium -- tail -f /var/run/cilium/hubble/events.log\n\nOnce you have configured the Hubble Exporter, you can configure your logging solution to consume\nlogs from your Hubble export file path.\n\nTo get Hubble flows directly exported to the logs instead of written to a rotated file, \n``stdout`` can be defined as ``hubble-export-file-path``.\n\nTo disable the static configuration, you must remove the ``hubble-export-file-path`` key in the\n``cilium-config`` ConfigMap and manually clean up the log files created in the specified\nlocation in the container. The below command will restart the Cilium pods. If you edit the\nConfigMap manually, you will need to restart the Cilium pods.\n\n.. code-block:: shell-session\n\n    cilium config delete hubble-export-file-path\n\nConfiguration options\n---------------------\n\nHelm chart configuration options include:\n\n- ``hubble.export.static.filePath``: file path of target log file. (default /var/run/cilium/hubble/events.log)\n\n- ``hubble.export.fileMaxSizeMb``: size in MB at which to rotate the Hubble export file. (default 10)\n\n- ``hubble.export.fileMaxBackups``: number of rotated Hubble export files to keep. (default 5)\n\n- ``hubble.export.fileCompress``: enable compression of rotated files. (default false)\n\nPerformance tuning\n==================\n\nConfiguration options impacting performance of **Hubble exporter** include:\n\n- ``hubble.export.static.allowList``: specify an allowlist as JSON encoded FlowFilters to Hubble exporter.\n\n- ``hubble.export.static.denyList``: specify a denylist as JSON encoded FlowFilters to Hubble exporter.\n\n- ``hubble.export.static.fieldMask``: specify a list of fields to use for field masking in Hubble exporter.\n\nFilters\n-------\n\nYou can use ``hubble`` CLI to generated required filters (see `Specifying Raw\nFlow Filters`_ for more examples).\n\n.. _Specifying Raw Flow Filters: https://github.com/cilium/hubble#specifying-raw-flow-filters\n\nFor example, to filter flows with verdict ``DENIED`` or ``ERROR``, run:\n\n.. code-block:: shell-session\n\n    $ hubble observe --verdict DROPPED --verdict ERROR --print-raw-filters\n    allowlist:\n    - '{\"verdict\":[\"DROPPED\",\"ERROR\"]}'\n\nThen paste the output to ``hubble-export-allowlist`` in ``cilium-config``\nConfig Map:\n\n.. code-block:: shell-session\n\n    kubectl -n kube-system patch cm cilium-config --patch-file=/dev/stdin <<-EOF\n    data:\n      hubble-export-allowlist: '{\"verdict\":[\"DROPPED\",\"ERROR\"]}'\n    EOF\n\nOr use helm chart to update your cilium installation setting value flag\n``hubble.export.static.allowList``.\n\n.. parsed-literal::\n\n   helm upgrade cilium |CHART_RELEASE| \\\\\n      --set hubble.enabled=true \\\\\n      --set hubble.export.static.enabled=true \\\\\n      --set hubble.export.static.allowList[0]='{\"verdict\":[\"DROPPED\",\"ERROR\"]}'\n\n\nYou can do the same to selectively filter data. For example, to filter all flows in the\n``kube-system`` namespace, run:\n\n.. code-block:: shell-session\n\n    $ hubble observe --not --namespace kube-system --print-raw-filters\n    denylist:\n    - '{\"source_pod\":[\"kube-system/\"]}'\n    - '{\"destination_pod\":[\"kube-system/\"]}'\n\nThen paste the output to ``hubble-export-denylist`` in ``cilium-config`` Config\nMap:\n\n.. code-block:: shell-session\n\n    kubectl -n kube-system patch cm cilium-config --patch-file=/dev/stdin <<-EOF\n    data:\n      hubble-export-denylist: '{\"source_pod\":[\"kube-system/\"]},{\"destination_pod\":[\"kube-system/\"]}'\n    EOF\n\nOr use helm chart to update your cilium installation setting value flag\n``hubble.export.static.denyList``.\n\n.. parsed-literal::\n\n   helm upgrade cilium |CHART_RELEASE| \\\\\n      --set hubble.enabled=true \\\\\n      --set hubble.export.static.enabled=true \\\\\n      --set hubble.export.static.denyList[0]='{\"source_pod\":[\"kube-system/\"]}' \\\\\n      --set hubble.export.static.denyList[1]='{\"destination_pod\":[\"kube-system/\"]}'\n\nField mask\n----------\n\nField mask can't be generated with ``hubble``. Field mask is a list of field\nnames from the `flow proto`_ definition.\n\n.. _flow proto: https://github.com/cilium/cilium/blob/main/api/v1/flow/flow.proto\n\nExamples include:\n\n - To keep all information except pod labels:\n\n   .. code-block:: shell-session\n\n       hubble-export-fieldmask: time source.identity source.namespace source.pod_name destination.identity destination.namespace destination.pod_name source_service destination_service l4 IP ethernet l7 Type node_name is_reply event_type verdict Summary\n\n - To keep only timestamp, verdict, ports, IP addresses, node name, pod name, and namespace:\n\n   .. code-block:: shell-session\n\n       hubble-export-fieldmask: time source.namespace source.pod_name destination.namespace destination.pod_name l4 IP node_name is_reply verdict\n\nThe following is a complete example of configuring Hubble Exporter.\n\n - Configuration:\n\n   .. parsed-literal::\n\n       helm upgrade cilium |CHART_RELEASE| \\\\\n          --set hubble.enabled=true \\\\\n          --set hubble.export.static.enabled=true \\\\\n          --set hubble.export.static.filePath=/var/run/cilium/hubble/events.log \\\\\n          --set hubble.export.static.allowList[0]='{\"verdict\":[\"DROPPED\",\"ERROR\"]}'\n          --set hubble.export.static.denyList[0]='{\"source_pod\":[\"kube-system/\"]}' \\\\\n          --set hubble.export.static.denyList[1]='{\"destination_pod\":[\"kube-system/\"]}' \\\\\n          --set \"hubble.export.static.fieldMask={time,source.namespace,source.pod_name,destination.namespace,destination.pod_name,l4,IP,node_name,is_reply,verdict,drop_reason_desc}\"\n\n - Command:\n\n   .. code-block:: shell-session\n\n       kubectl -n kube-system exec ds/cilium -- tail -f /var/run/cilium/hubble/events.log\n\n - Output:\n\n   ::\n\n       {\"flow\":{\"time\":\"2023-08-21T12:12:13.517394084Z\",\"verdict\":\"DROPPED\",\"IP\":{\"source\":\"fe80::64d8:8aff:fe72:fc14\",\"destination\":\"ff02::2\",\"ipVersion\":\"IPv6\"},\"l4\":{\"ICMPv6\":{\"type\":133}},\"source\":{},\"destination\":{},\"node_name\":\"kind-kind/kind-worker\",\"drop_reason_desc\":\"INVALID_SOURCE_IP\"},\"node_name\":\"kind-kind/kind-worker\",\"time\":\"2023-08-21T12:12:13.517394084Z\"}\n       {\"flow\":{\"time\":\"2023-08-21T12:12:18.510175415Z\",\"verdict\":\"DROPPED\",\"IP\":{\"source\":\"10.244.1.60\",\"destination\":\"10.244.1.5\",\"ipVersion\":\"IPv4\"},\"l4\":{\"TCP\":{\"source_port\":44916,\"destination_port\":80,\"flags\":{\"SYN\":true}}},\"source\":{\"namespace\":\"default\",\"pod_name\":\"xwing\"},\"destination\":{\"namespace\":\"default\",\"pod_name\":\"deathstar-7848d6c4d5-th9v2\"},\"node_name\":\"kind-kind/kind-worker\",\"drop_reason_desc\":\"POLICY_DENIED\"},\"node_name\":\"kind-kind/kind-worker\",\"time\":\"2023-08-21T12:12:18.510175415Z\"}\n\n\nDynamic exporter configuration\n==============================\n\nStandard hubble exporter configuration accepts only one set of filters and\nrequires cilium pod restart to change config. Dynamic flow logs allow configuring\nmultiple filters at the same time and saving output in separate files.\nAdditionally it does not require cilium pod restarts to apply changed configuration.\n\n**Dynamic Hubble Exporter** is enabled with Config Map property. It is disabled\nuntil you set a file path value for ``hubble-flowlogs-config-path``.\n\nInstall cilium with dynamic exporter enabled:\n\n.. parsed-literal::\n\n   helm install cilium |CHART_RELEASE| \\\\\n      --set hubble.enabled=true \\\\\n      --set hubble.export.dynamic.enabled=true\n\nWait for ``cilium`` pod to become ready:\n\n.. code-block:: shell-session\n\n    kubectl -n kube-system rollout status ds/cilium\n\nYou can change flow log settings without a need for pod to be restarted\n(changes should be reflected within 60s because of configmap propagation delay):\n\n.. parsed-literal::\n\n   helm upgrade cilium |CHART_RELEASE| \\\\\n      --set hubble.enabled=true \\\\\n      --set hubble.export.dynamic.enabled=true \\\\\n      --set hubble.export.dynamic.config.content[0].name=system \\\\\n      --set hubble.export.dynamic.config.content[0].filePath=/var/run/cilium/hubble/events-system.log \\\\\n      --set hubble.export.dynamic.config.content[0].includeFilters[0].source_pod[0]='kube_system/' \\\\\n      --set hubble.export.dynamic.config.content[0].includeFilters[1].destination_pod[0]='kube_system/'\n\n\nDynamic flow logs can be configured with ``end`` property which means that it will\nautomatically stop logging after specified date time. It supports the same\nfield masking and filtering as static hubble exporter.\n\nFor max output file size and backup files dynamic exporter reuses the same\nsettings as static one: ``hubble.export.fileMaxSizeMb`` and ``hubble.export.fileMaxBackups``\n\nSample dynamic flow logs configs:\n\n::\n\n  hubble:\n    export:\n      dynamic:\n        enabled: true\n        config:\n          enabled: true\n          content:\n          - name: \"test001\"\n            filePath: \"/var/run/cilium/hubble/test001.log\"\n            fieldMask: []\n            includeFilters: []\n            excludeFilters: []\n            end: \"2023-10-09T23:59:59-07:00\"\n          - name: \"test002\"\n            filePath: \"/var/run/cilium/hubble/test002.log\"\n            fieldMask: [\"source.namespace\", \"source.pod_name\", \"destination.namespace\", \"destination.pod_name\", \"verdict\"]\n            includeFilters:\n            - source_pod: [\"default/\"]\n              event_type:\n              - type: 1\n            - destination_pod: [\"frontend/webserver-975996d4c-7hhgt\"]\n            excludeFilters: []\n            end: \"2023-10-09T23:59:59-07:00\"\n          - name: \"test003\"\n            filePath: \"/var/run/cilium/hubble/test003.log\"\n            fieldMask: [\"source\", \"destination\",\"verdict\"]\n            includeFilters: []\n            excludeFilters:\n            - destination_pod: [\"ingress/\"]",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/observability/hubble/configuration/export.rst",
  "extracted_at": "2025-09-03T01:13:29.326191Z"
}