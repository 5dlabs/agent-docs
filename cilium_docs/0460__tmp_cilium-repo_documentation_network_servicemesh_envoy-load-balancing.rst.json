{
  "url": "file:///tmp/cilium-repo/Documentation/network/servicemesh/envoy-load-balancing.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _gs_envoy_load_balancing:\n\n***************************************************\nProxy Load Balancing for Kubernetes Services (beta)\n***************************************************\n\nThis guide explains how to configure Proxy Load Balancing for Kubernetes\nservices using Cilium, which is useful for use cases such as gRPC\nload-balancing. Once enabled, the traffic to a Kubernetes service will be\nredirected to a Cilium-managed Envoy proxy for load balancing. This feature\nis independent of the :ref:`gs_ingress` feature.\n\n.. include:: ../../beta.rst\n\nDeploy Test Applications\n========================\n\n.. parsed-literal::\n\n    $ kubectl apply -f \\ |SCM_WEB|\\/examples/kubernetes/servicemesh/envoy/test-application-proxy-loadbalancing.yaml\n\nThe test workloads consist of:\n\n- one client deployment ``client``\n- one service ``echo-service`` with two backend pods.\n\nView information about these pods:\n\n.. code-block:: shell-session\n\n    $ kubectl get pods --show-labels -o wide\n    NAME                              READY   STATUS    RESTARTS   AGE    IP          NODE           NOMINATED NODE   READINESS GATES   LABELS\n    client-7dccb64ff6-t5gc7         1/1     Running   0          39s   10.244.0.125   minikube   <none>           <none>            kind=client,name=client,pod-template-hash=7dccb64ff6\n    echo-service-744b6dd45b-487tn   2/2     Running   0          39s   10.244.0.71    minikube   <none>           <none>            kind=echo,name=echo-service,other=echo,pod-template-hash=744b6dd45b\n    echo-service-744b6dd45b-mdjc2   2/2     Running   0          39s   10.244.0.213   minikube   <none>           <none>            kind=echo,name=echo-service,other=echo,pod-template-hash=744b6dd45b\n\n.. code-block:: shell-session\n\n    $ CLIENT=$(kubectl get pods -l name=client -o jsonpath='{.items[0].metadata.name}')\n\nStart Observing Traffic with Hubble\n===================================\n\nEnable Hubble in your cluster with the step mentioned in :ref:`hubble_setup`.\n\nStart a second terminal, then enable hubble port forwarding and observe\ntraffic for the service ``echo-service``:\n\n.. code-block:: shell-session\n\n    $ kubectl -n kube-system port-forward deployment/hubble-relay 4245:4245 &\n    $ hubble observe --service echo-service -f\n\n\nYou should be able to get a response from both of the backend services\nindividually from ``client``:\n\n.. code-block:: shell-session\n\n    $ kubectl exec -it $CLIENT -- curl -v echo-service:8080/\n\nNotice that Hubble shows all the flows between the client pod and the backend pods\nvia ``echo-service`` service.\n\n::\n\n    Jan 16 04:28:10.690: default/client-7dccb64ff6-t5gc7 (ID:5152) <> default/echo-service:8080 (world) pre-xlate-fwd TRACED (TCP)\n    Jan 16 04:28:10.690: default/echo-service:8080 (world) <> default/client-7dccb64ff6-t5gc7 (ID:5152) post-xlate-rev TRANSLATED (TCP)\n\nAdd Proxy Load Balancing Annotations to the Services\n====================================================\n\nAdding a Layer 7 policy introduces the Envoy proxy into the path for this traffic.\n\n.. code-block:: shell-session\n\n    $ kubectl annotate service echo-service service.cilium.io/lb-l7=enabled\n    service/echo-service annotated\n\nMake a request to a backend service and observe the traffic with Hubble again:\n\n.. code-block:: shell-session\n\n    $ kubectl exec -it $CLIENT -- curl -v echo-service:8080/\n\nThe request is now proxied through the Envoy proxy and then flows to the backend.\n\n::\n\n    Jan 16 04:32:27.737: default/client-7dccb64ff6-t5gc7:56462 (ID:5152) -> default/echo-service:8080 (world) to-proxy FORWARDED (TCP Flags: SYN)\n    Jan 16 04:32:27.737: default/client-7dccb64ff6-t5gc7:56462 (ID:5152) <- default/echo-service:8080 (world) to-endpoint FORWARDED (TCP Flags: SYN, ACK)\n    Jan 16 04:32:27.737: default/client-7dccb64ff6-t5gc7:56462 (ID:5152) -> default/echo-service:8080 (world) to-proxy FORWARDED (TCP Flags: ACK)\n    Jan 16 04:32:27.737: default/client-7dccb64ff6-t5gc7:56462 (ID:5152) -> default/echo-service:8080 (world) to-proxy FORWARDED (TCP Flags: ACK, PSH)\n    Jan 16 04:32:27.739: default/client-7dccb64ff6-t5gc7:56462 (ID:5152) <- default/echo-service:8080 (world) to-endpoint FORWARDED (TCP Flags: ACK, PSH)\n    Jan 16 04:32:27.740: default/client-7dccb64ff6-t5gc7:56462 (ID:5152) -> default/echo-service:8080 (world) to-proxy FORWARDED (TCP Flags: ACK, FIN)\n    Jan 16 04:32:27.740: default/client-7dccb64ff6-t5gc7:56462 (ID:5152) <- default/echo-service:8080 (world) to-endpoint FORWARDED (TCP Flags: ACK, FIN)\n    Jan 16 04:32:27.740: default/client-7dccb64ff6-t5gc7:56462 (ID:5152) -> default/echo-service:8080 (world) to-proxy FORWARDED (TCP Flags: ACK)\n\nSupported Annotations\n=====================\n\n.. list-table::\n   :widths: 40 25 25 25\n   :header-rows: 1\n\n   * - Name\n     - Description\n     - Applicable Values\n     - Default Value\n   * - ``service.cilium.io/lb-l7``\n     - Enable L7 Load balancing for kubernetes service.\n     - ``enabled``, ``disabled``\n     - Defaults to ``disabled``\n   * - ``service.cilium.io/lb-l7-algorithm``\n     - The LB algorithm to be used for services.\n     - ``round_robin``, ``least_request``, ``random``\n     - Defaults to Helm option ``loadBalancer.l7.algorithm`` value.\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/servicemesh/envoy-load-balancing.rst",
  "extracted_at": "2025-09-03T01:13:29.151988Z"
}