{
  "url": "file:///tmp/cilium-repo/Documentation/network/node-ipam.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _node_ipam:\n\n************\nNode IPAM LB\n************\n\nNode IPAM LoadBalancer is a feature inspired by k3s \"ServiceLB\" that allows you\nto \"advertise\" the node's IPs directly inside a Service LoadBalancer. This feature\nis especially useful if you don't control the network you are running on and can't\nuse either the L2 or BGP capabilities of Cilium.\n\nIt works by getting the Node addresses of the selected Nodes and advertising them.\nIt will respect the ``.spec.ipFamilies`` to decide if IPv4 or IPv6 addresses\nshall be used and will use the ``ExternalIP`` addresses if any or the\n``InternalIP`` addresses otherwise.\n\nIf the Service has ``.spec.externalTrafficPolicy`` set to ``Cluster``, Node IPAM\nconsiders all nodes as candidates for selection. Otherwise, if\n``.spec.externalTrafficPolicy`` is set to ``Local``, then Node IPAM considers\nall the Pods selected by the Service (via their EndpointSlices) as candidates.\n\n.. warning::\n    Node IPAM does not work properly if ``.spec.externalTrafficPolicy`` is set\n    to ``Local`` but no EndpointSlice (or dummy EndpointSlice) is linked to\n    the corresponding Service.\n\n    As a result, you **cannot** set ``.spec.externalTrafficPolicy`` to ``Local``\n    with the Cilium implementations for GatewayAPI or Ingress, because Cilium\n    currently uses a dummy Endpoints for the Service LoadBalancer (`see here\n    <https://github.com/cilium/cilium/blob/495f228ad8791c89f0851e0abbad90f09b136f80/install/kubernetes/cilium/templates/cilium-ingress-service.yaml#L58>`__).\n    Only the Cilium implementation is known to be affected by this limitation.\n    Most other implementations are expected to work with this configuration.\n    If they don't, check if the matching EndpointSlices look correct and/or\n    try setting ``.spec.externalTrafficPolicy`` to ``Cluster``.\n\nNode IPAM honors the Node label ``node.kubernetes.io/exclude-from-external-load-balancers``\nand the Node taint ``ToBeDeletedByClusterAutoscaler``. Node IPAM **doesn't**\nconsider a node as a candidate for load balancing if the label\n``node.kubernetes.io/exclude-from-external-load-balancers`` or the taint\n``ToBeDeletedByClusterAutoscaler`` is present.\n\nTo restrict the Nodes that should listen for incoming traffic, add annotation\n``io.cilium.nodeipam/match-node-labels`` to the Service. The value of the\nannotation is a\n`Label Selector <https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors>`__.\n\nEnable and use Node IPAM\n------------------------\n\nTo use this feature your Service must be of type ``LoadBalancer`` and have the\n`loadBalancerClass <https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class>`__\nset to ``io.cilium/node``. You can also allow set ``defaultLBServiceIPAM``\nto ``nodeipam`` to use this feature on a Service that doesn't specify a loadBalancerClass.\n\nCilium's node IPAM is disabled by default.\nTo install Cilium with the node IPAM, run:\n\n.. parsed-literal::\n\n   helm install cilium |CHART_RELEASE| \\\\\n     --namespace kube-system \\\\\n     --set nodeIPAM.enabled=true\n\nTo enable node IPAM on an existing installation, run:\n\n.. parsed-literal::\n\n   helm upgrade cilium |CHART_RELEASE| \\\\\n     --namespace kube-system \\\\\n     --reuse-values \\\\\n     --set nodeIPAM.enabled=true\n   kubectl -n kube-system rollout restart deployment/cilium-operator\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/node-ipam.rst",
  "extracted_at": "2025-09-03T01:13:29.137396Z"
}