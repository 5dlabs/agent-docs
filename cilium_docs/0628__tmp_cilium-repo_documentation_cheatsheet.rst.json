{
  "url": "file:///tmp/cilium-repo/Documentation/cheatsheet.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n******************\nCommand Cheatsheet\n******************\n\nCilium is controlled via an easy command-line interface. This CLI is a single\napplication that takes subcommands that you can find in the command reference\nguide.\n\n.. code-block:: shell-session\n\n    $ cilium\n    CLI for interacting with the local Cilium Agent\n\n    Usage:\n      cilium-dbg [command]\n\n    Available Commands:\n      bpf                      Direct access to local eBPF maps\n      cleanup                  Reset the agent state\n      completion               Output shell completion code for bash\n      config                   Cilium configuration options\n      debuginfo                Request available debugging information from agent\n      endpoint                 Manage endpoints\n      identity                 Manage security identities\n      kvstore                  Direct access to the kvstore\n      monitor                  Monitoring\n      policy                   Manage security policies\n      prefilter                Manage XDP CIDR filters\n      service                  Manage services & loadbalancers\n      status                   Display status of daemon\n      version                  Print version information\n\n    Flags:\n          --config string   config file (default is $HOME/.cilium.yaml)\n      -D, --debug           Enable debug messages\n      -H, --host string     URI to server-side API\n\n    Use \"cilium [command] --help\" for more information about a command.\n\nAll commands and subcommands have the option ``-h`` that will provide information\nabout the options and arguments that the subcommand has. In case of any error in\nthe command, Cilium CLI will return a non-zero status.\n\nCommand utilities:\n==================\n\nJSON Output\n-----------\n\nAll the list commands will return a pretty printed list with the information\nretrieved from Cilium Daemon. If you need something more detailed you can use JSON\noutput, to get the JSON output you can use the global option ``-o json``\n\n.. code-block:: shell-session\n\n    $ cilium-dbg endpoint list -o json\n\nMoreover, Cilium also provides a `JSONPath\n<https://goessner.net/articles/JsonPath/>`_ support, so detailed information can\nbe extracted. JSONPath template reference can be found in `Kubernetes\ndocumentation <https://kubernetes.io/docs/reference/kubectl/jsonpath/>`_\n\n.. code-block:: shell-session\n\n    $ cilium-dbg endpoint list -o jsonpath='{[*].id}'\n    29898 38939 56326\n    $ cilium-dbg endpoint list -o jsonpath='{range [*]}{@.id}{\"=\"}{@.status.policy.spec.policy-enabled}{\"\\n\"}{end}'\n    29898=none\n    38939=none\n    56326=none\n\n\nShell Tab-completion\n--------------------\n\nIf you use bash or zsh, Cilium CLI can provide tab completion for subcommands.\nIf you want to install tab completion, you should run the following command in\nyour terminal.\n\n.. code-block:: shell-session\n\n   $ source <(cilium completion)\n\nIf you want to have Cilium completion always loaded, you can install using the\nfollowing:\n\n.. code-block:: shell-session\n\n    $ echo \"source <(cilium completion)\" >> ~/.bashrc\n\n\nCommand examples:\n=================\n\nBasics\n------\n\nCheck the status of the agent\n\n.. code-block:: shell-session\n\n    $ cilium-dbg status\n    KVStore:                Ok         Etcd: 172.17.0.3:4001\n    ContainerRuntime:       Ok\n    Kubernetes:             Disabled\n    Cilium:                 Ok         OK\n    NodeMonitor:            Listening for events on 2 CPUs with 64x4096 of shared memory\n    Cilium health daemon:   Ok\n    Controller Status:      6/6 healthy\n    Proxy Status:           OK, ip 10.15.28.238, port-range 10000-20000\n    Cluster health:   1/1 reachable   (2018-04-11T07:33:09Z)\n    $\n\nGet a detailed status of the agent:\n\n.. code-block:: shell-session\n\n    $ cilium-dbg status --all-controllers --all-health --all-redirects\n    KVStore:                Ok         Etcd: 172.17.0.3:4001\n    ContainerRuntime:       Ok\n    Kubernetes:             Disabled\n    Cilium:                 Ok         OK\n    NodeMonitor:            Listening for events on 2 CPUs with 64x4096 of shared memory\n    Cilium health daemon:   Ok\n    Controller Status:      6/6 healthy\n      Name                                 Last success   Last error   Count   Message\n      kvstore-lease-keepalive              2m52s ago      never        0       no error\n      ipcache-bpf-garbage-collection       2m50s ago      never        0       no error\n      resolve-identity-29898               2m50s ago      never        0       no error\n      sync-identity-to-k8s-pod (29898)     50s ago        never        0       no error\n      sync-IPv4-identity-mapping (29898)   2m49s ago      never        0       no error\n      sync-IPv6-identity-mapping (29898)   2m49s ago      never        0       no error\n    Proxy Status:   OK, ip 10.15.28.238, port-range 10000-20000\n    Cluster health:         1/1 reachable   (2018-04-11T07:32:09Z)\n      Name                  IP              Reachable   Endpoints reachable\n      runtime (localhost)   10.0.2.15       true        false\n    $\n\nGet the current agent configuration\n\n.. code-block:: shell-session\n\n    cilium-dbg config\n\nPolicy management\n-----------------\n\n\nImporting a Cilium Network Policy\n\n.. code-block:: shell-session\n\n    cilium-dbg policy import my-policy.json\n\n\nGet list of all imported policy rules\n\n.. code-block:: shell-session\n\n    cilium-dbg policy get\n\nRemove all policies\n\n.. code-block:: shell-session\n\n    cilium-dbg policy delete --all\n\n\nMonitoring\n~~~~~~~~~~~\n\n\nMonitor cilium-dbg datapath notifications\n\n.. code-block:: shell-session\n\n    cilium-dbg monitor\n\n\nVerbose output (including debug if enabled)\n\n.. code-block:: shell-session\n\n    cilium-dbg monitor -v\n\nExtra verbose output (including packet dissection)\n\n.. code-block:: shell-session\n\n    cilium-dbg monitor -v -v\n\n\nFilter for only the events related to endpoint\n\n.. code-block:: shell-session\n\n    cilium-dbg monitor --related-to=<id>\n\n\nFilter for only events on layer 7\n\n.. code-block:: shell-session\n\n    cilium-dbg monitor -t L7\n\n\nShow notifications only for dropped packet events\n\n.. code-block:: shell-session\n\n    cilium-dbg monitor --type drop\n\n\nDon't dissect packet payload, display payload in hex information\n\n.. code-block:: shell-session\n\n    cilium-dbg monitor -v -v --hex\n\n\n\nConnectivity\n------------\n\nCheck cluster Connectivity\n\n.. code-block:: shell-session\n\n    cilium-health status\n\nThere is also a `blog post\n<https://cilium.io/blog/2018/2/6/cilium-troubleshooting-cluster-health-monitor/>`_\nrelated to this tool.\n\nEndpoints\n---------\n\nGet list of all local endpoints\n\n.. code-block:: shell-session\n\n    cilium-dbg endpoint list\n\nGet detailed view of endpoint properties and state\n\n.. code-block:: shell-session\n\n    cilium-dbg endpoint get <id>\n\nShow recent endpoint specific log entries\n\n.. code-block:: shell-session\n\n    cilium-dbg endpoint log <id>\n\nEnable debugging output on the cilium-dbg monitor for this endpoint\n\n.. code-block:: shell-session\n\n    cilium-dbg endpoint config <id> Debug=true\n\n\nLoadbalancing\n-------------\n\nGet list of loadbalancer services\n\n.. code-block:: shell-session\n\n    cilium-dbg service list\n\n\nOr you can get the loadbalancer information using bpf list\n\n.. code-block:: shell-session\n\n    cilium-dbg bpf lb list\n\n\neBPF\n----\n\nList node tunneling mapping information\n\n.. code-block:: shell-session\n\n    cilium-dbg bpf tunnel list\n\nChecking logs for verifier issue\n\n.. code-block:: shell-session\n\n    journalctl -u cilium-dbg | grep -B20 -F10 Verifier\n\nList connection tracking entries:\n\n.. code-block:: shell-session\n\n    sudo cilium-dbg bpf ct list global\n\nFlush connection tracking entries:\n\n.. code-block:: shell-session\n\n    sudo cilium-dbg bpf ct flush\n\nKubernetes examples:\n=====================\n\nIf you running Cilium on top of Kubernetes you may also want a way to list all\ncilium endpoints or policies from a single Kubectl commands. Cilium provides all\nthis information to the user by using `Kubernetes Resource Definitions\n<https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/>`_:\n\nPolicies\n---------\n\nIn Kubernetes you can use two kinds of policies, Kubernetes Network Policies or\nCilium Network Policies. Both can be retrieved from the ``kubectl`` command:\n\n.. code-block:: shell-session\n   :name: Kubernetes Network Policies\n   :caption: Kubernetes Network Policies\n\n    kubectl get netpol\n\n.. code-block:: shell-session\n   :name: Kubernetes Cilium Policies\n   :caption: Kubernetes Cilium Policies\n\n    $ kubectl get cnp\n    NAME      AGE\n    rule1     3m\n    $ kubectl get cnp rule1\n    NAME      AGE\n    rule1     3m\n    $ kubectl get cnp rule1 -o json\n\n\nEndpoints\n----------\n\nTo retrieve a list of all endpoints managed by cilium, ``Cilium Endpoint``\nresource can be used.\n\n.. code-block:: shell-session\n\n    $ kubectl get cep\n    NAME                AGE\n    34e299f0-b25c2fef   41s\n    34e299f0-dd86986c   42s\n    4d088f48-83e4f98d   2m\n    4d088f48-d04ab55f   2m\n    5c6211b5-9217a4d1   1m\n    5c6211b5-dccc3d24   1m\n    700e0976-6cb50b02   3m\n    700e0976-afd3a30c   3m\n    78092a35-4874ed16   1m\n    78092a35-4b08b92b   1m\n    9b74f61f-14571299   7s\n    9b74f61f-f9a96f4a   7s\n\n    $ kubectl get cep 700e0976-6cb50b02 -o json\n\n    $ kubectl get cep -o jsonpath='{range .items[*]}{@.status.id}{\"=\"}{@.status.status.policy.spec.policy-enabled}{\"\\n\"}{end}'\n    30391=ingress\n    5766=ingress\n    51796=none\n    40355=none\n\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/cheatsheet.rst",
  "extracted_at": "2025-09-03T01:13:29.362463Z"
}