{
  "url": "file:///tmp/cilium-repo/Documentation/network/servicemesh/gateway-api/gamma.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _gs_gamma:\n\n*******************\nGAMMA Support\n*******************\n\nWhat is GAMMA?\n####################\n\n(From the `GAMMA page <https://gateway-api.sigs.k8s.io/mesh/gamma/>`__\non the Gateway API site):\n\nThe GAMMA initiative is a dedicated workstream within the Gateway API\nsubproject, shepherded by the GAMMA leads, rather than being a separate\nsubproject. GAMMAâ€™s goal is to define how Gateway API can be used to configure\na service mesh, with the intention of making minimal changes to Gateway API and\nalways preserving the role-oriented nature of Gateway API. Additionally, GAMMA\nstrives to advocate for consistency between implementations of Gateway API by\nservice mesh projects, regardless of their technology stack or proxy.\n\nIn Gateway API v1.0, GAMMA supports adding extra HTTP routing to Services by\nbinding a HTTPRoute to a Service as a parent (as opposed to the north/south\nGateway API usage of binding a HTTPRoute to a Gateway as a parent).\n\nThis allows Cilium to intercept layer 7 traffic flowing to a parent Service and\nroute the traffic through the per-node Envoy proxy. Because of this, GAMMA\nperforms the same function as Cilium's\n:ref:`Layer 7 traffic management <gs_l7_traffic_management>`, without the user\nneeding to know anything about configuring Envoy directly.\n\nTypes of GAMMA configuration\n############################\n\nIn GAMMA, there are two types of HTTPRoutes: \"producer\" and \"consumer\" Routes.\n\n\"Producer\" routes are HTTPRoutes that bind to a Service that lives in the same\nnamespace and have the same owner as the owner of the Service whose traffic is\nbeing managed. So, for an application ``foo``, in the namespace ``foo``, with a\nService called ``foo-svc``, the owner of ``foo`` would create a HTTPRoute in the ``foo``\nnamespace that lists ``foo-svc`` as its parent. The routing then affects all traffic\ncoming to the ``foo`` service from the whole cluster, and is controlled by the\n\"producer\" of the ``foo`` service - its owner.\n\n\"Consumer\" routes are HTTPRoutes that bind to a Service that lives in a different\nnamespace than that Service. These Routes are called \"consumer\" Routes because\nthey are owned by the _consumer_ of the Service they bind to. For the ``foo`` Service\nabove, a Route in the ``bar`` namespace, to be used by the app in that namespace,\nthat binds to the ``foo-svc`` Service in the ``foo`` namespace is a _consumer_ Service\nbecause it changes the routing for the ``bar`` service, which _consumes_ the ``foo``\nService.\n\nCilium currently supports only \"Producer\" Routes, and so HTTPRoutes must be\nin the same namespace as the Service that they are binding to.\n\nCilium GAMMA Support\n##########################\n\nCilium supports GAMMA v1.0.0 for the following resources:  \n\n- `HTTPRoute <https://gateway-api.sigs.k8s.io/api-types/httproute/>`_  \n- `ReferenceGrant <https://gateway-api.sigs.k8s.io/api-types/referencegrant/>`_  \n\nCilium support is limited to passing the Core conformance  \ntests and two out of three Extended Mesh tests. Note that GAMMA is itself  \nexperimental as at Gateway API v1.0.0.  \n\nCilium currently does not support \"consumer\" HTTPRoutes, and so does not  \nsupport the ``MeshConsumerRoute`` feature of the Mesh conformance profile.  \n\n.. include:: installation.rst\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/servicemesh/gateway-api/gamma.rst",
  "extracted_at": "2025-09-03T01:13:29.167147Z"
}