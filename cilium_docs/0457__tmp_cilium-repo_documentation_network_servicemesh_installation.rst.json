{
  "url": "file:///tmp/cilium-repo/Documentation/network/servicemesh/installation.rst",
  "content": "Installation\n############\n\n.. tabs::\n\n    .. group-tab:: Helm\n\n        Cilium Ingress Controller can be enabled with helm flag ``ingressController.enabled``\n        set as true. Please refer to :ref:`k8s_install_helm` for a fresh installation.\n\n        .. parsed-literal::\n\n            $ helm upgrade cilium |CHART_RELEASE| \\\\\n                --namespace kube-system \\\\\n                --reuse-values \\\\\n                --set ingressController.enabled=true \\\\\n                --set ingressController.loadbalancerMode=dedicated\n            $ kubectl -n kube-system rollout restart deployment/cilium-operator\n            $ kubectl -n kube-system rollout restart ds/cilium\n\n        Cilium can become the default ingress controller by setting the\n        ``--set ingressController.default=true`` flag. This will create ingress entries even when the ``ingressClass`` \n        is not set.\n\n        If you only want to use envoy traffic management feature without Ingress support, you should only\n        enable ``--enable-envoy-config`` flag.\n\n        .. parsed-literal::\n\n            $ helm upgrade cilium |CHART_RELEASE| \\\\\n                --namespace kube-system \\\\\n                --reuse-values \\\\\n                --set envoyConfig.enabled=true\n            $ kubectl -n kube-system rollout restart deployment/cilium-operator\n            $ kubectl -n kube-system rollout restart ds/cilium\n\n        Additionally, the proxy load-balancing feature can be configured with the ``loadBalancer.l7.backend=envoy`` flag.\n\n        .. parsed-literal::\n            $ helm upgrade cilium |CHART_RELEASE| \\\\\n                --namespace kube-system \\\\\n                --reuse-values \\\\\n                --set loadBalancer.l7.backend=envoy\n            $ kubectl -n kube-system rollout restart deployment/cilium-operator\n            $ kubectl -n kube-system rollout restart ds/cilium\n\n        Next you can check the status of the Cilium agent and operator:\n\n        .. code-block:: shell-session\n\n            $ cilium status\n\n        .. include:: ../../installation/cli-download.rst\n\n    .. group-tab:: Cilium CLI\n\n        .. include:: ../../installation/cli-download.rst\n\n        Cilium Ingress Controller can be enabled with the below command\n\n        .. parsed-literal::\n\n            $ cilium install |CHART_VERSION| \\\n                --set kubeProxyReplacement=true \\\n                --set ingressController.enabled=true \\\n                --set ingressController.loadbalancerMode=dedicated\n\n        Cilium can become the default ingress controller by setting the\n        ``--set ingressController.default=true`` flag. This will create ingress entries even when the ``ingressClass`` \n        is not set.\n\n        If you only want to use envoy traffic management feature without Ingress support, you should only\n        enable ``--enable-envoy-config`` flag.\n\n        .. parsed-literal::\n\n            $ cilium install |CHART_VERSION| \\\n                --set kubeProxyReplacement=true \\\n                --set envoyConfig.enabled=true\n\n        Additionally, the proxy load-balancing feature can be configured with the ``loadBalancer.l7.backend=envoy`` flag.\n\n        .. parsed-literal::\n\n            $ cilium install |CHART_VERSION| \\\n                --set kubeProxyReplacement=true \\\n                --set envoyConfig.enabled=true \\\n                --set loadBalancer.l7.backend=envoy\n\n        Next you can check the status of the Cilium agent and operator:\n\n        .. code-block:: shell-session\n\n            $ cilium status\n\nIt is also recommended that you :ref:`install Hubble CLI<hubble_cli_install>`\nwhich will be used used to observe the traffic in later steps.\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/servicemesh/installation.rst",
  "extracted_at": "2025-09-03T01:13:29.150124Z"
}