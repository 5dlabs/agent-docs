{
  "url": "file:///tmp/cilium-repo/Documentation/observability/visibility.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _proxy_visibility:\n\n***************************\nLayer 7 Protocol Visibility\n***************************\n\n.. note::\n\n    This feature requires enabling L7 Proxy support.\n\nWhile :ref:`monitor` provides introspection into datapath state, by default, it\nwill only provide visibility into L3/L4 packet events. If you want L7\nprotocol visibility, you can use L7 Cilium Network Policies (see :ref:`l7_policy`).\n\n\nTo enable visibility for L7 traffic, create a ``CiliumNetworkPolicy`` that specifies\nL7 rules. Traffic flows matching a L7 rule in a ``CiliumNetworkPolicy`` will become\nvisible to Cilium and, thus, can be exposed to the end user. It's important to\nremember that L7 network policies not only enables visibility but also restrict\nwhat traffic is allowed to flow in and out of a Pod.\n\n\nThe following example enables visibility for DNS (TCP/UDP/53) and HTTP\n(ports TCP/80 and TCP/8080) traffic within the ``default`` namespace by\nspecifying two L7 rules -- one for DNS and one for HTTP. It also restricts\negress communication and drops anything that is not matched. L7 matching\nconditions on the rules have been omitted or wildcarded, which will\npermit all requests that match the L4 section of each rule:\n\n\n.. code-block:: yaml\n\n      apiVersion: \"cilium.io/v2\"\n      kind: CiliumNetworkPolicy\n      metadata:\n        name: \"l7-visibility\"\n      spec:\n        endpointSelector:\n          matchLabels:\n            \"k8s:io.kubernetes.pod.namespace\": default\n        egress:\n        - toPorts:\n          - ports:\n            - port: \"53\"\n              protocol: ANY\n            rules:\n              dns:\n              - matchPattern: \"*\"\n        - toEndpoints:\n          - matchLabels:\n              \"k8s:io.kubernetes.pod.namespace\": default\n          toPorts:\n          - ports:\n            - port: \"80\"\n              protocol: TCP\n            - port: \"8080\"\n              protocol: TCP\n            rules:\n              http: [{}]\n\nBased on the above policy, Cilium will pick up all TCP/UDP/53, TCP/80 and TCP/8080\negress traffic from Pods in the ``default`` namespace and redirect it to the\nproxy (see :ref:`proxy_injection`) such that the output of ``cilium monitor`` or\n``hubble observe`` shows the L7 flow details.\nBelow is the example of running ``hubble observe -f -t l7 -o compact`` command:\n\n::\n\n    default/testapp-5b9cc645cb-4slbs:45240 (ID:26450) -> kube-system/coredns-787d4945fb-bdmdq:53 (ID:9313) dns-request proxy FORWARDED (DNS Query web.default.svc.cluster.local. A)\n    default/testapp-5b9cc645cb-4slbs:45240 (ID:26450) <- kube-system/coredns-787d4945fb-bdmdq:53 (ID:9313) dns-response proxy FORWARDED (DNS Answer \"10.96.118.37\" TTL: 30 (Proxy web.default.svc.cluster.local. A))\n    default/testapp-5b9cc645cb-4slbs:33044 (ID:26450) -> default/echo-594485b8dc-fp57l:8080 (ID:32531) http-request FORWARDED (HTTP/1.1 GET http://web/)\n    default/testapp-5b9cc645cb-4slbs:33044 (ID:26450) <- default/echo-594485b8dc-fp57l:8080 (ID:32531) http-response FORWARDED (HTTP/1.1 200 4ms (GET http://web/))\n\n\n\nSecurity Implications\n---------------------\n\nMonitoring Layer 7 traffic involves security considerations for handling\npotentially sensitive information, such as usernames, passwords, query\nparameters, API keys, and others.\n\n.. warning::\n\n   By default, Hubble does not redact potentially sensitive information\n   present in `Layer 7 Hubble Flows <https://github.com/cilium/cilium/tree/master/api/v1/flow#flow-Layer7>`_.\n\nTo harden security, Cilium provides the ``--hubble-redact-enabled`` option which\nenables Hubble to handle sensitive information present in Layer 7 flows.\nMore specifically, it offers the following features for supported Layer 7 protocols:\n\n* For HTTP: redacting URL query (GET) parameters (``--hubble-redact-http-urlquery``)\n* For HTTP: redacting URL user info (for example, password used in basic auth) (``--hubble-redact-http-userinfo``)\n* For Kafka: redacting API key (``--hubble-redact-kafka-apikey``)\n* For HTTP headers: redacting all headers except those defined in the ``--hubble-redact-http-headers-allow`` list or redacting only the headers defined in the ``--hubble-redact-http-headers-deny`` list\n\nFor more information on configuring Cilium, see :ref:`Cilium Configuration <configuration>`.\n\nLimitations\n-----------\n\n* DNS visibility is available on egress only.\n* L7 policies for SNATed IPv6 traffic (e.g., pod-to-world) require a kernel with the `fix <https://patchwork.kernel.org/project/netdevbpf/patch/20250318161516.3791383-1-maxim@isovalent.com/>`__ applied. The stable kernel versions with the fix are 6.14.1, 6.12.22, 6.6.86, 6.1.133, 5.15.180, 5.10.236. See :gh-issue:`37932` for the reference.\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/observability/visibility.rst",
  "extracted_at": "2025-09-03T01:13:29.329290Z"
}