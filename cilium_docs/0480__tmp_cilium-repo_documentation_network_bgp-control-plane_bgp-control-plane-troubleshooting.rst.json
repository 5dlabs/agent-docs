{
  "url": "file:///tmp/cilium-repo/Documentation/network/bgp-control-plane/bgp-control-plane-troubleshooting.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _bgp_control_plane_troubeshooting:\n\nBGP Control Plane Troubleshooting Guide\n=======================================\n\nThis document enumerates typical troubles and their solutions when configuring the BGP\nControl Plane.\n\nEven though Cilium BGP resources are applied, BGP peering is not established\n----------------------------------------------------------------------------\n\nCiliumBGPPeeringPolicy\n~~~~~~~~~~~~~~~~~~~~~~\n\nCheck if the target Node is correctly selected by the\n``nodeSelector`` of the ``CiliumBGPPeeringPolicy``. The easiest way to do\nthis is to use the ``cilium bgp peers`` command:\n\n.. code:: bash\n\n   $ cilium bgp peers\n   Node                              Local AS   Peer AS   Peer Address   Session State   Uptime   Family         Received   Advertised\n   node0                             65001      65000     10.0.1.1       active          0s       ipv4/unicast   0          0\n                                                                                                  ipv6/unicast   0          0\n\nIf the Node is selected correctly, even if the session is not\nestablished, the name of the Node and the BGP state will be displayed.\nIf nothing is displayed, there may be an error in the ``nodeSelector``.\nIf the Node is correctly selected, but the state does not become\nestablished, check the settings of both Cilium and the target peer.\n\nCiliumBGPClusterConfig\n~~~~~~~~~~~~~~~~~~~~~~\n\nCheck that the ``CiliumBGPNodeConfig`` resource is created for a given Node. If\n``CiliumBGPNodeConfig`` resource is missing, check the Cilium operator logs for\nany errors.\n\nLike ``CiliumBGPPeeringPolicy``, check ``nodeSelector`` configuration and\npeering configuration if the BGP state is not ``established``.\n\nAnother possibility is that the ``nodeSelector`` in the\n``CiliumBGPClusterConfig`` doesn't match any nodes due to the missing labels or\nmisconfigured selector. In this case, the following status condition will be\nset:\n\n.. code:: yaml\n\n  status:\n    conditions:\n    - lastTransitionTime: \"2024-10-26T06:15:44Z\"\n      message: No node matches spec.nodeSelector\n      observedGeneration: 2\n      reason: NoMatchingNode\n      status: \"True\"\n      type: cilium.io/NoMatchingNode\n\nNode is selected by CiliumBGPPeeringPolicy or CiliumBGPClusterConfig, but BGP peer is not established\n-----------------------------------------------------------------------------------------------------\n\nYou can identify the cause by referring to the logs of your peer router\nor Cilium. The errors logged by the BGP Control Plane have a field\nnamed ``subsys=bgp-control-plane``, which can be used to filter\nlogs for errors specific to BGP Control Plane:\n\n.. code:: bash\n\n   $ kubectl -n <your namespace> <cilium pod running on the target node> logs | grep bgp-control-plane\n   ...\n   level=warning msg=\"sent notification\" Data=\"as number mismatch expected 65003, received 65000\" Key=10.0.1.1 Topic=Peer asn=65001 component=gobgp.BgpServerInstance subsys=bgp-control-plane\n\nIn the example above, it can be seen that the BGP session was not\nestablished because there was a mismatch between the configured\n``peerASN`` and the actual ASN of the peer.\n\nThere could be various reasons why BGP peering is not established, such as a\nmismatch in BGP capability or an incorrect Peer IP address. BGP layer errors\nare likely to appear in the logs, but there are cases where low-level errors,\nsuch as lack of connectivity to the Peer IP or when an eBGP peer is more than 1\nhop away, may not be reflected in the logs. In such cases, using tools like\n``WireShark`` or ``tcpdump`` can be effective.\n\nThe existing BGP session went down immediately after applying the new CiliumBGPPeeringPolicy\n--------------------------------------------------------------------------------------------\n\nA node may be selected by multiple ``CiliumBGPPeeringPolicy`` objects based on\nthe configured ``nodeSelector`` fields. If multiple policies are applied, the\nBGP control plane will clear all pre-existing state configured on the node.\nFirst, rollback the last applied ``CiliumBGPPeeringPolicy`` and check the logs\nof the node where the BGP session went down. If multiple policies were applied,\nthere should be logs indicating this:\n\n.. code:: bash\n\n   level=error msg=\"Policy selection failed\" component=Controller.Reconcile error=\"more then one CiliumBGPPeeringPolicy applies to this node, please ensure only a single Policy matches this node's labels\" subsys=bgp-control-plane\n\nIf you find logs like this, please review the configuration of ``nodeSelector``\nand make sure that each node only has one associated\n``CiliumBGPPeeringPolicy``.\n\nAdditional new CiliumBGPClusterConfig is not working\n----------------------------------------------------\n\nLike the ``CiliumBGPPeeringPolicy``, multiple ``CiliumBGPClusterConfig``\ncan select the same node based on the ``nodeSelector`` field. If this is the case,\nthe Cilium operator will reject any additional ``CiliumBGPClusterConfig`` from creating\nthe ``CiliumBGPNodeConfig`` resource. Following status condition will be set on the\n``CiliumBGPClusterConfig`` to indicate this:\n\n.. code:: yaml\n\n  status:\n    conditions:\n    - lastTransitionTime: \"2024-10-26T06:18:04Z\"\n      message: 'Selecting the same node(s) with ClusterConfig(s): [cilium-bgp-0]'\n      observedGeneration: 1\n      reason: ConflictingClusterConfigs\n      status: \"True\"\n      type: cilium.io/ConflictingClusterConfig\n\nCiliumBGPPeerConfig doesn't take effect\n---------------------------------------\n\nIf the ``CiliumBGPPeerConfig`` is not taking effect, it may be because there is a\nmisconfiguration (such as typo) in the ``peerConfigRef`` and the reference is not\neffective. Following status condition will be set if the referenced ``CiliumBGPPeerConfig``\nis not found:\n\n.. code:: yaml\n\n  status:\n    conditions:\n    - lastTransitionTime: \"2024-10-26T06:15:44Z\"\n      message: 'Referenced CiliumBGPPeerConfig(s) are missing: [peer-cofnig0]'\n      observedGeneration: 1\n      reason: MissingPeerConfigs\n      status: \"True\"\n      type: cilium.io/MissingPeerConfigs\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/network/bgp-control-plane/bgp-control-plane-troubleshooting.rst",
  "extracted_at": "2025-09-03T01:13:29.173574Z"
}