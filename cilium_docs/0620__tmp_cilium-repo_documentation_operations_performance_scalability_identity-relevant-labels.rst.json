{
  "url": "file:///tmp/cilium-repo/Documentation/operations/performance/scalability/identity-relevant-labels.rst",
  "content": ".. only:: not (epub or latex or html)\n\n    WARNING: You are looking at unreleased Cilium documentation.\n    Please use the official rendered version released here:\n    https://docs.cilium.io\n\n.. _identity-relevant-labels:\n\n*********************************\nLimiting Identity-Relevant Labels\n*********************************\n\nWe recommend that operators with larger environments limit the set of\nidentity-relevant labels to avoid frequent creation of new security identities.\nMany Kubernetes labels are not useful for policy enforcement or visibility. A\nfew good examples of such labels include timestamps or hashes. These labels,\nwhen included in evaluation, cause Cilium to generate a unique identity for each\npod instead of a single identity for all of the pods that comprise a service or\napplication.\n\nBy default, Cilium considers all labels to be relevant for identities, with the\nfollowing exceptions:\n\n=================================================== =========================================================\nLabel                                               Description\n--------------------------------------------------- ---------------------------------------------------------\n``!io\\.kubernetes``                                 Ignore all ``io.kubernetes`` labels\n``!kubernetes\\.io``                                 Ignore all other ``kubernetes.io`` labels\n``!statefulset\\.kubernetes\\.io/pod-name``           Ignore ``statefulset.kubernetes.io/pod-name`` label\n``!apps\\.kubernetes\\.io/pod-index``                 Ignore ``apps.kubernetes.io/pod-index`` label\n``!batch\\.kubernetes\\.io/job-completion-index``     Ignore ``batch.kubernetes.io/job-completion-index`` label\n``!batch\\.kubernetes\\.io/controller-uid``           Ignore ``batch.kubernetes.io/controller-uid`` label\n``!beta\\.kubernetes\\.io``                           Ignore all ``beta.kubernetes.io`` labels\n``!k8s\\.io``                                        Ignore all ``k8s.io`` labels\n``!pod-template-generation``                        Ignore all ``pod-template-generation`` labels\n``!pod-template-hash``                              Ignore all ``pod-template-hash`` labels\n``!controller-revision-hash``                       Ignore all ``controller-revision-hash`` labels\n``!annotation.*``                                   Ignore all ``annotation`` labels\n``!controller-uid``                                 Ignore all ``controller-uid`` labels\n``!etcd_node``                                      Ignore all ``etcd_node`` labels\n=================================================== =========================================================\n\nThe above label patterns are all *exclusive label patterns*, that is to say\nthey define which label keys should be ignored. These are identified by the\npresence of the ``!`` character.\n\nLabel configurations that do not contain the ``!`` character are *inclusive\nlabel patterns*. Once at least one inclusive label pattern is added, only\nlabels that match the inclusive label configuration may be considered relevant\nfor identities. Additionally, when at least one inclusive label pattern is\nconfigured, the following inclusive label patterns are automatically added to\nthe configuration:\n\n=================================================== =========================================================\nLabel                                               Description\n--------------------------------------------------- ---------------------------------------------------------\n``reserved:.*``                                     Include all ``reserved:`` labels\n``io\\.kubernetes\\.pod\\.namespace``                  Include all ``io.kubernetes.pod.namespace`` labels\n``io\\.cilium\\.k8s\\.namespace\\.labels``              Include all ``io.cilium.k8s.namespace.labels`` labels\n``io\\.cilium\\.k8s\\.policy\\.cluster``                Include all ``io.cilium.k8s.policy.cluster`` labels\n``io\\.cilium\\.k8s\\.policy\\.serviceaccount``         Include all ``io.cilium.k8s.policy.serviceaccount`` labels\n``app\\.kubernetes\\.io``                             Include all ``app.kubernetes.io`` labels\n=================================================== =========================================================\n\n\n\nConfiguring Identity-Relevant Labels\n------------------------------------\n\nTo limit the labels used for evaluating Cilium identities, edit the Cilium\nConfigMap object using ``kubectl edit cm -n kube-system cilium-config`` and\ninsert a line to define the label patterns to include or exclude. Alternatively,\nthis attribute can also be set via helm option ``--set labels=<values>``.\n\n.. code-block:: yaml\n\n    apiVersion: v1\n    data:\n    ...\n      kube-proxy-replacement: \"true\"\n      labels:  \"io\\\\.kubernetes\\\\.pod\\\\.namespace k8s-app app name\"\n      enable-ipv4-masquerade: \"true\"\n      monitor-aggregation: medium\n    ...\n\n.. note:: The double backslash in ``\\\\.`` is required to escape the slash in\n          the YAML string so that the regular expression contains ``\\.``.\n\nLabel patterns are regular expressions that are implicitly anchored at the\nstart of the label. For example ``example\\.com`` will match labels that start\nwith ``example.com``, whereas ``.*example\\.com`` will match labels that contain\n``example.com`` anywhere. Be sure to escape periods in domain names to avoid\nthe pattern matching too broadly and therefore including or excluding too many\nlabels.\n\nThe label patterns are using regular expressions. Therefore, using  ``kind$``\nor ``^kind$`` can exactly match the label key ``kind``, not just the prefix.\n\nUpon defining a custom list of label patterns in the ConfigMap, Cilium adds the\nprovided list of label patterns to the default list of label patterns. After\nsaving the ConfigMap, if the Operator is managing identities (:ref:`IdentityManagementMode`),\nrestart both the Cilium Operators and Agents to pickup the new label pattern setting. If the Agent\nis managing identities, restart the Cilium Agents to pickup the new label pattern.\n\n.. code-block:: shell-session\n\n    kubectl rollout restart -n kube-system ds/cilium\n\n.. note:: Configuring Cilium with label patterns via ``labels`` Helm value does\n          **not** override the default set of label patterns. That is to say,\n          you can consider this configuration to append a list of label\n          configurations to the defaults listed above.\n\n          If you wish to configure this setting in a declarative way including\n          the exact set of label prefixes to be considered for determining\n          workload security identities, you should instead configure the\n          ``label-prefix-file`` configuration flag.\n\nExisting identities will not change as a result of this new configuration. To\napply the new label pattern setting to existing identities, restart the\ncorresponding Cilium pod on the node where the workload is running. Upon\nrestart, new identities will be created. The old identities will be garbage\ncollected by the Cilium Operator once they are no longer used by any Cilium\nendpoints.\n\nWhen specifying multiple label patterns to evaluate, provide the list of labels\nas a space-separated string.\n\nIncluding Labels\n----------------\n\nLabels can be defined as a list of labels to include. Only the labels specified\nand the default inclusive labels will be used to evaluate Cilium identities:\n\n.. code-block:: yaml\n\n    labels: \"io\\\\.kubernetes\\\\.pod\\\\.namespace k8s-app app name kind$ other$\"\n\nThe above configuration would only include the following label keys when\nevaluating Cilium identities:\n\n- k8s-app\n- app\n- name\n- kind\n- other\n- reserved:.*\n- io\\.kubernetes\\.pod\\.namespace\n- io\\.cilium\\.k8s.namespace\\.labels\n- io\\.cilium\\.k8s\\.policy\\.cluster\n- io\\.cilium\\.k8s\\.policy\\.serviceaccount\n- app\\.kubernetes\\.io\n\nNote that ``io.kubernetes.pod.namespace`` is already included in default\nlabel ``io.kubernetes.pod.namespace``.\n\nLabels with the same prefix as defined in the configuration will also be\nconsidered. This lists some examples of label keys that would also be evaluated\nfor Cilium identities:\n\n- k8s-app-team\n- app-production\n- name-defined\n\nBecause we have ``$`` in label key ``kind$`` and ``other$``. Only label keys using\nexactly ``kind`` and ``other`` will be evaluated for Cilium.\n\nWhen a single inclusive label is added to the filter, all labels not defined\nin the default list will be excluded. For example, pods running with the\nsecurity labels ``team=team-1, env=prod`` will have the label ``env=prod``\nignored as soon Cilium is started with the filter ``team``.\n\nExcluding Labels\n----------------\n\nLabel patterns can also be specified as a list of exclusions. Exclude labels\nby placing an exclamation mark after colon separating the prefix and pattern.\nWhen defined as a list of exclusions, Cilium will include the set of default\nlabels, but will exclude any matches in the provided list when evaluating\nCilium identities:\n\n.. code-block:: yaml\n\n    labels: \"!controller-uid !job-name\"\n\nThe provided example would cause Cilium to exclude any of the following label\nmatches:\n\n- controller-uid\n- job-name\n",
  "item_type": "unknown",
  "module_path": "/tmp/cilium-repo/Documentation/operations/performance/scalability/identity-relevant-labels.rst",
  "extracted_at": "2025-09-03T01:13:29.359412Z"
}