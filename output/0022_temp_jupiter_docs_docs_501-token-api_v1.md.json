{
  "url": "file://temp_jupiter_docs/docs/501-token-api/v1.md",
  "content": "sidebar_label: \"V1 (Deprecated)\"\ndescription: \"Use the Jupiter Token API for all tokens tradable or tagged via Jupiter.\"\ntitle: \"Token API V1 (Deprecated)\" \n\n     V1 (Deprecated) \n     \n\n :::danger DEPRECATED\n Token API V1  will be/is deprecated by 1 August 2025. \n Please migrate to  Token API V2  which consists of breaking changes.\n::: \n In this guide, we will be going through a few examples of what Token API endpoints you can call to get the information you need. \n :::note\nBase URL:  https://lite-api.jup.ag/tokens/v1 \n For higher rate limits,  refer to the API Key Setup doc .\n::: \n \n Get Token Information \n Using this endpoint, you can get the token information of the specific mint address. In the following example, we are looking at getting the token information of the JUP token. \n :::tip Helpful Information\nIn the response, you can see that we have identified the  tags ,  freeze_authority  and  permanent_delegate  to help you or your users make informed decisions.\n::: \n const tokenInfoResponse = await (\n    await fetch('https://lite-api.jup.ag/tokens/v1/token/JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN')\n).json();\n\nconsole.log(tokenInfoResponse);\n \n From the above example, you should see this response. \n {\n    address: 'JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN',\n    name: 'Jupiter',\n    symbol: 'JUP',\n    decimals: 6,\n    logoURI: 'https://static.jup.ag/jup/icon.png',\n    tags: [ 'verified', 'strict', 'community', 'birdeye-trending' ],\n    daily_volume: 79535977.0513354,\n    created_at: '2024-04-26T10:56:58.893768Z',\n    freeze_authority: null,\n    mint_authority: null,\n    permanent_delegate: null,\n    minted_at: '2024-01-25T08:54:23Z',\n    extensions: { coingeckoId: 'jupiter-exchange-solana' }\n}\n \n \n Get Tokens In Market \n Using this endpoint, you can get a list of token mints that belong to a market/pool address. In the following example, we use a  Meteora SOL-USDC market . \n const marketTokensResponse = await (\n    await fetch('https://lite-api.jup.ag/tokens/v1/market/BVRbyLjjfSBcoyiYFuxbgKYnWuiFaF9CSXEa5vdSZ9Hh/mints')\n).json();\n\nconsole.log(marketTokensResponse);\n \n From the above example, you should see this response. \n [\n    'So11111111111111111111111111111111111111112',\n    'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\n]\n \n \n Get All Tradable Tokens \n Using this endpoint, you can get a list of all token mints that are tradable on Jupiter. \n \n A new token (before market liquidity checks) \n Or tokens that has past the market liquidity checks \n These tokens should return a quote from the  /quote  endpoint and is able to swap. \n \n const allTradableResponse = await (\n    await fetch('https://lite-api.jup.ag/tokens/v1/mints/tradable')\n).json();\n\nconsole.log(allTradableResponse);\n \n From the above example, you should see this response. \n [\n    ...\n\n    'So11111111111111111111111111111111111111112',\n    'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\n    'jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v',\n    'JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN',\n    '27G8MtK7VtTcCHkpASjSDdkWWYfoqT6ggEuKidVJidD4',\n\n    ...\n]\n \n \n Get Tagged Tokens \n Using this endpoint, you can get a list of token mints (with information) that are tagged according to the tag you pass in. In the following example, we use the  lst  tag. \n :::tip\nA list of useful tags are: \n Token List Name Description \n verified A list of verified tokens, consisting of community-verified tokens via  catdetlist.jup.ag  and the previous standard of Jupiter Strict. \n lst A list of liquid staked tokens, maintained with Sanctum. \n token-2022 A list of all token-2022 tokens. \n \n You can pass in multiple tags using a comma separated list, refer to the API Reference for more details.\n::: \n const lstTaggedResponse = await (\n    await fetch('https://lite-api.jup.ag/tokens/v1/tagged/lst')\n).json();\n\nconsole.log(lstTaggedResponse);\n \n From the above example, you should see this response. \n ...\n\n{\n    address: 'jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v',\n    name: 'Jupiter Staked SOL',\n    symbol: 'JupSOL',\n    decimals: 9,\n    logoURI: 'https://static.jup.ag/jupSOL/icon.png',\n    tags: [ 'verified', 'community', 'strict', 'lst' ],\n    daily_volume: 24017778.687489692,\n    created_at: '2024-04-26T10:57:45.759228Z',\n    freeze_authority: null,\n    mint_authority: 'EMjuABxELpYWYEwjkKmQKBNCwdaFAy4QYAs6W9bDQDNw',\n    permanent_delegate: null,\n    minted_at: '2024-03-25T09:28:04Z',\n    extensions: { coingeckoId: 'jupiter-staked-sol' }\n},\n\n...\n \n \n Get New Tokens \n Using this endpoint, you can get a list of token mints (with information)  sorted by  created_at  their timestamps . \n :::tip Paginate Large Response\nThe  /new  endpoint will return a large sized payload as response, you can utilize the  limit  and  offset  query parameters to help paginate the responses. \n \n limit : Refers to how many counts of data to be in the output. \n offset : Refers to how many counts of data to offset into the result set.\n \n Used in conjunction with  limit  to page through the data.\n::: \n \n \n \n const newTokensReponse = await (\n    await fetch('https://lite-api.jup.ag/tokens/v1/new')\n).json();\n\nconsole.log(newTokensReponse);\n \n From the above example, you should see this response. \n {\n    mint: 'penguin',\n    created_at: '1733481083',\n    metadata_updated_at: 1733481087,\n    name: 'cool penguin',\n    symbol: 'penguin',\n    decimals: 6,\n    logo_uri: 'https://jup.ag',\n    known_markets: [ 'market' ],\n    mint_authority: null,\n    freeze_authority: null\n},\n{\n    mint: 'cat',\n    created_at: '1733481083',\n    metadata_updated_at: 1733481087,\n    name: 'cat moon',\n    symbol: 'cat',\n    decimals: 6,\n    logo_uri: 'https://jup.ag',\n    known_markets: [ 'market' ],\n    mint_authority: null,\n    freeze_authority: null\n},\n \n \n Get All Tokens \n Using the endpoint, you can simply query with the  all  resource to get all tokens that Jupiter has indexed through our infrastructure. \n :::warning\nDo note that calling this endpoint's resource will return  a large payload of 300+MB , which would introduce some latency in the call. Please use carefully and intentionally, else utilize the other endpoints. \n This endpoint does not support  limit  or  offset .\n::: \n :::tip\nTo index your own tokens, you can use RPC APIs such as the  Metaplex Digital Asset Standard (DAS) . Major RPC providers like  Helius  and  Triton One  offer access to this API.\n::: \n const allResponse = await (\n  await fetch(\"https://lite-api.jup.ag/tokens/v1/all\")\n).json();\n\nconsole.log(allResponse);\n \n From the above example, you should see this response. \n ...\n\n{\n    address: 'So11111111111111111111111111111111111111112',\n    name: 'Wrapped SOL',\n    symbol: 'SOL',\n    decimals: 9,\n    logoURI: 'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n    tags: [ 'verified', 'community', 'strict' ],\n    daily_volume: 2873455332.377303,\n    created_at: '2024-04-26T10:56:58.893768Z',\n    freeze_authority: null,\n    mint_authority: null,\n    permanent_delegate: null,\n    minted_at: null,\n    extensions: { coingeckoId: 'wrapped-solana' }\n},\n{\n    address: 'JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN',\n    name: 'Jupiter',\n    symbol: 'JUP',\n    decimals: 6,\n    logoURI: 'https://static.jup.ag/jup/icon.png',\n    tags: [ 'verified', 'strict', 'community', 'birdeye-trending' ],\n    daily_volume: 79535977.0513354,\n    created_at: '2024-04-26T10:56:58.893768Z',\n    freeze_authority: null,\n    mint_authority: null,\n    permanent_delegate: null,\n    minted_at: '2024-01-25T08:54:23Z',\n    extensions: { coingeckoId: 'jupiter-exchange-solana' }\n},\n\n...",
  "item_type": "markdown",
  "module_path": "temp_jupiter_docs/docs/501-token-api/v1.md",
  "extracted_at": "2025-09-03T01:39:45.494695Z"
}