{
  "url": "file://temp_jupiter_docs/docs/300-tool-kits/plugin/README.md",
  "content": "description: \"An overview of Jupiter Plugin and its core features.\"\ntitle: \"Integrate Jupiter Plugin\" \n \n Jupiter Plugin is an open-source, lightweight, plug-and-play version of Jupiter that allows you to seamlessly integrate end-to-end swap functionality into your application with minimal effort - with just a few lines of code, you can embed a fully functional swap interface directly into your website while providing the same powerful Ultra Mode swap experience found on https://jup.ag. \n :::info Plugin Playground\nTry out the  Plugin Playground  to experience the full swap features and see the different customization options with code snippets. \n To view the open-source code, visit the  GitHub repository .\n::: \n :::info Quick Start\nTo quick start your integration, check out the  Next.js ,  React  or  HTML  app examples.\n::: \n Key Features \n \n Seamless Integration : Embed Jupiter's swap functionality directly into your application without redirects. \n Multiple Display Options : Choose between integrated, widget, or modal display modes. \n Customizable Options : Configure the swap form to match your application's needs. \n RPC-less : Integrate Plugin without any RPCs, Ultra handles transaction sending, wallet balances and token information. \n Ultra Mode : Access to all features of Ultra Mode, read more about it in the  Ultra API docs . \n \n Getting Started \n When integrating Plugin, there are a few integration methods to think about, and choose the one that best fits your application's architecture and requirements. \n Integration Methods \n \n Using Window Object  - Simplest way to add and initialize Plugin. \n Using NPM Package  - Install via  npm install @jup-ag/plugin  and initialize as a module (will require you to maintain its dependencies). \n \n Wallet Integration \n \n Wallet Standard Support : For applications without existing wallet provider, Plugin will provide a wallet adapter and connection - powered by  Unified Wallet Kit . \n Passthrough Wallet : For applications with existing wallet provider(s), set  enableWalletPassthrough=true  with context, and Plugin will allow the application to pass through the existing wallet provider's connection to Plugin. \n \n Adding Fees to Plugin \n \n Referral Account : You can create a referral account via  scripts  or  Referral Dashboard . \n Referral Fee : You can set the referral fee and account in the  formProps  interface when you initialize the Plugin. \n \n Quick Start Guides \n In the next sections, we'll walk you through the steps to integrate Jupiter Plugin into different types of web applications from scratch. \n \n Next.js \n React \n HTML \n \n By integrating Jupiter Plugin into your application, you can seamlessly integrate a fully functional swap interface into your application with minimal effort, while staying at the forefront of Solana DeFi innovation.",
  "item_type": "markdown",
  "module_path": "temp_jupiter_docs/docs/300-tool-kits/plugin/README.md",
  "extracted_at": "2025-09-03T01:39:45.817226Z"
}