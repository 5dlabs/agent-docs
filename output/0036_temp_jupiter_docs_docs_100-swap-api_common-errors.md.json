{
  "url": "file://temp_jupiter_docs/docs/100-swap-api/common-errors.md",
  "content": "sidebar_label: \"Common Errors\"\ndescription: \"Common errors when using the Jupiter Swap API.\"\ntitle: \"Common Errors\" \n\n     Common Errors \n     \n\n In this section, you can find the list of errors that can be returned by the Jupiter Swap API, Swap Program or from other programs like DEXes, System or Token programs. \n Program Errors \n Jupiter Swap Program Errors \n :::note Jupiter Swap Program IDL\nYou can find the full Swap Program IDL here:\nhttps://solscan.io/account/JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4#anchorProgramIdl\n::: \n :::info Abnormal Error Rates\nIf you face high or consistent amounts of errors, please reach out to  Jupiter Discord .\n::: \n Error Code Error Name Debug \n 6001 SlippageToleranceExceeded Try higher fixed slippage or try  dynamicSlippage \n 6008 NotEnoughAccountKeys Likely modified swap transaction causing missing account keys \n 6014 IncorrectTokenProgramID Likely attempted to take platform fees on a Token2022 token (This is also 0x177e) \n 6017 ExactOutAmountNotMatched Similar to slippage \n \n Solana Program Errors \n Program Link \n Token Program https://github.com/solana-program/token/blob/main/program/src/error.rs \n Token2022 Program https://github.com/solana-program/token-2022/blob/main/program/src/error.rs \n Associated Token Account Program https://github.com/solana-program/associated-token-account/blob/main/program/src/error.rs \n Other Solana Programs https://github.com/solana-program \n \n DEX Program Errors \n In the swap transaction, the DEX in routing may return errors. You can find some of their IDLs and/or error codes in an explorer. If they do not support public IDLs or open source code, you can reference the common errors below or if you need additional help, please reach out to  Jupiter Discord . \n Error Description \n Error related to tick array or bitmap extension account Similar to slippage, the price or market has \"moved out of range\", hence the swap transaction failed. \n \n Routing Errors \n The common routing errors you may encounter are usually related to attempting to swap a token that is not tradable on Jupiter, for reasons such as lack of liquidity or the token is not supported. \n Error Description Debug \n NO_ROUTES_FOUND No routes were found for the requested swap Check jup.ag if it's routable Check the liquidity of the token's markets \n COULD_NOT_FIND_ANY_ROUTE Unable to find any valid route for the swap Check jup.ag if it's routable Check the liquidity of the token's markets \n ROUTE_PLAN_DOES_NOT_ CONSUME_ALL_THE_AMOUNT The calculated route cannot process the entire input amount, you can get more output amount by reducing your input amount Try reducing your input amount \n MARKET_NOT_FOUND The specified market address was not found Verify the market address exists and is active \n TOKEN_NOT_TRADABLE The specified token mint is not available for trading Check jup.ag if it's routable Check the liquidity of the token's markets \n NOT_SUPPORTED Generic error for unsupported operations Check the specific error message for details \n CIRCULAR_ARBITRAGE_ IS_DISABLED Attempted to swap a token for itself Input and output tokens must be different \n CANNOT_COMPUTE_ OTHER_AMOUNT_THRESHOLD Failed to calculate the minimum output amount based on slippage Verify the input amount and slippage parameters are valid \n \n Swap Transaction Composing Errors \n Error Description Debug \n MAX_ACCOUNT_GREATER_THAN_MAX The specified number of accounts exceeds the maximum allowed Reduce the number of accounts in the transaction \n INVALID_COMPUTE_UNIT_PRICE_AND_PRIORITIZATION_FEE Both compute unit price and prioritization fee were specified Use either compute unit price or prioritization fee, not both \n FAILED_TO_GET_SWAP_AND_ACCOUNT_METAS Failed to generate the swap transaction Check the error message for specific details \n \n Best Practices \n It is important to understand the error codes when your products are user facing. This will help you provide a better experience for your users, helping them make an informed decision or follow up step to help their transaction succeed. \n :::tip Jup.ag as a reference\nYou can use https://jup.ag/ as a reference to understand how we handle errors on the UI.\n::: \n Error Type Best Practice \n Slippage exceeding threshold Show the user the current slippage tolerance and the incurred slippage \n Insufficient funds Show the user the current balance of the account and the required balance \n Non Jupiter Program Errors Allow the user to retry with a different route and/or exclude the specific DEX from the quote request \n Token not tradable Show the user the token is not tradable and provide context on why it's not tradable",
  "item_type": "markdown",
  "module_path": "temp_jupiter_docs/docs/100-swap-api/common-errors.md",
  "extracted_at": "2025-09-03T01:39:45.623443Z"
}