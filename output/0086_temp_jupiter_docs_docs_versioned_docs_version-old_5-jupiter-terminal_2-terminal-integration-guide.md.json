{
  "url": "file://temp_jupiter_docs/docs_versioned_docs/version-old/5-jupiter-terminal/2-terminal-integration-guide.md",
  "content": "title: Jupiter Terminal Walkthrough\nsidebar_label: \"Walkthrough\"\ndescription: \"Quickly integrate Jupiter Terminal with our guide. Enhance your Solana dapps with ease using our key resources and demos.\" \n\n     Jupiter Terminal Walkthrough: Streamlined Integrations \n     \n\n Jupiter Terminal is an open-sourced, lite version of Jupiter that provides end-to-end swap flow by linking it in your HTML with just a few lines of code. \n :::tip Jupiter Terminal Links \n \n Demo : See all available modes \n Developer Docs : Jupiter Terminal in detail \n Repo \n::: \n \n Here's a quick preview of the modes available. To see more, go to  our Demo page \n \n Example: Jupiter Terminal integration on a Solana Dapp scaffold \n Integrating Jupiter onto your website should be straight-forward. We provide a step-by-step guide here so anyone can do it. \n Here's what you can expect from this tutorial: You'll get Jupiter Terminal launching from Solana Dapp in \"Modal\" mode. \n \n This walkthrough is also available on Youtube: \n \n Watch tutorial on YouTube \n Step-by-step Walkthrough \n Solana Labs Dapp scaffold Repo: https://github.com/solana-labs/dapp-scaffold \n \n Clone Solana Dapp Scaffold repo into your local machine or working environment. \n Update dependencies, in this example it will be  pnpm install \n Fire up the development environment in your localhost, in this example it will be  pnpm dev \n \n \n \n Next, change your network configuration from  devnet  to  mainnet-beta  in  NetworkConfigurationProvider.tsx  file. \n \n \n \n Include Jupiter Terminal script into your  src/pages/_document.tsx  file. \n \n <script src=\"https://terminal.jup.ag/main-v1.js\" data-preload />\n \n \n \n Next, include some of the basic script into  src/views/home/index.tsx  file. \n \n import { Connection, PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from 'utils/notifications';\n \n More info on  @solana/web3.js \n \n \n Next, you will need a working RPC endpoint for the transaction to work properly. In this example, we park our RPC_ENDPOINT in  src/views/home/constant.ts  and import or initialize with  import { RPC_ENDPOINT } from './constant' . \n \n \n :::info\nIt is recommended that you use your own RPC endpoint.\nThis RPC_ENDPOINT is only for demonstration purposes so that this example will run.\n::: \n \n Here comes the  fun part , this is where you can customize the setting and configuration that best fit your dApp or site in  Jupiter Terminal Playground \n \n \n \n Lastly, there's a Code snippet in the Terminal playground with your configuration. Copy the code snippet and plug it directly into your file, in this example it will be  src/views/home/index.tsx  file. \n \n \n \n :::success Please reach out in discord if you need help\nFeel free to reach out to us in  discord  if you experience difficulties, we can help you there.\n:::",
  "item_type": "markdown",
  "module_path": "temp_jupiter_docs/docs_versioned_docs/version-old/5-jupiter-terminal/2-terminal-integration-guide.md",
  "extracted_at": "2025-09-03T01:39:45.826716Z"
}