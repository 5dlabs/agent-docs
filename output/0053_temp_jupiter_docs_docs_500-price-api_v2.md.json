{
  "url": "file://temp_jupiter_docs/docs/500-price-api/v2.md",
  "content": "sidebar_label: \"V2 (Deprecated)\"\ndescription: \"Deprecated version of Price API (V2).\"\ntitle: \"Price API V2 (Deprecated)\" \n\n     Price API V2 (Deprecated) \n     \n\n :::danger DEPRECATED\nThis version of the Price API V2 will be/is deprecated by 1 August 2025. \n Please migrate to  Price API V3  which consists of breaking changes.\n::: \n Price API V2 aims to enhance accuracy by incorporating both  buy  and  sell-side liquidity  to derive the  average price  of the two. This provides more reliable real-time data for SPL tokens. Additionally, V2 provides extra help information like depth and confidence to aid you or your users with decisions. \n :::tip\nThe prices are derived  from Jupiter Swap , which is an aggregate of most markets on Solana.\n::: \n Let’s Get Started \n In this guide, we will be going through the simple price responses and the extra help information. \n Get Price (Only Price) \n Using the root URL and parameters to pass in, it is as simple as the example code below! \n Notice the  ids  parameter with the public key or token address of a token mint, you can also input more than 1 address by comma-separating them. \n Price vs USDC by default \n const priceResponse = await fetch(\n    'https://lite-api.jup.ag/price/v2?ids=JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN,So11111111111111111111111111111111111111112'\n);\n\nconst priceData = await priceResponse.json();\n\nconsole.log(priceData);\n \n Price vsToken \n console.log(JSON.stringify(priceData, null, 2));\n\nconst priceResponseWithVsToken = await fetch(\n    'https://lite-api.jup.ag/price/v2?ids=JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN,So11111111111111111111111111111111111111112&vsToken=So11111111111111111111111111111111111111112'\n);\n\nconst priceDataWithVsToken = await priceResponseWithVsToken.json();\n  \nconsole.log(JSON.stringify(priceDataWithVsToken, null, 2));\n \n From the above example, you should see this response. \n Notice 2 details here: \n \n Usage of  vsToken : The first set of data shows price denoted in USDC while the second set of data denotes in the price of SOL. \n With no  showExtraInfo : There is only 1 price, the derived price is the buy price. \n \n {\n  \"data\": {\n    \"So11111111111111111111111111111111111111112\": {\n      \"id\": \"So11111111111111111111111111111111111111112\",\n      \"type\": \"derivedPrice\",\n      \"price\": \"210.195311500\"\n    },\n    \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\": {\n      \"id\": \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\",\n      \"type\": \"derivedPrice\",\n      \"price\": \"1.084247\"\n    }\n  },\n  \"timeTaken\": 0.00488491\n}\n{\n  \"data\": {\n    \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\": {\n      \"id\": \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\",\n      \"type\": \"derivedPrice\",\n      \"price\": \"0.005158283466279884\"\n    },\n    \"So11111111111111111111111111111111111111112\": {\n      \"id\": \"So11111111111111111111111111111111111111112\",\n      \"type\": \"derivedPrice\",\n      \"price\": \"1\"\n    }\n  },\n  \"timeTaken\": 0.00203215\n}\n \n Get Price (with Extra Info) \n To get extra help information such as confidence level or depth, you will need to pass in  showExtraInfo=true . However, do note that if this is set to  true , you will not be able to apply  vsToken . \n const priceResponseShowExtraInfo = await fetch(\n    'https://lite-api.jup.ag/price/v2?ids=JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN,So11111111111111111111111111111111111111112&showExtraInfo=true'\n);\n\nconst priceDataShowExtraInfo = await priceResponseShowExtraInfo.json();\n  \nconsole.log(JSON.stringify(priceDataShowExtraInfo, null, 2));\n \n Here is the sample response. \n Notice a few details here: \n \n You can see both last swap and current quote prices. \n You can see both buy and sell prices of the different types. \n You can see the unix timestamps. \n You can see the confidence and depth information. \n \n {\n  \"data\": {\n    \"So11111111111111111111111111111111111111112\": {\n      \"id\": \"So11111111111111111111111111111111111111112\",\n      \"type\": \"derivedPrice\",\n      \"price\": \"210.734462500\",\n      \"extraInfo\": {\n        \"lastSwappedPrice\": {\n          \"lastJupiterSellAt\": 1731599242,\n          \"lastJupiterSellPrice\": \"210.52136418853988\",\n          \"lastJupiterBuyAt\": 1731599242,\n          \"lastJupiterBuyPrice\": \"210.5553945976539\"\n        },\n        \"quotedPrice\": {\n          \"buyPrice\": \"210.578367000\",\n          \"buyAt\": 1731599236,\n          \"sellPrice\": \"210.890558000\",\n          \"sellAt\": 1731599236\n        },\n        \"confidenceLevel\": \"high\",\n        \"depth\": {\n          \"buyPriceImpactRatio\": {\n            \"depth\": {\n              \"10\": 0.08186978526745424,\n              \"100\": 0.1154072102743595,\n              \"1000\": 0.13766677800178445\n            },\n            \"timestamp\": 1731599207\n          },\n          \"sellPriceImpactRatio\": {\n            \"depth\": {\n              \"10\": 0.1211367007033883,\n              \"100\": 0.059088081285986374,\n              \"1000\": 0.16445602954342006\n            },\n            \"timestamp\": 1731599207\n          }\n        }\n      }\n    },\n    \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\": {\n      \"id\": \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\",\n      \"type\": \"derivedPrice\",\n      \"price\": \"1.088080\",\n      \"extraInfo\": {\n        \"lastSwappedPrice\": {\n          \"lastJupiterSellAt\": 1731599239,\n          \"lastJupiterSellPrice\": \"1.0857748923629837\",\n          \"lastJupiterBuyAt\": 1731599241,\n          \"lastJupiterBuyPrice\": \"1.0879206578017573\"\n        },\n        \"quotedPrice\": {\n          \"buyPrice\": \"1.088085\",\n          \"buyAt\": 1731599236,\n          \"sellPrice\": \"1.088076\",\n          \"sellAt\": 1731599236\n        },\n        \"confidenceLevel\": \"high\",\n        \"depth\": {\n          \"buyPriceImpactRatio\": {\n            \"depth\": {\n              \"10\": 0.05662764967204097,\n              \"100\": 0.17463135504551536,\n              \"1000\": 0.7379832960897882\n            },\n            \"timestamp\": 1731599207\n          },\n          \"sellPriceImpactRatio\": {\n            \"depth\": {\n              \"10\": 0.03504801758790863,\n              \"100\": 0.16858843747627028,\n              \"1000\": 3.0578377037958586\n            },\n            \"timestamp\": 1731599207\n          }\n        }\n      }\n    }\n  },\n  \"timeTaken\": 0.003665979\n}\n \n Limitations \n Query limits \n \n You can query up to 100  id s at once. \n \n If the price for a token cannot be found, it is either because \n \n The token is not tradable on Jupiter - it does not fit Jupiter’s routing criteria. \n There is no route for this token to SOL. \n sellPrice ,  sellAt  &  lastSwappedPrice  might be null in cases \n If  sellPrice  &  sellAt  is not cached and cannot be retrieved the provided information will be  buyPrice . \n lastSwappedPrice  might be null if the token has not been traded recently or cannot be retrieved. \n Tokens that have not been traded via USDC in the last 3 days. \n Note that this is only for swaps done via Jupiter, it will not be done for swaps done e.g. directly on Raydium’s platform \n \n buyPriceImpactRatio  &  sellPriceImpactRatio  in the depth field might be null in cases \n \n We are to get the respective price impacts for the 10, 100 and 1000 SOL buys or sells \n It could be because the token’s liquidity does not have enough liquidity for larger values \n We cannot find the sell quote for the respective token and the buy/sell values \n \n Read about how we derive confidenceLevel or depth in Price API V2 here.",
  "item_type": "markdown",
  "module_path": "temp_jupiter_docs/docs/500-price-api/v2.md",
  "extracted_at": "2025-09-03T01:39:45.745394Z"
}