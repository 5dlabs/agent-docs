{
  "url": "file://temp_jupiter_docs/docs_versioned_docs/version-old/2-apis/4-price-api.md",
  "content": "sidebar_label: (Deprecated) Price API V1\ndescription: Get real-time on-chain prices for any token with Jupiter Price API. Supports up to 100 tokens per call. Easy integration for developers.\ntitle: \"(Deprecated) Price API: Get On-Chain Price For Any Token\" \n\n      (Deprecated) Jupiter Price API v1: Unlock Real-Time On-Chain Pricing for Any Token \n     \n\n \n{`\n  .api-method-box {\n    border-radius: 8px;\n    margin: 16px 0;\n    display: inline;\n    padding: 4px;\n    font-weight: 700;\n    margin-right: 8px;\n    font-size: 12px;\n    color: white\n  }\n\n.get {\n  border: 1px solid #018847;\n  background-color: #018847 !important;\n}\n\n.post {\n  border: 1px solid #eaba0c;\n  background-color: #eaba0c !important;\n}\n\n  .api-method-path {\n    font-size: 14px;\n    display: inline;\n  }\n`} \n :::warning\nThis endpoint is no longer maintained. Use  Pricing API V2  instead.\n::: \n Utilizing the powerful Jupiter Price API makes getting precise and real-time pricing for all SPL tokens simple. With the ability to fetch prices for up to 100 tokens, you'll never need another price API again! \n The Jupiter Price API comes with the option to specify another token as the base unit see \"vsToken\". \n :::info\nWe support fetching the prices for up to 100 tokens in one call right now to manage performance. If you have a use case that is not supported yet, let us know in  #developer-support  in our discord:  discord.gg/jup \n::: \n Usage \n Jupiter Price API will always return  the unit buy price for the token  specified with the  ids  parameter. This price is based on the best pricing data available across all DEXes queried. Please remember the addresses and token tickers are  case-sensitive . \n For example, the most basic call will provide the unit price for the token based on the  buy amount of USDC .  \n # Unit price of 1 SOL based on the buy amount of USDC\nhttps://price.jup.ag/v6/price?ids=SOL\n\n{\n  \"data\": {\n    \"SOL\": {\n      \"id\": \"So11111111111111111111111111111111111111112\",\n      \"mintSymbol\": \"SOL\",\n      \"vsToken\": \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n      \"vsTokenSymbol\": \"USDC\",\n      \"price\": 30.389174403\n    }\n  },\n  \"timeTaken\": 0.0003002400007972028\n}\n \n If you include a  vsToken , it will change the buy token. For example, this call will return the unit price for  1 JUP, based on the buy amount of Bonk . Simply put, the  vsToken  argument tells you how much of the  vsToken  (Bonk in this case) you will need to buy the target token (JUP). So for every one JUP we want to buy, we will need 44,580 Bonk. \n # Unit price of 1 JUP based on the buy amount of Bonk\nhttps://price.jup.ag/v6/price?ids=JUP&vsToken=Bonk\n\n{\n    \"data\": {\n        \"JUP\": {\n            \"id\": \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\",\n            \"mintSymbol\": \"JUP\",\n            \"vsToken\": \"DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263\",\n            \"vsTokenSymbol\": \"Bonk\",\n            \"price\": 44580.353494\n        }\n    },\n    \"timeTaken\": 0.0002948529999997618\n}\n \n Both the  ids  and  vsToken  can also be specified using input mints. \n # Specifying both id and vsToken with mint addresses\nhttps://price.jup.ag/v6/price?ids=7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs&vsToken=So11111111111111111111111111111111111111112\n\n{\n  \"data\": {\n    \"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\": {\n      \"id\": \"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\",\n      \"mintSymbol\": \"ETH\",\n      \"vsToken\": \"So11111111111111111111111111111111111111112\",\n      \"vsTokenSymbol\": \"SOL\",\n      \"price\": 43.28938739\n    }\n  },\n  \"timeTaken\": 0.039186676000099396\n}\n \n Try it out! \n Try the API calls by making simple GET request via your browser or one of the terminal commands below: \n \n   Click to play videos \n   \n     \n    Your browser does not support the video tag.\n   \n   \n     \n    Your browser does not support the video tag.\n   \n \n \n   \n     \n       GET \n       https://price.jup.ag/v6/price \n     \n   \n curl -X 'GET' 'https://price.jup.ag/v6/price?ids=SOL'\n \n Parameters: \n \n ids (required, string) : Supports symbol or address of a token. You can also pass in an array of ids to with  ,  as separator.\n \n Address mode are case-sensitive\n \n mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So \n mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So , So11111111111111111111111111111111111111112 \n \n \n Symbol mode are case-sensitive\n \n SOL ,  BTC ,  mSOL \n \n \n \n \n vsToken (string) :     Supports symbol or address of a token.\n \n Defaults to  USDC \n Symbol mode are case-sensitive\n \n SOL ,  BTC ,  mSOL \n \n \n Address mode are case-sensitive\n \n EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v \n \n \n \n \n \n Typings \n \n id ( string )  - Address of a token \n mintSymbol ( string )  - Symbol of id token \n vsToken ( string )  - Address of vs token \n vsTokenSymbol ( string )  - Symbol of vs token \n price ( number )  - Default to 1 unit of the token worth in USDC if vsToken is not specified \n timeTaken ( number )  - API internal compute response time \n \n Response \n \n     \n       •  \n       \n       200: OK \n        Success Response\n       \n     \n {\n  \"data\": {\n    \"SOL\": {\n      \"id\": \"So11111111111111111111111111111111111111112\",\n      \"mintSymbol\": \"SOL\",\n      \"vsToken\": \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n      \"vsTokenSymbol\": \"USDC\",\n      \"price\": 165.827567017\n    }\n  },\n  \"timeTaken\": 0.0004649519978556782\n}\n \n :::tip\nYou will get an empty response if the token is not found or there is an error in the params!\n::: \n \n   \n   •  default   Error Response \n {\n  \"data\": {},\n  \"timeTaken\": 0.00007273000665009022\n}\n \n \n \n \n   \n     \n       GET \n       https://price.jup.ag/v6/price?ids=SOL&vsToken=mSOL \n     \n   \n curl -X 'GET' 'https://price.jup.ag/v6/price?ids=SOL&vsToken=mSOL'\n \n Response \n \n     \n       •  \n       \n       200: OK \n        Success Response\n       \n     \n \n{\n    \"data\": {\n        \"SOL\": {\n            \"id\": \"So11111111111111111111111111111111111111112\",\n            \"mintSymbol\": \"SOL\",\n            \"vsToken\": \"mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So\",\n            \"vsTokenSymbol\": \"mSOL\",\n            \"price\": 0.839028001\n        }\n    },\n    \"timeTaken\": 0.00020902999676764011\n}\n\n \n \n \n Rate Limits:  This endpoint is rate limited to  600 requests/min . \n HTTP Status Codes \n Code Error Message \n 400  Amount lesser or equals to 0   No routes found for trading pairs \n 404 Symbol or address not found for either input or vsToken \n 409 Duplicate symbol found for  input  or  vsToken .   The server will respond an error structure which contains the conflict addresses. User will have to use address mode instead.  { \"error\": \"Duplicated symbol found for PERP, use one of the address instead\", \"addresses\": [ \"D68NB5JkzvyNCZAvi6EGtEcGvSoRNPanU9heYTAUFFRa\", \"9BsnSWDPfbusseZfnXyZ3un14CyPMZYvsKjWY3Y8Gbqn\", \"EBQ6gWBQNxA2zB4twR5GWP6CkeAhqZZZeDgeP7BTtdM3\"  ]}",
  "item_type": "markdown",
  "module_path": "temp_jupiter_docs/docs_versioned_docs/version-old/2-apis/4-price-api.md",
  "extracted_at": "2025-09-03T01:39:45.843360Z"
}