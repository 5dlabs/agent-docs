{
  "url": "file://temp_jupiter_docs/docs/100-swap-api/1-get-quote.md",
  "content": "sidebar_label: \"Get Quote\"\ndescription: \"Start using Jupiter Swap API by getting a Quote.\"\ntitle: \"Get Quote\" \n\n     Get Quote \n     \n\n :::note \n \n Lite URL:  https://lite-api.jup.ag/swap/v1/quote \n Pro URL:  https://api.jup.ag/swap/v1/quote \n \n To upgrade to Pro or understand our rate limiting, please refer to this section. \n \n API Key Setup \n API Rate Limit \n::: \n \n :::warning Please use the Swap API at your own discretion. \n The Jupiter UI at https://jup.ag/ contains multiple safeguards, warnings and default settings to guide our users to trade safer. Jupiter is not liable for losses incurred by users on other platforms. \n If you need clarification or support, please reach out to us in  Discord .\n::: \n :::warning Routing Engine\nThe quotes from Swap API are from the Jupiter Metis v1 Routing Engine.\n::: \n The Quote API enables you to tap into the Jupiter Metis v1 Routing Engine, which accesses the deep liquidity available within the DEXes of Solana's DeFi ecosystem. In this guide, we will walkthrough how you can get a quote for a specific token pair and other related parameters. \n Let’s Get Started \n In this guide, we will be using the Solana web3.js package. \n If you have not set up your environment to use the necessary libraries and the connection to the Solana network, please head over to  Environment Setup . \n :::tip API Reference\nTo fully utilize the Quote API, check out the  Quote API Reference .\n::: \n Quote API \n The most common trading pair on Solana is SOL and USDC, to get a quote for this specific token pair, you need to pass in the required parameters such as: \n Parameters Description \n inputMint The pubkey or token mint address e.g. So11111111111111111111111111111111111111112 \n outputMint The pubkey or token mint address e.g. EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v \n amount The number of  input  tokens before the decimal is applied, also known as the “raw amount” or “integer amount” in lamports for SOL or atomic units for all other tokens. \n slippageBps The number of basis points you can tolerate to lose during time of execution. e.g. 1% = 100bps \n \n Get Quote \n Using the root URL and parameters to pass in, it is as simple as the example code below! \n const quoteResponse = await (\n    await fetch(\n        'https://lite-api.jup.ag/swap/v1/quote?inputMint=So11111111111111111111111111111111111111112&outputMint=EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v&amount=100000000&slippageBps=50&restrictIntermediateTokens=true'\n    )\n  ).json();\n  \nconsole.log(JSON.stringify(quoteResponse, null, 2));\n \n Example response: \n {\n  \"inputMint\": \"So11111111111111111111111111111111111111112\",\n  \"inAmount\": \"100000000\",\n  \"outputMint\": \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n  \"outAmount\": \"16198753\",\n  \"otherAmountThreshold\": \"16117760\",\n  \"swapMode\": \"ExactIn\",\n  \"slippageBps\": 50,\n  \"platformFee\": null,\n  \"priceImpactPct\": \"0\",\n  \"routePlan\": [\n    {\n      \"swapInfo\": {\n        \"ammKey\": \"5BKxfWMbmYBAEWvyPZS9esPducUba9GqyMjtLCfbaqyF\",\n        \"label\": \"Meteora DLMM\",\n        \"inputMint\": \"So11111111111111111111111111111111111111112\",\n        \"outputMint\": \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n        \"inAmount\": \"100000000\",\n        \"outAmount\": \"16198753\",\n        \"feeAmount\": \"24825\",\n        \"feeMint\": \"So11111111111111111111111111111111111111112\"\n      },\n      \"percent\": 100\n    }\n  ],\n  \"contextSlot\": 299283763,\n  \"timeTaken\": 0.015257836\n}\n \n :::tip\n outAmount  refers to the best possible output amount based on the route at time of quote, this means that  slippageBps  does not affect.\n::: \n What’s Next \n Now, you are able to get a quote, next steps is to submit a transaction to execute the swap based on the quote given. Let’s go! \n \n Additional Resources \n Restrict Intermediate Tokens \n restrictIntermediateTokens  can be set to  true  . If your route is routed through random intermediate tokens, it will fail more frequently. With this, we make sure that your route is only routed through highly liquid intermediate tokens to give you the best price and more stable route. \n Legacy Transactions \n All Jupiter swaps are using Versioned Transactions and  Address Lookup Tables . However, not all wallets support Versioned Transactions yet, so if you detect a wallet that does not support versioned transactions, you will need to set the  asLegacyTransaction  parameter to  true . \n Adding Fees \n By using the Quote API in your app, you can add a fee to charge your users. You can refer to the  platformFeeBps  parameter and to add it to your quote and in conjuction, add  feeAccount  (it can be any valid token account) to your swap request. \n Direct Routes \n In some cases, you may want to restrict the routing to only go through 1 market. You can use the  onlyDirectRoutes  parameter to achieve this. This will ensure routing will only go through 1 market. \n :::note \n \n If there are no direct routes, there will be no quote. \n If there is only 1 market but it is illiquid, it will still return the route with the illiquid market.\n::: \n \n :::warning unfavorable trades\nPlease be aware that using  onlyDirectRoutes  can often yield unfavorable trades or outcomes.\n::: \n Max Accounts \n In some cases, you may want to add more accounts to the transaction for specific use cases, but it might exceed the transaction size limit. You can use the  maxAccounts  parameter to limit the number of accounts in the transaction. \n :::warning unfavorable trades\nPlease be aware that the misuse of  maxAccounts  can yield unfavorable trades or outcomes.\n::: \n :::tip \n \n Refer to the  Requote with Lower Max Accounts  guide for more information on how to requote and adjust the swap when using  maxAccounts .\n::: \n \n :::note \n \n maxAccounts  is an estimation and the actual number of accounts may vary. \n maxAccounts  only applies to the total number of accounts of the inner swaps in the swap instruction and not any of the setup, cleanup or other instructions (see the example below). \n We recommend setting  maxAccounts  to 64 \n Keep  maxAccounts  as large as possible, only reduce  maxAccounts  if you exceed the transaction size limit. \n If  maxAccounts  is set too low, example to 30, the computed route may drop DEXes/AMMs like Meteora DLMM that require more than 30 accounts. \n \n \n**Jupiter has 2 types of routing instructions**, if you plan to limit `maxAccounts`, you will need to account for if the market is routable with [ALTs](https://docs.solana.com/developing/lookup-tables) or not:\n- **`Routing Instruction`** (Simple Routing): The market is still new, and we do not have ALTs set up for the market, hence the number of accounts required is higher as there are more accounts required.\n- **`Shared Accounts Routing Instruction`**: The market has sufficient liquidity (and has been live for a while), and we have [ALTs](https://docs.solana.com/developing/lookup-tables) set up for the market to be used in the routing instruction, hence the number of accounts required is lower as there are less accounts required.\n:::\n \n     \n         \n             \n                 Counting the accounts using an example transaction \n             \n         \n     \n In this transaction : \n <img src=\"/dev/max_accounts_stabble.png\" alt=\"Max Accounts Stabble Example\" style={{ width: \"50%\" }} />\n<img src=\"/dev/max_accounts_lifinity_v2.png\" alt=\"Max Accounts Lifinity V2 Example\" style={{ width: \"50%\" }} />\n<img src=\"/dev/max_accounts_shared_accounts_route.png\" alt=\"Max Accounts Shared Accounts Route Example\" style={{ width: \"50%\" }} /> \n \n You can see that there are a total of 2 inner swaps where the number of accounts respectively are\n \n Stabble Stable Swap: 12 \n Lifinity Swap V2: 13 \n Total: 25 \n \n \n The  maxAccounts  parameter is to control this value - to limit the total number of accounts in the inner swaps. \n It doesn’t take into the consideration of a few things:\n \n Each of the inner swap's program address, so 2 in this case. \n Top level routing instruction accounts where in this case Shared Accounts Route is 13 and Route is 9. \n There are also other accounts that are required to set up, clean up, etc which are not counted in the  maxAccounts  parameter \n \n \n \n \n \n     \n         \n             \n                 List of DEXes and their required accounts \n             \n         \n     \n Notes: \n \n Values in the table are only estimations and the actual number of accounts may vary. \n Min accounts are needed when we have already created the necessary  ALTs  for a specific pool resulting in less accounts needed in a Shared Accounts Routing context. \n Sanctum and Sanctum Infinity are unique, and their accounts are dynamic. \n \n DEX Max Min \n Meteora DLMM 47 19 \n Meteora 45 18 \n Moonshot 37 15 \n Obric 30 12 \n Orca Whirlpool 30 12 \n Pumpfun AMM 42 17 \n Pumpfun Bonding Curve 40 16 \n Raydium 45 18 \n Raydium CLMM 45 19 \n Raydium CPMM 37 14 \n Sanctum 80 80 \n Sanctum Infinity 80 80 \n Solfi 22 9",
  "item_type": "markdown",
  "module_path": "temp_jupiter_docs/docs/100-swap-api/1-get-quote.md",
  "extracted_at": "2025-09-03T01:39:45.561561Z"
}