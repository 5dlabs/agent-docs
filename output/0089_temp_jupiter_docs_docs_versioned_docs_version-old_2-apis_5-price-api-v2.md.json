{
  "url": "file://temp_jupiter_docs/docs_versioned_docs/version-old/2-apis/5-price-api-v2.md",
  "content": "sidebar_label: Price API V2\ndescription: Get real-time on-chain prices for any token with Jupiter Price API V2.\ntitle: \"Price API V2: Improved On-Chain Price For Any Token\" \n\n     Jupiter Price API V2: Improved On-Chain Pricing for Any Token \n     \n\n \n{`\n  .api-method-box {\n    border-radius: 8px;\n    margin: 16px 0;\n    display: inline;\n    padding: 4px;\n    font-weight: 700;\n    margin-right: 8px;\n    font-size: 12px;\n    color: white\n  }\n\n.get {\n  border: 1px solid #018847;\n  background-color: #018847 !important;\n}\n\n.post {\n  border: 1px solid #eaba0c;\n  background-color: #eaba0c !important;\n}\n\n  .api-method-path {\n    font-size: 14px;\n    display: inline;\n  }\n`} \n Jupiter Price API V2 is an improved version of the Price API, aiming to enhance accuracy by incorporating both  buy  and  sell-side liquidity  to derive the  average price  of the two. This provides more reliable real-time data for SPL tokens. \n :::info Support\nIf you have a use case that is not supported yet, let us know in #developer-support in our discord:  discord.gg/jup \n::: \n Usage \n Jupiter Price API will always return  the unit buy price for the token  specified with the  ids  parameter. This price is based on the best pricing data available across all DEXes queried. Please remember the addresses are  case-sensitive . \n For example, the most basic call will provide the unit price for the token based on the  buy amount of USDC . \n # Unit price of 1 JUP & 1 SOL based on the Derived Price in USDC\nhttps://api.jup.ag/price/v2?ids=JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN,So11111111111111111111111111111111111111112\n\n{\n    \"data\": {\n        \"So11111111111111111111111111111111111111112\": {\n            \"id\": \"So11111111111111111111111111111111111111112\",\n            \"type\": \"derivedPrice\",\n            \"price\": \"133.890945000\"\n        },\n        \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\": {\n            \"id\": \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\",\n            \"type\": \"derivedPrice\",\n            \"price\": \"0.751467\"\n        }\n    },\n    \"timeTaken\": 0.00395219\n}\n \n Including  showExtraInfo  provides more detailed information, helping you determine the most suitable price for your use case. \n # Unit price of 1 JUP & 1 SOL based on the Derived Price in USDC\nhttps://api.jup.ag/price/v2?ids=JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN,So11111111111111111111111111111111111111112&showExtraInfo=true\n\n{\n    \"data\": {\n        \"So11111111111111111111111111111111111111112\": {\n            \"id\": \"So11111111111111111111111111111111111111112\",\n            \"type\": \"derivedPrice\",\n            \"price\": \"132.176540000\",\n            \"extraInfo\": {\n                \"lastSwappedPrice\": {\n                    \"lastJupiterSellAt\": 1726232167,\n                    \"lastJupiterSellPrice\": \"132.1815918927837\",\n                    \"lastJupiterBuyAt\": 1726232168,\n                    \"lastJupiterBuyPrice\": \"132.3113422757551\"\n                },\n                \"quotedPrice\": {\n                    \"buyPrice\": \"132.183970000\",\n                    \"buyAt\": 1726232166,\n                    \"sellPrice\": \"132.169110000\",\n                    \"sellAt\": 1726232168\n                },\n                \"confidenceLevel\": \"high\",\n                \"depth\": {\n                    \"buyPriceImpactRatio\": {\n                        \"depth\": {\n                            \"10\": 0.011976036126034885,\n                            \"100\": 0.05308426581530216,\n                            \"1000\": 0.1168049189323158\n                        },\n                        \"timestamp\": 1726232167\n                    },\n                    \"sellPriceImpactRatio\": {\n                        \"depth\": {\n                            \"10\": 0.01582101846363979,\n                            \"100\": 0.03166775883921609,\n                            \"1000\": 0.06880960201997424\n                        },\n                        \"timestamp\": 1726232167\n                    }\n                }\n            }\n        },\n        \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\": {\n            \"id\": \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\",\n            \"type\": \"derivedPrice\",\n            \"price\": \"0.742851\",\n            \"extraInfo\": {\n                \"lastSwappedPrice\": {\n                    \"lastJupiterSellAt\": 1726232039,\n                    \"lastJupiterSellPrice\": \"0.7442999683998961\",\n                    \"lastJupiterBuyAt\": 1726232097,\n                    \"lastJupiterBuyPrice\": \"0.7431593824200015\"\n                },\n                \"quotedPrice\": {\n                    \"buyPrice\": \"0.742917\",\n                    \"buyAt\": 1726232165,\n                    \"sellPrice\": \"0.742784\",\n                    \"sellAt\": 1726232168\n                },\n                \"confidenceLevel\": \"high\",\n                \"depth\": {\n                    \"buyPriceImpactRatio\": {\n                        \"depth\": {\n                            \"10\": 0.009393981894911491,\n                            \"100\": 0.08127843280940066,\n                            \"1000\": 0.3417234655853332\n                        },\n                        \"timestamp\": 1726232167\n                    },\n                    \"sellPriceImpactRatio\": {\n                        \"depth\": {\n                            \"10\": 0.05174412761856207,\n                            \"100\": 0.06288330728860267,\n                            \"1000\": 0.281508676845538\n                        },\n                        \"timestamp\": 1726232167\n                    }\n                }\n            }\n        }\n    },\n    \"timeTaken\": 0.00388851\n}\n \n If you include a  vsToken , the buy token can be specified. \n For example, this call will return the unit price for  1 JUP, based on the buy amount of Bonk . \n Simply put, the  vsToken  argument tells you how much of the  vsToken  (Bonk in this case) you will need to buy the target token (JUP). For every one JUP we want to buy, we will need ~40,560 Bonk. \n :::note\n vsToken  cannot be used with  showExtraInfo  when it's true. A  response 400: Bad request  would be returned.\n::: \n # Unit price of 1 JUP based on the buy amount of Bonk\nhttps://api.jup.ag/price/v2?ids=JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN&vsToken=DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263&showExtraInfo=true\n\n{\n  \"data\": {\n    \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\": {\n      \"id\": \"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\",\n      \"type\": \"derivedPrice\",\n      \"price\": \"40560.32136735473\"\n    },\n    \"DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263\": {\n      \"id\": \"DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263\",\n      \"type\": \"derivedPrice\",\n      \"price\": \"1\"\n    }\n  },\n  \"timeTaken\": 0.003043602\n}\n \n Try it out! \n Try the API calls by making simple GET request via your browser or one of the terminal commands below: \n \n   \n     \n       GET \n       https://api.jup.ag/price/v2 \n     \n   \n curl -X 'GET' 'https://api.jup.ag/price/v2?ids=So11111111111111111111111111111111111111112&showExtraInfo=true'\n \n Parameters: \n \n ids (required, string) : Supports symbol or address of a token. You can also pass in an array of ids to with  ,  as separator. Maximum of 100 unique IDs allowed.\n \n Address mode are case-sensitive\n \n mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So \n mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So , So11111111111111111111111111111111111111112 \n \n \n \n \n showExtraInfo(Optional, boolean) :  A boolean flag to indicate whether to include additional information in the response.\n \n defaults to false if not specified \n \n \n \n Response \n \n     \n       •  \n       \n       200: OK \n        Success Response\n       \n     \n {\n    \"data\": {\n        \"So11111111111111111111111111111111111111112\": {\n            \"id\": \"So11111111111111111111111111111111111111112\",\n            \"type\": \"derivedPrice\",\n            \"price\": \"132.280970000\",\n            \"extraInfo\": {\n                \"lastSwappedPrice\": {\n                    \"lastJupiterSellAt\": 1726231876,\n                    \"lastJupiterSellPrice\": \"132.29239989531536\",\n                    \"lastJupiterBuyAt\": 1726231877,\n                    \"lastJupiterBuyPrice\": \"132.19714417319207\"\n                },\n                \"quotedPrice\": {\n                    \"buyPrice\": \"132.286960000\",\n                    \"buyAt\": 1726231878,\n                    \"sellPrice\": \"132.274980000\",\n                    \"sellAt\": 1726231878\n                },\n                \"confidenceLevel\": \"high\",\n                \"depth\": {\n                    \"buyPriceImpactRatio\": {\n                        \"depth\": {\n                            \"10\": 0.03363618661226941,\n                            \"100\": 0.08002735245686805,\n                            \"1000\": 0.14333736423496682\n                        },\n                        \"timestamp\": 1726231876\n                    },\n                    \"sellPriceImpactRatio\": {\n                        \"depth\": {\n                            \"10\": 0.02031954946621532,\n                            \"100\": 0.020354720955966937,\n                            \"1000\": 0.06331837713363023\n                        },\n                        \"timestamp\": 1726231876\n                    }\n                }\n            }\n        }\n    },\n    \"timeTaken\": 0.00463168\n}\n \n \n   \n   •  default   Error Response \n \n{\n    \"data\": {\n        \"So11111111111111111111111111111111111111112\": {\n            \"id\": \"So11111111111111111111111111111111111111112\",\n            \"type\": \"derivedPrice\",\n            \"price\": \"134.170633378\"\n        },\n        \"8agCopCHWdpj7mHk3JUWrzt8pHAxMiPX5hLVDJh9TXWv\": null\n    },\n    \"timeTaken\": 0.003186833\n}\n \n \n \n Rate Limits:  This endpoint is rate limited to  600 requests/min . \n Making sense of the data \n Field Explanation \n type derivedPrice  is the midpoint between  buyPrice  and  sellPrice . \n price based on the  type   above \n extraInfo extraInfo  Fields (More info below) \n buyPrice An  Option<String>  representing the quoted buy price. \n sellPrice An  Option<String>  representing the quoted sell price. \n timeTaken A  f32  representing the time taken for the request. \n lastSwappedPrice A  SwapPrice  struct that holds the last  Jupiter  swapped price details. \n \n extraInfo  Fields \n Note: This is flattened, please refer to the JSON response. \n lastJupiterSellAt Epoch seconds of the  lastJupiterSellPrice . \n lastJupiterSellPrice Price of last  Jupiter  sell \n lastJupiterBuyAt Epoch seconds of the  lastJupiterBuyPrice . \n lastJupiterBuyPrice Price of last  Jupiter  buy \n buyPrice An  Option<String>  representing the quoted buy price. \n buyAt Epoch seconds of when the buy quote was retrieved. \n sellPrice An  Option<String>  representing the quoted sell price. \n sellAt Epoch seconds of when the sell quote was retrieved. \n confidenceLevel A  String  indicating the confidence level (High, Medium, or Low). \n buyPriceImpactRatio A  Map  broken down into 3 key-value pairs: 10, 100 & 1000 (SOL). The value is expressed as a  percentage . \n sellPriceImpactRatio A  Map  broken down into 3 key-value pairs: 10, 100 & 1000 (SOL). The value is expressed as a  percentage . \n \n Limitations \n If the price for a token  cannot  be found, it is either because \n \n The token is not tradable on Jupiter - it does not fit Jupiter’s routing criteria. \n There is no route for this token to  SOL . \n \n sellPrice ,  sellAt  &  lastSwappedPrice  might be  null  in cases \n \n sellPrice  &  sellAt  is not cached and cannot be retrieved (in these cases  type  will be  buyPrice , same as PriceV1). \n lastSwappedPrice  might be null if the token has not been traded recently or cannot be retrieved w\n \n Tokens that have not been traded via USDC in the last 3 days. \n Note that this is only for swaps done via Jupiter, it will not be done for swaps done e.g. directly on Raydium’s platform \n \n \n \n buyPriceImpactRatio   &  sellPriceImpactRatio  in the  depth  field might be null in cases \n \n We are to get the respective price impacts for the 10, 100 and 1000 SOL buys or sells\n \n It could be because the token’s liquidity does not have enough liquidity for larger values \n \n \n We cannot find the sell quote for the respective token and the buy/sell values \n \n Want to find out more about how we derive  confidenceLevel  or  depth ?\nRead our  research article  on the  Price V2 API .",
  "item_type": "markdown",
  "module_path": "temp_jupiter_docs/docs_versioned_docs/version-old/2-apis/5-price-api-v2.md",
  "extracted_at": "2025-09-03T01:39:45.835610Z"
}